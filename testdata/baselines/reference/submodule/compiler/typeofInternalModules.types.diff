--- old.typeofInternalModules.types
+++ new.typeofInternalModules.types
@@= skipped -15, +15 lines =@@
 }
 
 import importInst = Outer.instantiated;
->importInst : typeof importInst
+>importInst : typeof instantiated
 >Outer : typeof Outer
->instantiated : typeof importInst
+>instantiated : typeof instantiated
 
 import importUninst = Outer.uninstantiated;
 >importUninst : any
@@= skipped -10, +10 lines =@@
 >uninstantiated : any
 
 var x1: typeof importInst.C = importInst.C;
->x1 : typeof importInst.C
->importInst.C : typeof importInst.C
->importInst : typeof importInst
->C : typeof importInst.C
->importInst.C : typeof importInst.C
->importInst : typeof importInst
->C : typeof importInst.C
+>x1 : typeof C
+>importInst.C : typeof C
+>importInst : typeof instantiated
+>C : typeof C
+>importInst.C : typeof C
+>importInst : typeof instantiated
+>C : typeof C
 
 var x2: importInst.C = new x1();
->x2 : importInst.C
+>x2 : C
 >importInst : any
->new x1() : importInst.C
->x1 : typeof importInst.C
+>new x1() : C
+>x1 : typeof C
 
 var x3: typeof importUninst.P; // Error again
 >x3 : any
@@= skipped -25, +25 lines =@@
 >Outer : typeof Outer
 
 var x5: typeof importInst;
->x5 : typeof importInst
->importInst : typeof importInst
+>x5 : typeof instantiated
+>importInst : typeof instantiated
 
 x5 = Outer;
 >x5 = Outer : typeof Outer
->x5 : typeof importInst
+>x5 : typeof instantiated
 >Outer : typeof Outer
 
 x5 = Outer.instantiated;
->x5 = Outer.instantiated : typeof importInst
->x5 : typeof importInst
->Outer.instantiated : typeof importInst
+>x5 = Outer.instantiated : typeof instantiated
+>x5 : typeof instantiated
+>Outer.instantiated : typeof instantiated
 >Outer : typeof Outer
->instantiated : typeof importInst
+>instantiated : typeof instantiated
 
 var x6: typeof importUninst;
 >x6 : any
@@= skipped -25, +25 lines =@@
 >Outer : typeof Outer
 
 x7 = importInst;
->x7 = importInst : typeof importInst
+>x7 = importInst : typeof instantiated
 >x7 : typeof Outer
->importInst : typeof importInst
+>importInst : typeof instantiated
 

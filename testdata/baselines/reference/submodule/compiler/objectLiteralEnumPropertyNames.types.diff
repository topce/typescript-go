--- old.objectLiteralEnumPropertyNames.types
+++ new.objectLiteralEnumPropertyNames.types
@@= skipped -118, +118 lines =@@
 
 const n: TestNums = {
 >n : TestNums
->{    [Nums.A]: 1,    [Nums.B]: 2} : { 0: number; 1: number; }
+>{    [Nums.A]: 1,    [Nums.B]: 2} : { [Nums.A]: number; [Nums.B]: number; }
 
     [Nums.A]: 1,
 >[Nums.A] : number
@@= skipped -17, +17 lines =@@
 >2 : 2
 }
 const un = {
->un : { 0: number; 1: number; }
->{    [Nums.A]: 3,    [Nums.B]: 4} : { 0: number; 1: number; }
+>un : { [Nums.A]: number; [Nums.B]: number; }
+>{    [Nums.A]: 3,    [Nums.B]: 4} : { [Nums.A]: number; [Nums.B]: number; }
 
     [Nums.A]: 3,
 >[Nums.A] : number
@@= skipped -27, +27 lines =@@
 
 const m: TestNums = {
 >m : TestNums
->{    [an]: 5,    [bn]: 6} : { 0: number; 1: number; }
+>{    [an]: 5,    [bn]: 6} : { [an]: number; [bn]: number; }
 
     [an]: 5,
 >[an] : number
@@= skipped -13, +13 lines =@@
 >6 : 6
 }
 const um = {
->um : { 0: number; 1: number; }
->{    [an]: 7,    [bn]: 8} : { 0: number; 1: number; }
+>um : { [an]: number; [bn]: number; }
+>{    [an]: 7,    [bn]: 8} : { [an]: number; [bn]: number; }
 
     [an]: 7,
 >[an] : number

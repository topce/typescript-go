--- old.overload1.js
+++ new.overload1.js
@@= skipped -41, +41 lines =@@
 
 
 //// [overload1.js]
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
 var O;
 (function (O) {
-    var A = /** @class */ (function () {
-        function A() {
-        }
-        return A;
-    }());
+    class A {
+    }
     O.A = A;
-    var B = /** @class */ (function (_super) {
-        __extends(B, _super);
-        function B() {
-            return _super !== null && _super.apply(this, arguments) || this;
-        }
-        return B;
-    }(A));
+    class B extends A {
+    }
     O.B = B;
-    var C = /** @class */ (function (_super) {
-        __extends(C, _super);
-        function C() {
-            return _super !== null && _super.apply(this, arguments) || this;
-        }
-        return C;
-    }(B));
+    class C extends B {
+    }
     O.C = C;
 })(O || (O = {}));
-var e = x.g(new O.A()); // matches overload but bad assignment
-var y = x.f(3); // good
-y = x.f("nope"); // can't assign number to string
-var z = x.g(x.g(3, 3)); // good
-z = x.g(2, 2, 2); // no match
-z = x.g(); // no match
-z = x.g(new O.B()); // ambiguous (up and down conversion)
-z = x.h(2, 2); // no match
-z = x.h("hello", 0); // good
+var e = x.g(new O.A());
+var y = x.f(3);
+y = x.f("nope");
+var z = x.g(x.g(3, 3));
+z = x.g(2, 2, 2);
+z = x.g();
+z = x.g(new O.B());
+z = x.h(2, 2);
+z = x.h("hello", 0);
 var v = x.g;

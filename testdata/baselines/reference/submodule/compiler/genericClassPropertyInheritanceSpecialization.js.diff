--- old.genericClassPropertyInheritanceSpecialization.js
+++ new.genericClassPropertyInheritanceSpecialization.js
@@= skipped -77, +77 lines =@@
 
 
 //// [genericClassPropertyInheritanceSpecialization.js]
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
 var Portal;
 (function (Portal) {
-    var Controls;
+    let Controls;
     (function (Controls) {
-        var Validators;
+        let Validators;
         (function (Validators) {
-            var Validator = /** @class */ (function () {
-                function Validator(message) {
-                }
-                Validator.prototype.destroy = function () { };
-                Validator.prototype._validate = function (value) { return 0; };
-                return Validator;
-            }());
+            class Validator {
+                _subscription;
+                message;
+                validationState;
+                validate;
+                constructor(message) { }
+                destroy() { }
+                _validate(value) { return 0; }
+            }
             Validators.Validator = Validator;
         })(Validators = Controls.Validators || (Controls.Validators = {}));
     })(Controls = Portal.Controls || (Portal.Controls = {}));
 })(Portal || (Portal = {}));
 var PortalFx;
 (function (PortalFx) {
-    var ViewModels;
+    let ViewModels;
     (function (ViewModels) {
-        var Controls;
+        let Controls;
         (function (Controls) {
-            var Validators;
+            let Validators;
             (function (Validators) {
-                var Validator = /** @class */ (function (_super) {
-                    __extends(Validator, _super);
-                    function Validator(message) {
-                        return _super.call(this, message) || this;
+                class Validator extends Portal.Controls.Validators.Validator {
+                    constructor(message) {
+                        super(message);
                     }
-                    return Validator;
-                }(Portal.Controls.Validators.Validator));
+                }
                 Validators.Validator = Validator;
             })(Validators = Controls.Validators || (Controls.Validators = {}));
         })(Controls = ViewModels.Controls || (ViewModels.Controls = {}));
     })(ViewModels = PortalFx.ViewModels || (PortalFx.ViewModels = {}));
 })(PortalFx || (PortalFx = {}));
-var ViewModel = /** @class */ (function () {
-    function ViewModel() {
-        this.validators = ko.observableArray();
-    }
-    return ViewModel;
-}());
+class ViewModel {
+    validators = ko.observableArray();
+}

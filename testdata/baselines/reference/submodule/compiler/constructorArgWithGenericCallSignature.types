//// [tests/cases/compiler/constructorArgWithGenericCallSignature.ts] ////

=== constructorArgWithGenericCallSignature.ts ===
module Test {
>Test : typeof Test

    export interface MyFunc {
        <T>(value1: T): T;
>value1 : T
    }
    export class MyClass {
>MyClass : MyClass

        constructor(func: MyFunc) { }
>func : MyFunc
    }
 
 export function F(func: MyFunc) { }
>F : (func: MyFunc) => void
>func : MyFunc
}
var func: Test.MyFunc;
>func : MyFunc
>Test : any

Test.F(func); // OK
>Test.F(func) : void
>Test.F : (func: MyFunc) => void
>Test : typeof Test
>F : (func: MyFunc) => void
>func : MyFunc

var test = new Test.MyClass(func); // Should be OK
>test : MyClass
>new Test.MyClass(func) : MyClass
>Test.MyClass : typeof MyClass
>Test : typeof Test
>MyClass : typeof MyClass
>func : MyFunc


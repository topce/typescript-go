--- old.metadataOfUnion.js
+++ new.metadataOfUnion.js
@@= skipped -38, +38 lines =@@
 }
 
 //// [metadataOfUnion.js]
-var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
-    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
-    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
-    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
-    return c > 3 && r && Object.defineProperty(target, key, r), r;
-};
-var __metadata = (this && this.__metadata) || function (k, v) {
-    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
-};
 function PropDeco(target, propKey) { }
-var A = /** @class */ (function () {
-    function A() {
-    }
-    return A;
-}());
-var B = /** @class */ (function () {
-    function B() {
-    }
-    __decorate([
-        PropDeco,
-        __metadata("design:type", Object)
-    ], B.prototype, "x", void 0);
-    __decorate([
-        PropDeco,
-        __metadata("design:type", Boolean)
-    ], B.prototype, "y", void 0);
-    __decorate([
-        PropDeco,
-        __metadata("design:type", Object)
-    ], B.prototype, "z", void 0);
-    return B;
-}());
+class A {
+}
+class B {
+    @PropDeco
+    x;
+    @PropDeco
+    y;
+    @PropDeco
+    z;
+}
 var E;
 (function (E) {
     E[E["A"] = 0] = "A";
@@= skipped -39, +18 lines =@@
     E[E["C"] = 2] = "C";
     E[E["D"] = 3] = "D";
 })(E || (E = {}));
-var D = /** @class */ (function () {
-    function D() {
-    }
-    __decorate([
-        PropDeco,
-        __metadata("design:type", Number)
-    ], D.prototype, "a", void 0);
-    __decorate([
-        PropDeco,
-        __metadata("design:type", Number)
-    ], D.prototype, "b", void 0);
-    __decorate([
-        PropDeco,
-        __metadata("design:type", Number)
-    ], D.prototype, "c", void 0);
-    __decorate([
-        PropDeco,
-        __metadata("design:type", Number)
-    ], D.prototype, "d", void 0);
-    return D;
-}());
+class D {
+    @PropDeco
+    a;
+    @PropDeco
+    b;
+    @PropDeco
+    c;
+    @PropDeco
+    d;
+}

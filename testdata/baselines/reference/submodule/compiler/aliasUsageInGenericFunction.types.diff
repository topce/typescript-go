--- old.aliasUsageInGenericFunction.types
+++ new.aliasUsageInGenericFunction.types
@@= skipped -1, +1 lines =@@
 
 === aliasUsageInGenericFunction_main.ts ===
 import Backbone = require("./aliasUsageInGenericFunction_backbone");
->Backbone : typeof Backbone
+>Backbone : typeof import("aliasUsageInGenericFunction_backbone")
 
 import moduleA = require("./aliasUsageInGenericFunction_moduleA");
->moduleA : typeof moduleA
+>moduleA : typeof import("aliasUsageInGenericFunction_moduleA")
 
 interface IHasVisualizationModel {
     VisualizationModel: typeof Backbone.Model;
->VisualizationModel : typeof Backbone.Model
->Backbone.Model : typeof Backbone.Model
->Backbone : typeof Backbone
->Model : typeof Backbone.Model
+>VisualizationModel : typeof Model
+>Backbone.Model : typeof Model
+>Backbone : typeof import("aliasUsageInGenericFunction_backbone")
+>Model : typeof Model
 }
 function foo<T extends { a: IHasVisualizationModel }>(x: T) {
 >foo : <T extends { a: IHasVisualizationModel; }>(x: T) => T
@@= skipped -21, +21 lines =@@
 >x : T
 }
 var r = foo({ a: moduleA });
->r : { a: typeof moduleA; }
->foo({ a: moduleA }) : { a: typeof moduleA; }
+>r : { a: typeof import("aliasUsageInGenericFunction_moduleA"); }
+>foo({ a: moduleA }) : { a: typeof import("aliasUsageInGenericFunction_moduleA"); }
 >foo : <T extends { a: IHasVisualizationModel; }>(x: T) => T
->{ a: moduleA } : { a: typeof moduleA; }
->a : typeof moduleA
->moduleA : typeof moduleA
+>{ a: moduleA } : { a: typeof import("aliasUsageInGenericFunction_moduleA"); }
+>a : typeof import("aliasUsageInGenericFunction_moduleA")
+>moduleA : typeof import("aliasUsageInGenericFunction_moduleA")
 
 var r2 = foo({ a: <IHasVisualizationModel>null });
 >r2 : { a: IHasVisualizationModel; }
@@= skipped -25, +25 lines =@@
 
 === aliasUsageInGenericFunction_moduleA.ts ===
 import Backbone = require("./aliasUsageInGenericFunction_backbone");
->Backbone : typeof Backbone
+>Backbone : typeof import("aliasUsageInGenericFunction_backbone")
 
 export class VisualizationModel extends Backbone.Model {
 >VisualizationModel : VisualizationModel
->Backbone.Model : Backbone.Model
->Backbone : typeof Backbone
->Model : typeof Backbone.Model
+>Backbone.Model : Model
+>Backbone : typeof import("aliasUsageInGenericFunction_backbone")
+>Model : typeof Model
 
     // interesting stuff here
 }

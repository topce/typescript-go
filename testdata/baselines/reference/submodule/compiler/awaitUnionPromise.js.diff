--- old.awaitUnionPromise.js
+++ new.awaitUnionPromise.js
@@= skipped -22, +22 lines =@@
 
 //// [awaitUnionPromise.js]
 // https://github.com/Microsoft/TypeScript/issues/18186
-var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
-    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
-    return new (P || (P = Promise))(function (resolve, reject) {
-        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
-        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
-        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
-        step((generator = generator.apply(thisArg, _arguments || [])).next());
-    });
-};
 class AsyncEnumeratorDone {
 }
 ;
-function main() {
-    return __awaiter(this, void 0, void 0, function* () {
-        const x = null;
-        let a = yield x.next1();
-        let b = yield x.next2();
-        let c = yield x.next3();
-        let d = yield x.next4();
-    });
+async function main() {
+    const x = null;
+    let a = await x.next1();
+    let b = await x.next2();
+    let c = await x.next3();
+    let d = await x.next4();
 }

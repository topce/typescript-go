--- old.enumLiteralAssignableToEnumInsideUnion.js
+++ new.enumLiteralAssignableToEnumInsideUnion.js
@@= skipped -33, +33 lines =@@
 //// [enumLiteralAssignableToEnumInsideUnion.js]
 var X;
 (function (X) {
-    var Foo;
+    let Foo;
     (function (Foo) {
         Foo[Foo["A"] = 0] = "A";
         Foo[Foo["B"] = 1] = "B";
@@= skipped -8, +8 lines =@@
 })(X || (X = {}));
 var Y;
 (function (Y) {
-    var Foo;
+    let Foo;
     (function (Foo) {
         Foo[Foo["A"] = 0] = "A";
         Foo[Foo["B"] = 1] = "B";
@@= skipped -8, +8 lines =@@
 })(Y || (Y = {}));
 var Z;
 (function (Z) {
-    var Foo;
+    let Foo;
     (function (Foo) {
         Foo[Foo["A"] = 2] = "A";
         Foo[Foo["B"] = 4] = "B";
@@= skipped -8, +8 lines =@@
 })(Z || (Z = {}));
 var Ka;
 (function (Ka) {
-    var Foo;
+    let Foo;
     (function (Foo) {
         Foo[Foo["A"] = 1024] = "A";
         Foo[Foo["B"] = 2048] = "B";
     })(Foo = Ka.Foo || (Ka.Foo = {}));
 })(Ka || (Ka = {}));
-var e0 = Y.Foo.A; // ok
-var e1 = Z.Foo.A; // not legal, Z is computed
-var e2 = Z.Foo.A; // still not legal
-var e3 = Z.Foo.A; // not legal
-var e4 = Z.Foo.A; // not legal either because Z.Foo is computed and Z.Foo.A is not necessarily assignable to X.Foo.A
-var e5 = Z.Foo.A; // ok
+const e0 = Y.Foo.A;
+const e1 = Z.Foo.A;
+const e2 = Z.Foo.A;
+const e3 = Z.Foo.A;
+const e4 = Z.Foo.A;
+const e5 = Z.Foo.A;

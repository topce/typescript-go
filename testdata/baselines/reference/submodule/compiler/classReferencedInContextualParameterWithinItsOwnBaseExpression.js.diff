--- old.classReferencedInContextualParameterWithinItsOwnBaseExpression.js
+++ new.classReferencedInContextualParameterWithinItsOwnBaseExpression.js
@@= skipped -39, +39 lines =@@
 ) {}
 
 
-
-
-//// [classReferencedInContextualParameterWithinItsOwnBaseExpression.d.ts]
-interface Pretty<To> {
-    (a: To): string;
+//// [classReferencedInContextualParameterWithinItsOwnBaseExpression.js]
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.A = void 0;
+class A extends Class("A")({ a: string }, {
+    pretty: (a) => JSON.stringify(a),
+}) {
 }
-interface Schema<A> {
-    readonly pretty?: Pretty<A>;
-}
-interface Class<A> {
-    new (): A;
-}
-declare const Class: <Self>(identifier: string) => <Fields>(fields: Fields, annotations?: Schema<Self>) => Class<OutputFrom<Fields>>;
-type Type<TOutput> = {
-    _TOutput: TOutput;
-};
-type OutputFrom<TFields> = {
-    [K in keyof TFields]: "_TOutput" extends keyof TFields[K] ? TFields[K]["_TOutput"] : never;
-};
-declare function string(): Type<string>;
-declare const A_base: Class<OutputFrom<{
-    a: typeof string;
-}>>;
-export declare class A extends A_base {
-}
-export {};
+exports.A = A;

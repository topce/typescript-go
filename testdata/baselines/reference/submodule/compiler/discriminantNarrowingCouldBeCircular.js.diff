--- old.discriminantNarrowingCouldBeCircular.js
+++ new.discriminantNarrowingCouldBeCircular.js
@@= skipped -40, +40 lines =@@
 
 
 //// [discriminantNarrowingCouldBeCircular.js]
-"use strict";
-var o = {};
+const o = {};
 if (o) {
-    for (var key in o) {
-        var value = o[key];
+    for (const key in o) {
+        const value = o[key];
         if (is(value)) {
         }
     }
 }
 function getImplicitAriaRole(element) {
-    var ancestor = element;
+    let ancestor = element;
     while (ancestor) {
-        var parent = parentElementOrShadowHost(ancestor);
-        var parents = kPresentationInheritanceParents[ancestor.a];
+        const parent = parentElementOrShadowHost(ancestor);
+        const parents = kPresentationInheritanceParents[ancestor.a];
         if (!parents || !parent || !parents.includes(parent.a))
             break;
         ancestor = parent;
     }
 }
 if (isPlainObject2(myObj2)) {
-    for (var _i = 0, _a = ["a", "b", "c"]; _i < _a.length; _i++) {
-        var key = _a[_i];
-        var deeper = myObj2[key];
-        var deeperKeys = isPlainObject2(deeper) ? Object.keys(deeper) : [];
+    for (const key of ["a", "b", "c"]) {
+        const deeper = myObj2[key];
+        const deeperKeys = isPlainObject2(deeper) ? Object.keys(deeper) : [];
     }
 }

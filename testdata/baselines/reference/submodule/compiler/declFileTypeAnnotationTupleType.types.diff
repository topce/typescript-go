--- old.declFileTypeAnnotationTupleType.types
+++ new.declFileTypeAnnotationTupleType.types
@@= skipped -19, +19 lines =@@
 
 // Just the name
 var k: [c, m.c] = [new c(), new m.c()];
->k : [c, m.c]
+>k : [c, c]
 >m : any
->[new c(), new m.c()] : [c, m.c]
+>[new c(), new m.c()] : [c, c]
 >new c() : c
 >c : typeof c
->new m.c() : m.c
->m.c : typeof m.c
+>new m.c() : c
+>m.c : typeof c
 >m : typeof m
->c : typeof m.c
+>c : typeof c
 
 var l = k;
->l : [c, m.c]
->k : [c, m.c]
+>l : [c, c]
+>k : [c, c]
 
 var x: [g<string>, m.g<number>, () => c] = [new g<string>(), new m.g<number>(), () => new c()];
->x : [g<string>, m.g<number>, () => c]
+>x : [g<string>, g<number>, () => c]
 >m : any
->[new g<string>(), new m.g<number>(), () => new c()] : [g<string>, m.g<number>, () => c]
+>[new g<string>(), new m.g<number>(), () => new c()] : [g<string>, g<number>, () => c]
 >new g<string>() : g<string>
 >g : typeof g
->new m.g<number>() : m.g<number>
->m.g : typeof m.g
+>new m.g<number>() : g<number>
+>m.g : typeof g
 >m : typeof m
->g : typeof m.g
+>g : typeof g
 >() => new c() : () => c
 >new c() : c
 >c : typeof c
 
 var y = x;
->y : [g<string>, m.g<number>, () => c]
->x : [g<string>, m.g<number>, () => c]
+>y : [g<string>, g<number>, () => c]
+>x : [g<string>, g<number>, () => c]
 

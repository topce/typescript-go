--- old.optionalParamArgsTest.js
+++ new.optionalParamArgsTest.js
@@= skipped -125, +125 lines =@@
 
 
 //// [optionalParamArgsTest.js]
-// Optional parameter and default argument tests
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
 // test basic configurations
-var C1 = /** @class */ (function () {
-    function C1(v, p) {
-        if (v === void 0) { v = 1; }
-        if (p === void 0) { p = 0; }
-        this.n = 0;
-    }
-    C1.prototype.C1M1 = function () { return 0; }; // returning C1M1A1 will result in "Unresolved symbol C1M1A1"
-    C1.prototype.C1M2 = function (C1M2A1) { return C1M2A1; }; // will return C1M1A2 without complaint
+class C1 {
+    constructor(v = 1, p = 0) { }
+    n = 0;
+    C1M1() { return 0; } // returning C1M1A1 will result in "Unresolved symbol C1M1A1"
+    C1M2(C1M2A1) { return C1M2A1; } // will return C1M1A2 without complaint
     // C1M3 contains all optional parameters
-    C1.prototype.C1M3 = function (C1M3A1, C1M3A2) {
-        if (C1M3A1 === void 0) { C1M3A1 = 0; }
-        if (C1M3A2 === void 0) { C1M3A2 = C1M3A1; }
-        return C1M3A1 + C1M3A2;
-    };
+    C1M3(C1M3A1 = 0, C1M3A2 = C1M3A1) { return C1M3A1 + C1M3A2; }
     // C1M4 contains a mix of optional and non-optional parameters
-    C1.prototype.C1M4 = function (C1M4A1, C1M4A2) { return C1M4A1 + C1M4A2; };
-    C1.prototype.C1M5 = function (C1M5A1, C1M5A2, C1M5A3) {
-        if (C1M5A2 === void 0) { C1M5A2 = 0; }
-        return C1M5A1 + C1M5A2;
-    };
+    C1M4(C1M4A1, C1M4A2) { return C1M4A1 + C1M4A2; }
+    C1M5(C1M5A1, C1M5A2 = 0, C1M5A3) { return C1M5A1 + C1M5A2; }
     // Uninitialized parameter makes the initialized one required
-    C1.prototype.C1M5 = function (C1M5A1, C1M5A2, C1M5A3) {
-        if (C1M5A2 === void 0) { C1M5A2 = 0; }
-        return C1M5A1 + C1M5A2;
-    };
-    return C1;
-}());
-var C2 = /** @class */ (function (_super) {
-    __extends(C2, _super);
-    function C2(v2) {
-        if (v2 === void 0) { v2 = 6; }
-        return _super.call(this, v2) || this;
+    C1M5(C1M5A1, C1M5A2 = 0, C1M5A3) { return C1M5A1 + C1M5A2; }
+}
+class C2 extends C1 {
+    constructor(v2 = 6) {
+        super(v2);
     }
-    return C2;
-}(C1));
+}
 function F1() { return 0; }
 function F2(F2A1) { return F2A1; }
-function F3(F3A1, F3A2) {
-    if (F3A1 === void 0) { F3A1 = 0; }
-    if (F3A2 === void 0) { F3A2 = F3A1; }
-    return F3A1 + F3A2;
-}
+function F3(F3A1 = 0, F3A2 = F3A1) { return F3A1 + F3A2; }
 function F4(F4A1, F4A2) { return F4A1 + F4A2; }
 var L1 = function () { return 0; };
 var L2 = function (L2A1) { return L2A1; };
-var L3 = function (L3A1, L3A2) {
-    if (L3A1 === void 0) { L3A1 = 0; }
-    if (L3A2 === void 0) { L3A2 = L3A1; }
-    return L3A1 + L3A2;
-};
+var L3 = function (L3A1 = 0, L3A2 = L3A1) { return L3A1 + L3A2; };
 var L4 = function (L4A1, L4A2) { return L4A1 + L4A2; };
 var c1o1 = new C1(5);
 var i1o1 = new C1(5);
@@= skipped -125, +84 lines =@@
 i1o1.C1M4();
 F4();
 L4();
-function fnOpt1(id, children, expectedPath, isRoot) {
-    if (children === void 0) { children = []; }
-    if (expectedPath === void 0) { expectedPath = []; }
-}
+function fnOpt1(id, children = [], expectedPath = [], isRoot) { }
 function fnOpt2(id, children, expectedPath, isRoot) { }
 fnOpt1(1, [2, 3], [1], true);
 fnOpt2(1, [2, 3], [1], true);

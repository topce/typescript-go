--- old.emptyOptionalBindingPatternInDeclarationSignature.types
+++ new.emptyOptionalBindingPatternInDeclarationSignature.types
@@= skipped -3, +3 lines =@@
 // #50791
 
 declare function fn1({}?: { x: string }): void;
->fn1 : ({}?: { x: string; }) => void
+>fn1 : (__0?: { x: string; } | undefined) => void
 >x : string
 
 declare function fn2({ x }?: { x: string }): void;
->fn2 : ({ x }?: { x: string; }) => void
+>fn2 : (__0?: { x: string; } | undefined) => void
 >x : string
 >x : string
 
 declare function fn3([]?: [ x: string ]): void;
->fn3 : ([]?: [x: string]) => void
+>fn3 : (__0?: [x: string] | undefined) => void
 
 declare function fn4([ x ]?: [ x: string ]): void;
->fn4 : ([x]?: [x: string]) => void
+>fn4 : (__0?: [x: string] | undefined) => void
 >x : string
 
 declare class C1 {
 >C1 : C1
 
     method({}?: { x: string }): void
->method : ({}?: { x: string; }) => void
+>method : (__0?: { x: string; } | undefined) => void
 >x : string
 
     static method2({}?: { x: string }): void
->method2 : ({}?: { x: string; }) => void
+>method2 : (__0?: { x: string; } | undefined) => void
 >x : string
 
     static field: ({}?: { x: string }) => void
->field : ({}?: { x: string; }) => void
+>field : (__0?: { x: string; } | undefined) => void
 >x : string
 
     static field2: ({}?: { x: string }) => void
->field2 : ({}?: { x: string; }) => void
+>field2 : (__0?: { x: string; } | undefined) => void
 >x : string
 }
 
 interface I1 {
     method({}?: { x: string }): void
->method : ({}?: { x: string; }) => void
+>method : (__0?: { x: string; } | undefined) => void
 >x : string
 
     method2: ({}?: { x: string }) => void
->method2 : ({}?: { x: string; }) => void
+>method2 : (__0?: { x: string; } | undefined) => void
 >x : string
 }
 
@@= skipped -53, +53 lines =@@
 >T2 : T2
 
     method({}?: { x: string }): void
->method : ({}?: { x: string; }) => void
+>method : (__0?: { x: string; } | undefined) => void
 >x : string
 
     method2: ({}?: { x: string }) => void
->method2 : ({}?: { x: string; }) => void
+>method2 : (__0?: { x: string; } | undefined) => void
 >x : string
 }
 
 declare const val1: ({}?: { x: string }) => void
->val1 : ({}?: { x: string; }) => void
+>val1 : (__0?: { x: string; } | undefined) => void
 >x : string
 
 declare const val2: {
->val2 : { method({}?: { x: string; }): void; method2: ({}?: { x: string; }) => void; }
+>val2 : { method: (__0?: { x: string; } | undefined) => void; method2: (__0?: { x: string; } | undefined) => void; }
 
     method({}?: { x: string }): void
->method : ({}?: { x: string; }) => void
+>method : (__0?: { x: string; } | undefined) => void
 >x : string
 
     method2: ({}?: { x: string }) => void
->method2 : ({}?: { x: string; }) => void
+>method2 : (__0?: { x: string; } | undefined) => void
 >x : string
 }
 

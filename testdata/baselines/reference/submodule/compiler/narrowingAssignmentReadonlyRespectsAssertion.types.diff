--- old.narrowingAssignmentReadonlyRespectsAssertion.types
+++ new.narrowingAssignmentReadonlyRespectsAssertion.types
@@= skipped -95, +95 lines =@@
 >fixture : MultiCaseFixture<TestCase<string | number>>
 >cases : TestCase<string | number>[]
 >forEach : (callbackfn: (value: TestCase<string | number>, index: number, array: TestCase<string | number>[]) => void, thisArg?: any) => void
->({ val1, val2 }) => {      if (Array.isArray(val1)) {          // This should retain val1 as being an array          const reversedVal1 = val1.slice().reverse();          console.log(reversedVal1);      } else {          console.log(val1);      }      console.log(val2);  } : ({ val1, val2 }: TestCase<string | number>) => void
+>({ val1, val2 }) => {      if (Array.isArray(val1)) {          // This should retain val1 as being an array          const reversedVal1 = val1.slice().reverse();          console.log(reversedVal1);      } else {          console.log(val1);      }      console.log(val2);  } : (__0: TestCase<string | number>) => void
 >val1 : string | number | readonly (string | number)[]
 >val2 : readonly (string | number)[]
 

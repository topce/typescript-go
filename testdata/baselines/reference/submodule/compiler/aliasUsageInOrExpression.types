//// [tests/cases/compiler/aliasUsageInOrExpression.ts] ////

=== aliasUsageInOrExpression_main.ts ===
import Backbone = require("./aliasUsageInOrExpression_backbone");
>Backbone : typeof import("aliasUsageInOrExpression_backbone")

import moduleA = require("./aliasUsageInOrExpression_moduleA");
>moduleA : typeof import("aliasUsageInOrExpression_moduleA")

interface IHasVisualizationModel {
    VisualizationModel: typeof Backbone.Model;
>VisualizationModel : typeof Model
>Backbone.Model : typeof Model
>Backbone : typeof import("aliasUsageInOrExpression_backbone")
>Model : typeof Model
}
var i: IHasVisualizationModel;
>i : IHasVisualizationModel

var d1 = i || moduleA;
>d1 : IHasVisualizationModel
>i || moduleA : IHasVisualizationModel
>i : IHasVisualizationModel
>moduleA : typeof import("aliasUsageInOrExpression_moduleA")

var d2: IHasVisualizationModel = i || moduleA;
>d2 : IHasVisualizationModel
>i || moduleA : IHasVisualizationModel
>i : IHasVisualizationModel
>moduleA : typeof import("aliasUsageInOrExpression_moduleA")

var d2: IHasVisualizationModel = moduleA || i;
>d2 : IHasVisualizationModel
>moduleA || i : IHasVisualizationModel
>moduleA : typeof import("aliasUsageInOrExpression_moduleA")
>i : IHasVisualizationModel

var e: { x: IHasVisualizationModel } = <{ x: IHasVisualizationModel }>null || { x: moduleA };
>e : { x: IHasVisualizationModel; }
>x : IHasVisualizationModel
><{ x: IHasVisualizationModel }>null || { x: moduleA } : { x: IHasVisualizationModel; }
><{ x: IHasVisualizationModel }>null : { x: IHasVisualizationModel; }
>x : IHasVisualizationModel
>{ x: moduleA } : { x: typeof import("aliasUsageInOrExpression_moduleA"); }
>x : typeof import("aliasUsageInOrExpression_moduleA")
>moduleA : typeof import("aliasUsageInOrExpression_moduleA")

var f: { x: IHasVisualizationModel } = <{ x: IHasVisualizationModel }>null ? { x: moduleA } : null;
>f : { x: IHasVisualizationModel; }
>x : IHasVisualizationModel
><{ x: IHasVisualizationModel }>null ? { x: moduleA } : null : { x: typeof import("aliasUsageInOrExpression_moduleA"); }
><{ x: IHasVisualizationModel }>null : { x: IHasVisualizationModel; }
>x : IHasVisualizationModel
>{ x: moduleA } : { x: typeof import("aliasUsageInOrExpression_moduleA"); }
>x : typeof import("aliasUsageInOrExpression_moduleA")
>moduleA : typeof import("aliasUsageInOrExpression_moduleA")

=== aliasUsageInOrExpression_backbone.ts ===
export class Model {
>Model : Model

    public someData: string;
>someData : string
}

=== aliasUsageInOrExpression_moduleA.ts ===
import Backbone = require("./aliasUsageInOrExpression_backbone");
>Backbone : typeof import("aliasUsageInOrExpression_backbone")

export class VisualizationModel extends Backbone.Model {
>VisualizationModel : VisualizationModel
>Backbone.Model : Model
>Backbone : typeof import("aliasUsageInOrExpression_backbone")
>Model : typeof Model

    // interesting stuff here
}


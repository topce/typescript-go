--- old.isDeclarationVisibleNodeKinds.types
+++ new.isDeclarationVisibleNodeKinds.types
@@= skipped -33, +33 lines =@@
 >schema : typeof schema
 
      export function createValidator3(schema: any): number | { new <T>(data: T): T; }  {
->createValidator3 : (schema: any) => number | { new <T>(data: T): T; }
+>createValidator3 : (schema: any) => number | new <T>(data: T) => T
 >schema : any
 >data : T
 
@@= skipped -14, +14 lines =@@
 >schema : typeof schema
 
      export function createValidator4(schema: any): { new <T>(data: T): T; }[] {
->createValidator4 : (schema: any) => { new <T>(data: T): T; }[]
+>createValidator4 : (schema: any) => new <T>(data: T) => T[]
 >schema : any
 >data : T
 
@@= skipped -15, +15 lines =@@
 >schema : typeof schema
 
     export function createValidator5(schema: any): { new <T>(data: T): T } {
->createValidator5 : (schema: any) => { new <T>(data: T): T; }
+>createValidator5 : (schema: any) => new <T>(data: T) => T
 >schema : any
 >data : T
 
@@= skipped -28, +28 lines =@@
 >schema : typeof schema
 
     export function createValidator7(schema: any): (new <T>(data: T)=>T )[] {
->createValidator7 : (schema: any) => (new <T>(data: T) => T)[]
+>createValidator7 : (schema: any) => new <T>(data: T) => T[]
 >schema : any
 >data : T
 
@@= skipped -14, +14 lines =@@
 >schema : typeof schema
 
     export function createValidator8(schema: any): Array<{ <T>(data: T) : T}> {
->createValidator8 : (schema: any) => Array<{ <T>(data: T): T; }>
+>createValidator8 : (schema: any) => <T>(data: T) => T[]
 >schema : any
 >data : T
 

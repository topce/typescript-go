--- old.constEnums.types
+++ new.constEnums.types
@@= skipped -185, +185 lines =@@
 >Comments : Comments
 
     "//",
->"//" : (typeof Comments)["//"]
+>"//" : Comments."//"
 
     "/*",
->"/*" : (typeof Comments)["/*"]
+>"/*" : Comments."/*"
 
     "*/",
->"*/" : (typeof Comments)["*/"]
+>"*/" : Comments."*/"
 
     "///",
->"///" : (typeof Comments)["///"]
+>"///" : Comments."///"
 
     "#",
->"#" : (typeof Comments)["#"]
+>"#" : Comments."#"
 
     "<!--",
->"<!--" : (typeof Comments)["<!--"]
+>"<!--" : Comments."<!--"
 
     "-->",
->"-->" : (typeof Comments)["-->"]
+>"-->" : Comments."-->"
 }
 
 module A {
@@= skipped -136, +136 lines =@@
 }
 
 import I = A.B.C.E;
->I : typeof I
+>I : typeof E
 >A : typeof A
->B : typeof A.B
->C : typeof A.B.C
->E : I
+>B : typeof B
+>C : typeof C
+>E : E
 
 import I1 = A1.B;
->I1 : typeof I1
+>I1 : typeof B
 >A1 : typeof A1
->B : typeof I1
+>B : typeof B
 
 import I2 = A2.B;
->I2 : typeof I2
+>I2 : typeof B
 >A2 : typeof A2
->B : typeof I2
+>B : typeof B
 
 function foo0(e: I): void {
->foo0 : (e: I) => void
->e : I
+>foo0 : (e: E) => void
+>e : E
 
     if (e === I.V1) {
 >e === I.V1 : boolean
->e : I
->I.V1 : I.V1
->I : typeof I
->V1 : I.V1
+>e : E
+>I.V1 : E.V1
+>I : typeof E
+>V1 : E.V1
     }
     else if (e === I.V2) {
 >e === I.V2 : boolean
->e : I.V2 | I.V3 | I.V4
->I.V2 : I.V2
->I : typeof I
->V2 : I.V2
+>e : E.V2 | E.V3 | E.V4
+>I.V2 : E.V2
+>I : typeof E
+>V2 : E.V2
     }
 }
 
 function foo1(e: I1.C.E): void {
->foo1 : (e: I1.C.E) => void
->e : I1.C.E
+>foo1 : (e: E) => void
+>e : E
 >I1 : any
 >C : any
 
     if (e === I1.C.E.V1) {
 >e === I1.C.E.V1 : boolean
->e : I1.C.E
->I1.C.E.V1 : I1.C.E.V1
->I1.C.E : typeof I1.C.E
->I1.C : typeof I1.C
->I1 : typeof I1
->C : typeof I1.C
->E : typeof I1.C.E
->V1 : I1.C.E.V1
+>e : E
+>I1.C.E.V1 : E.V1
+>I1.C.E : typeof E
+>I1.C : typeof C
+>I1 : typeof B
+>C : typeof C
+>E : typeof E
+>V1 : E.V1
     }
     else if (e === I1.C.E.V2) {
 >e === I1.C.E.V2 : boolean
->e : I1.C.E.V2
->I1.C.E.V2 : I1.C.E.V2
->I1.C.E : typeof I1.C.E
->I1.C : typeof I1.C
->I1 : typeof I1
->C : typeof I1.C
->E : typeof I1.C.E
->V2 : I1.C.E.V2
+>e : E.V2
+>I1.C.E.V2 : E.V2
+>I1.C.E : typeof E
+>I1.C : typeof C
+>I1 : typeof B
+>C : typeof C
+>E : typeof E
+>V2 : E.V2
     }
 }
 
 function foo2(e: I2.C.E): void {
->foo2 : (e: I2.C.E) => void
->e : I2.C.E
+>foo2 : (e: E) => void
+>e : E
 >I2 : any
 >C : any
 
     if (e === I2.C.E.V1) {
 >e === I2.C.E.V1 : boolean
->e : I2.C.E
->I2.C.E.V1 : I2.C.E.V1
->I2.C.E : typeof I2.C.E
->I2.C : typeof I2.C
->I2 : typeof I2
->C : typeof I2.C
->E : typeof I2.C.E
->V1 : I2.C.E.V1
+>e : E
+>I2.C.E.V1 : E.V1
+>I2.C.E : typeof E
+>I2.C : typeof C
+>I2 : typeof B
+>C : typeof C
+>E : typeof E
+>V1 : E.V1
     }
     else if (e === I2.C.E.V2) {
 >e === I2.C.E.V2 : boolean
->e : I2.C.E.V2
->I2.C.E.V2 : I2.C.E.V2
->I2.C.E : typeof I2.C.E
->I2.C : typeof I2.C
->I2 : typeof I2
->C : typeof I2.C
->E : typeof I2.C.E
->V2 : I2.C.E.V2
+>e : E.V2
+>I2.C.E.V2 : E.V2
+>I2.C.E : typeof E
+>I2.C : typeof C
+>I2 : typeof B
+>C : typeof C
+>E : typeof E
+>V2 : E.V2
     }
 }
 
@@= skipped -249, +249 lines =@@
 }
 
 function bar(e: A.B.C.E): number {
->bar : (e: A.B.C.E) => number
->e : I
+>bar : (e: E) => number
+>e : E
 >A : any
 >B : any
 >C : any
 
     switch (e) {
->e : I
+>e : E
 
         case A.B.C.E.V1: return 1;
->A.B.C.E.V1 : I.V1
->A.B.C.E : typeof I
->A.B.C : typeof A.B.C
->A.B : typeof A.B
+>A.B.C.E.V1 : E.V1
+>A.B.C.E : typeof E
+>A.B.C : typeof C
+>A.B : typeof B
 >A : typeof A
->B : typeof A.B
->C : typeof A.B.C
->E : typeof I
->V1 : I.V1
+>B : typeof B
+>C : typeof C
+>E : typeof E
+>V1 : E.V1
 >1 : 1
 
         case A.B.C.E.V2: return 1;
->A.B.C.E.V2 : I.V2
->A.B.C.E : typeof I
->A.B.C : typeof A.B.C
->A.B : typeof A.B
+>A.B.C.E.V2 : E.V2
+>A.B.C.E : typeof E
+>A.B.C : typeof C
+>A.B : typeof B
 >A : typeof A
->B : typeof A.B
->C : typeof A.B.C
->E : typeof I
->V2 : I.V2
+>B : typeof B
+>C : typeof C
+>E : typeof E
+>V2 : E.V2
 >1 : 1
 
         case A.B.C.E.V3: return 1;
->A.B.C.E.V3 : I.V3
->A.B.C.E : typeof I
->A.B.C : typeof A.B.C
->A.B : typeof A.B
+>A.B.C.E.V3 : E.V3
+>A.B.C.E : typeof E
+>A.B.C : typeof C
+>A.B : typeof B
 >A : typeof A
->B : typeof A.B
->C : typeof A.B.C
->E : typeof I
->V3 : I.V3
+>B : typeof B
+>C : typeof C
+>E : typeof E
+>V3 : E.V3
 >1 : 1
     }
 }
@@= skipped -55, +55 lines =@@
 >c : Comments
 
         case Comments["//"]:
->Comments["//"] : (typeof Comments)["//"]
+>Comments["//"] : Comments."//"
 >Comments : typeof Comments
 >"//" : "//"
 
         case Comments["/*"]:
->Comments["/*"] : (typeof Comments)["/*"]
+>Comments["/*"] : Comments."/*"
 >Comments : typeof Comments
 >"/*" : "/*"
 
         case Comments["*/"]:
->Comments["*/"] : (typeof Comments)["*/"]
+>Comments["*/"] : Comments."*/"
 >Comments : typeof Comments
 >"*/" : "*/"
 
         case Comments["///"]:
->Comments["///"] : (typeof Comments)["///"]
+>Comments["///"] : Comments."///"
 >Comments : typeof Comments
 >"///" : "///"
 
         case Comments["#"]:
->Comments["#"] : (typeof Comments)["#"]
+>Comments["#"] : Comments."#"
 >Comments : typeof Comments
 >"#" : "#"
 
         case Comments["<!--"]:
->Comments["<!--"] : (typeof Comments)["<!--"]
+>Comments["<!--"] : Comments."<!--"
 >Comments : typeof Comments
 >"<!--" : "<!--"
 
         case Comments["-->"]:
->Comments["-->"] : (typeof Comments)["-->"]
+>Comments["-->"] : Comments."-->"
 >Comments : typeof Comments
 >"-->" : "-->"
 

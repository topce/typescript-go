--- old.collisionArgumentsClassMethod.js
+++ new.collisionArgumentsClassMethod.js
@@= skipped -50, +50 lines =@@
 }
 
 //// [collisionArgumentsClassMethod.js]
-var c1 = /** @class */ (function () {
-    function c1() {
+class c1 {
+    foo(i, ...arguments) {
+        var arguments;
     }
-    c1.prototype.foo = function (i) {
-        var arguments = [];
-        for (var _i = 1; _i < arguments.length; _i++) {
-            arguments[_i - 1] = arguments[_i];
-        }
-        var arguments; // no error
-    };
-    c1.prototype.foo1 = function (arguments) {
-        var rest = [];
-        for (var _i = 1; _i < arguments.length; _i++) {
-            rest[_i - 1] = arguments[_i];
-        }
-        var arguments = 10; // no error
-    };
-    c1.prototype.fooNoError = function (arguments) {
-        var arguments = 10; // no error
-    };
-    c1.prototype.f4 = function (i) {
-        var arguments = [];
-        for (var _i = 1; _i < arguments.length; _i++) {
-            arguments[_i - 1] = arguments[_i];
-        }
-        var arguments; // no error
-    };
-    c1.prototype.f41 = function (arguments) {
-        var rest = [];
-        for (var _i = 1; _i < arguments.length; _i++) {
-            rest[_i - 1] = arguments[_i];
-        }
-        var arguments; // no error
-    };
-    c1.prototype.f4NoError = function (arguments) {
-        var arguments; // no error
-    };
-    return c1;
-}());
-var c3 = /** @class */ (function () {
-    function c3() {
+    foo1(arguments, ...rest) {
+        var arguments = 10;
     }
-    c3.prototype.foo = function () {
-        var restParameters = [];
-        for (var _i = 0; _i < arguments.length; _i++) {
-            restParameters[_i] = arguments[_i];
-        }
-        var arguments = 10; // no error
-    };
-    c3.prototype.fooNoError = function () {
-        var arguments = 10; // no error
-    };
-    return c3;
-}());
+    fooNoError(arguments) {
+        var arguments = 10;
+    }
+    f4(i, ...arguments) {
+        var arguments;
+    }
+    f41(arguments, ...rest) {
+        var arguments;
+    }
+    f4NoError(arguments) {
+        var arguments;
+    }
+}
+class c3 {
+    foo(...restParameters) {
+        var arguments = 10;
+    }
+    fooNoError() {
+        var arguments = 10;
+    }
+}

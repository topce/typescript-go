//// [tests/cases/compiler/extension.ts] ////

=== extension.ts ===
interface I {
    x;
>x : any
}

interface I {
    y;
>y : any
}

declare module M {
>M : typeof M

    export class C {
>C : C

        public p:number;
>p : number
    }
}

declare module M {
>M : typeof M

    export extension class C {
>extension : any
>C : C

        public pe:string;
>pe : string
    }
}

var c=new M.C();
>c : C
>new M.C() : C
>M.C : typeof C
>M : typeof M
>C : typeof C

c.pe;
>c.pe : any
>c : C
>pe : any

c.p;
>c.p : number
>c : C
>p : number

var i:I;
>i : I

i.x;
>i.x : any
>i : I
>x : any

i.y;
>i.y : any
>i : I
>y : any



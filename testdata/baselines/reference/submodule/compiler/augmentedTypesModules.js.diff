--- old.augmentedTypesModules.js
+++ new.augmentedTypesModules.js
@@= skipped -113, +113 lines =@@
 var m1c = 1; // Should be allowed
 var m1d;
 (function (m1d) {
-    var I = /** @class */ (function () {
-        function I() {
-        }
-        I.prototype.foo = function () { };
-        return I;
-    }());
+    class I {
+        foo() { }
+    }
     m1d.I = I;
 })(m1d || (m1d = {}));
 var m1d = 1; // error
@@= skipped -34, +31 lines =@@
 function m2g() { }
 ;
 (function (m2g) {
-    var C = /** @class */ (function () {
-        function C() {
-        }
-        C.prototype.foo = function () { };
-        return C;
-    }());
+    class C {
+        foo() { }
+    }
     m2g.C = C;
 })(m2g || (m2g = {}));
-var m3 = /** @class */ (function () {
-    function m3() {
-    }
-    return m3;
-}()); // ok since the module is not instantiated
+class m3 {
+} // ok since the module is not instantiated
 var m3a;
 (function (m3a) {
     var y = 2;
 })(m3a || (m3a = {}));
-var m3a = /** @class */ (function () {
-    function m3a() {
-    }
-    m3a.prototype.foo = function () { };
-    return m3a;
-}()); // error, class isn't ambient or declared before the module
-var m3b = /** @class */ (function () {
-    function m3b() {
-    }
-    m3b.prototype.foo = function () { };
-    return m3b;
-}());
+class m3a {
+    foo() { }
+} // error, class isn't ambient or declared before the module
+class m3b {
+    foo() { }
+}
 (function (m3b) {
     var y = 2;
 })(m3b || (m3b = {}));
-var m3c = /** @class */ (function () {
-    function m3c() {
-    }
-    m3c.prototype.foo = function () { };
-    return m3c;
-}());
+class m3c {
+    foo() { }
+}
 (function (m3c) {
     m3c.y = 2;
 })(m3c || (m3c = {}));
@@= skipped -51, +36 lines =@@
 })(m3e || (m3e = {}));
 var m3g;
 (function (m3g) {
-    var C = /** @class */ (function () {
-        function C() {
-        }
-        C.prototype.foo = function () { };
-        return C;
-    }());
+    class C {
+        foo() { }
+    }
     m3g.C = C;
 })(m3g || (m3g = {}));
 var m4;
@@= skipped -31, +28 lines =@@
 })(m4c || (m4c = {}));
 var m4d;
 (function (m4d) {
-    var C = /** @class */ (function () {
-        function C() {
-        }
-        C.prototype.foo = function () { };
-        return C;
-    }());
+    class C {
+        foo() { }
+    }
 })(m4d || (m4d = {}));
 (function (m4d) {
     m4d[m4d["One"] = 0] = "One";

--- old.commentsFunction.js
+++ new.commentsFunction.js
@@= skipped -56, +56 lines =@@
 
 
 //// [commentsFunction.js]
-/** This comment should appear for foo*/
 function foo() {
-} /* trailing comment of function */
+}
 foo();
-/** This is comment for function signature*/
-function fooWithParameters(/** this is comment about a*/ a, 
-/** this is comment for b*/
-b) {
+function fooWithParameters(a, b) {
     var d = a;
-} // trailing comment of function
+}
 fooWithParameters("a", 10);
-/** fooFunc
- * comment
- */
-var fooFunc = function FooFunctionValue(/** fooFunctionValue param */ b) {
+var fooFunc = function FooFunctionValue(b) {
     return b;
 };
-/// lamdaFoo var comment
-var lambdaFoo = /** this is lambda comment*/ function (/**param a*/ a, /**param b*/ b) { return a + b; };
-var lambddaNoVarComment = /** this is lambda multiplication*/ function (/**param a*/ a, /**param b*/ b) { return a * b; };
+var lambdaFoo = (a, b) => a + b;
+var lambddaNoVarComment = (a, b) => a * b;
 lambdaFoo(10, 20);
 lambddaNoVarComment(10, 20);
-function blah(a /* multiline trailing comment
-multiline */) {
+function blah(a) {
 }
-function blah2(a /* single line multiple trailing comments */ /* second */) {
+function blah2(a) {
 }
-function blah3(a // trailing commen single line
-) {
+function blah3(a) {
 }
-lambdaFoo = function (a, b) { return a * b; }; // This is trailing comment
-/*leading comment*/ (function () { return 0; }); // Needs to be wrapped in parens to be a valid expression (not declaration)
-/*leading comment*/ (function () { return 0; }); //trailing comment
-function blah4(/*1*/ a /*2*/, /*3*/ b /*4*/) {
+lambdaFoo = (a, b) => a * b;
+() => 0;
+(() => 0);
+function blah4(a, b) {
 }
 function foo1() {
-    // should emit this
 }
 function foo2() {
-    /// This is some detached comment
-    // should emit this leading comment of } too
 }
-
-
-//// [commentsFunction.d.ts]
-/** This comment should appear for foo*/
-declare function foo(): void;
-/** This is comment for function signature*/
-declare function fooWithParameters(/** this is comment about a*/ a: string, 
-/** this is comment for b*/
-b: number): void;
-/** fooFunc
- * comment
- */
-declare var fooFunc: (b: string) => string;
-declare var lambdaFoo: (a: number, b: number) => number;
-declare var lambddaNoVarComment: (a: number, b: number) => number;
-declare function blah(a: string): void;
-declare function blah2(a: string): void;
-declare function blah3(a: string): void;
-declare function blah4(/*1*/ a: string, /*3*/ b: string): void;
-declare function foo1(): void;
-declare function foo2(): void;

--- old.moduleVisibilityTest2.js
+++ new.moduleVisibilityTest2.js
@@= skipped -72, +72 lines =@@
 (function (OuterMod) {
     function someExportedOuterFunc() { return -1; }
     OuterMod.someExportedOuterFunc = someExportedOuterFunc;
-    var OuterInnerMod;
+    let OuterInnerMod;
     (function (OuterInnerMod) {
         function someExportedOuterInnerFunc() { return "foo"; }
         OuterInnerMod.someExportedOuterInnerFunc = someExportedOuterInnerFunc;
     })(OuterInnerMod = OuterMod.OuterInnerMod || (OuterMod.OuterInnerMod = {}));
 })(OuterMod || (OuterMod = {}));
-var OuterInnerAlias = OuterMod.OuterInnerMod;
 var M;
 (function (M) {
-    var InnerMod;
+    let InnerMod;
     (function (InnerMod) {
         function someExportedInnerFunc() { return -2; }
         InnerMod.someExportedInnerFunc = someExportedInnerFunc;
     })(InnerMod || (InnerMod = {}));
-    var E;
+    let E;
     (function (E) {
         E[E["A"] = 0] = "A";
         E[E["B"] = 1] = "B";
@@= skipped -22, +21 lines =@@
     })(E || (E = {}));
     var x = 5;
     var y = x + x;
-    var B = /** @class */ (function () {
-        function B() {
-            this.b = 0;
-        }
-        return B;
-    }());
-    var C = /** @class */ (function () {
-        function C() {
-            this.someProp = 1;
+    class B {
+        b = 0;
+    }
+    class C {
+        someMethodThatCallsAnOuterMethod() { return OuterInnerAlias.someExportedOuterInnerFunc(); }
+        someMethodThatCallsAnInnerMethod() { return InnerMod.someExportedInnerFunc(); }
+        someMethodThatCallsAnOuterInnerMethod() { return OuterMod.someExportedOuterFunc(); }
+        someMethod() { return 0; }
+        someProp = 1;
+        constructor() {
             function someInnerFunc() { return 2; }
             var someInnerVar = 3;
         }
-        C.prototype.someMethodThatCallsAnOuterMethod = function () { return OuterInnerAlias.someExportedOuterInnerFunc(); };
-        C.prototype.someMethodThatCallsAnInnerMethod = function () { return InnerMod.someExportedInnerFunc(); };
-        C.prototype.someMethodThatCallsAnOuterInnerMethod = function () { return OuterMod.someExportedOuterFunc(); };
-        C.prototype.someMethod = function () { return 0; };
-        return C;
-    }());
+    }
     M.C = C;
     var someModuleVar = 4;
     function someModuleFunction() { return 5; }

--- old.signatureCombiningRestParameters3.types
+++ new.signatureCombiningRestParameters3.types
@@= skipped -2, +2 lines =@@
 === signatureCombiningRestParameters3.ts ===
 interface ExtensionConfig<Options = any> {
   extendMarkSchema?:
->extendMarkSchema : ((this: { name: string; options: Options; }, extension: Mark) => Record<string, any>) | null | undefined
+>extendMarkSchema : ((this: { name: string; options: Options; }, extension: Mark<any>) => Record<string, any>) | null | undefined
 
     | ((
         this: {
@@= skipped -63, +63 lines =@@
 
 interface NodeConfig<Options = any> {
   extendMarkSchema?:
->extendMarkSchema : ((this: { name: string; options: Options; }, extension: Node) => Record<string, any>) | null | undefined
+>extendMarkSchema : ((this: { name: string; options: Options; }, extension: Node<any>) => Record<string, any>) | null | undefined
 
     | ((
         this: {
@@= skipped -32, +32 lines =@@
 
 interface MarkConfig<Options = any> {
   extendMarkSchema?:
->extendMarkSchema : ((this: { name: string; options: Options; }, extension: Mark) => Record<string, any>) | null | undefined
+>extendMarkSchema : ((this: { name: string; options: Options; }, extension: Mark<any>) => Record<string, any>) | null | undefined
 
     | ((
         this: {
@@= skipped -39, +39 lines =@@
   : T;
 
 declare function getExtensionField<T = any>(
->getExtensionField : <T = any>(extension: AnyExtension, field: string) => RemoveThis<T>
+>getExtensionField : <T>(extension: AnyExtension, field: string) => RemoveThis<T>
 
   extension: AnyExtension,
 >extension : AnyExtension
@@= skipped -11, +11 lines =@@
 ): RemoveThis<T>;
 
 const extendMarkSchema = getExtensionField<AnyConfig["extendMarkSchema"]>(
->extendMarkSchema : ((extension: Mark<any>) => Record<string, any>) | ((extension: Node<any>) => Record<string, any>) | ((extension: Mark<any>) => Record<string, any>) | null | undefined
->getExtensionField<AnyConfig["extendMarkSchema"]>(  e,  "extendMarkSchema",) : ((extension: Mark<any>) => Record<string, any>) | ((extension: Node<any>) => Record<string, any>) | ((extension: Mark<any>) => Record<string, any>) | null | undefined
->getExtensionField : <T = any>(extension: AnyExtension, field: string) => RemoveThis<T>
+>extendMarkSchema : ((...args: [extension: Mark<any>]) => Record<string, any>) | ((...args: [extension: Node<any>]) => Record<string, any>) | ((...args: [extension: Mark<any>]) => Record<string, any>) | null | undefined
+>getExtensionField<AnyConfig["extendMarkSchema"]>(  e,  "extendMarkSchema",) : ((...args: [extension: Mark<any>]) => Record<string, any>) | ((...args: [extension: Node<any>]) => Record<string, any>) | ((...args: [extension: Mark<any>]) => Record<string, any>) | null | undefined
+>getExtensionField : <T>(extension: AnyExtension, field: string) => RemoveThis<T>
 
   e,
 >e : AnyExtension
@@= skipped -16, +16 lines =@@
 >extension : Mark<any>
 
 if (extendMarkSchema) {
->extendMarkSchema : ((extension: Mark<any>) => Record<string, any>) | ((extension: Node<any>) => Record<string, any>) | ((extension: Mark<any>) => Record<string, any>) | null | undefined
+>extendMarkSchema : ((...args: [extension: Mark<any>]) => Record<string, any>) | ((...args: [extension: Node<any>]) => Record<string, any>) | ((...args: [extension: Mark<any>]) => Record<string, any>) | null | undefined
 
   extendMarkSchema(extension); // error
 >extendMarkSchema(extension) : Record<string, any>
->extendMarkSchema : ((extension: Mark<any>) => Record<string, any>) | ((extension: Node<any>) => Record<string, any>) | ((extension: Mark<any>) => Record<string, any>)
+>extendMarkSchema : ((...args: [extension: Mark<any>]) => Record<string, any>) | ((...args: [extension: Node<any>]) => Record<string, any>) | ((...args: [extension: Mark<any>]) => Record<string, any>)
 >extension : Mark<any>
 }
 

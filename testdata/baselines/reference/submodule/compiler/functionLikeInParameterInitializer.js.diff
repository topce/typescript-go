--- old.functionLikeInParameterInitializer.js
+++ new.functionLikeInParameterInitializer.js
@@= skipped -28, +28 lines =@@
 exports.baz2 = baz2;
 exports.baz3 = baz3;
 // error
-function bar(func) {
-    if (func === void 0) { func = function () { return foo; }; }
-    var foo = "in";
+function bar(func = () => foo) {
+    let foo = "in";
 }
 // error
-function baz1(func) {
-    if (func === void 0) { func = { f: function () { return foo; } }; }
-    var foo = "in";
+function baz1(func = { f() { return foo; } }) {
+    let foo = "in";
 }
 // error
-function baz2(func) {
-    if (func === void 0) { func = function () { return foo; }; }
-    var foo = "in";
+function baz2(func = function () { return foo; }) {
+    let foo = "in";
 }
 // error
-function baz3(func) {
-    if (func === void 0) { func = /** @class */ (function () {
-        function class_1() {
-            this.x = foo;
-        }
-        return class_1;
-    }()); }
-    var foo = "in";
+function baz3(func = class {
+    x = foo;
+}) {
+    let foo = "in";
 }

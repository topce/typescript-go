--- old.declarationEmitExpressionInExtends2.js
+++ new.declarationEmitExpressionInExtends2.js
@@= skipped -13, +13 lines =@@
 }
 
 //// [declarationEmitExpressionInExtends2.js]
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
-var C = /** @class */ (function () {
-    function C() {
-    }
-    return C;
-}());
+class C {
+    x;
+    y;
+}
 function getClass(c) {
     return C;
 }
-var MyClass = /** @class */ (function (_super) {
-    __extends(MyClass, _super);
-    function MyClass() {
-        return _super !== null && _super.apply(this, arguments) || this;
-    }
-    return MyClass;
-}(getClass(2)));
-
-
-//// [declarationEmitExpressionInExtends2.d.ts]
-declare class C<T, U> {
-    x: T;
-    y: U;
+class MyClass extends getClass(2) {
 }
-declare function getClass<T>(c: T): typeof C;
-declare const MyClass_base: typeof C;
-declare class MyClass extends MyClass_base<string, number> {
-}

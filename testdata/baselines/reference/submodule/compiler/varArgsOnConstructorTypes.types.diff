--- old.varArgsOnConstructorTypes.types
+++ new.varArgsOnConstructorTypes.types
@@= skipped -44, +44 lines =@@
 
 export interface I1 {
     register(inputClass: new(...params: any[]) => A);
->register : { (inputClass: new (...params: any[]) => A): any; (inputClass: { new (...params: any[]): A; }[]): any; }
+>register : { (inputClass: new (...params: any[]) => A): any; (inputClass: new (...params: any[]) => A[]): any; }
 >inputClass : new (...params: any[]) => A
 >params : any[]
 
     register(inputClass: { new (...params: any[]): A; }[]);
->register : { (inputClass: new (...params: any[]) => A): any; (inputClass: { new (...params: any[]): A; }[]): any; }
->inputClass : (new (...params: any[]) => A)[]
+>register : { (inputClass: new (...params: any[]) => A): any; (inputClass: new (...params: any[]) => A[]): any; }
+>inputClass : new (...params: any[]) => A[]
 >params : any[]
 }
 
@@= skipped -16, +16 lines =@@
 
 reg.register(B);
 >reg.register(B) : any
->reg.register : { (inputClass: new (...params: any[]) => A): any; (inputClass: { new (...params: any[]): A; }[]): any; }
+>reg.register : { (inputClass: new (...params: any[]) => A): any; (inputClass: new (...params: any[]) => A[]): any; }
 >reg : I1
->register : { (inputClass: new (...params: any[]) => A): any; (inputClass: { new (...params: any[]): A; }[]): any; }
+>register : { (inputClass: new (...params: any[]) => A): any; (inputClass: new (...params: any[]) => A[]): any; }
 >B : typeof B
 

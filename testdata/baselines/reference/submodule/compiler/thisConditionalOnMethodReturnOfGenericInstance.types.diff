--- old.thisConditionalOnMethodReturnOfGenericInstance.types
+++ new.thisConditionalOnMethodReturnOfGenericInstance.types
@@= skipped -4, +4 lines =@@
 >A : A<T>
 
     unmeasurableUsage!: {[K in keyof T]-?: T[K]};
->unmeasurableUsage : { [K in keyof T]-?: T[K]; }
+>unmeasurableUsage : { [K in keyof T]-?: T[K] }
 }
 
 class B<T> extends A<T> {
@@= skipped -8, +8 lines =@@
 >A : A<T>
 
     method(): string | (this extends C ? undefined : null) {
->method : () => string | (this extends C ? undefined : null)
+>method : () => string | (this extends C<any> ? undefined : null)
 
         return "";
 >"" : ""

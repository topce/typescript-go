--- old.duplicateLocalVariable1.js
+++ new.duplicateLocalVariable1.js
@@= skipped -346, +346 lines =@@
 
 //// [duplicateLocalVariable1.js]
 "use strict";
-//import FileManager = require('filemanager');
-//import App = require('app');
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.tests = exports.TestRunner = exports.TestCase = void 0;
 var TestFileDir = ".\\TempTestFiles";
-var TestCase = /** @class */ (function () {
-    function TestCase(name, test, errorMessageRegEx) {
+class TestCase {
+    name;
+    test;
+    errorMessageRegEx;
+    constructor(name, test, errorMessageRegEx) {
         this.name = name;
         this.test = test;
         this.errorMessageRegEx = errorMessageRegEx;
     }
-    return TestCase;
-}());
+}
 exports.TestCase = TestCase;
-var TestRunner = /** @class */ (function () {
-    function TestRunner() {
-        this.tests = [];
-    }
-    TestRunner.arrayCompare = function (arg1, arg2) {
+class TestRunner {
+    tests = [];
+    static arrayCompare(arg1, arg2) {
         return (arg1.every(function (val, index) { return val === arg2[index]; }));
-    };
-    TestRunner.prototype.addTest = function (test) {
+    }
+    addTest(test) {
         this.tests.push(test);
-    };
-    TestRunner.prototype.run = function () {
+    }
+    run() {
         var success = true;
         for (var test in this.tests) {
             var exception = false;
@@= skipped -60, +58 lines =@@
         }
         else {
         }
-    };
-    return TestRunner;
-}());
+    }
+}
 exports.TestRunner = TestRunner;
 exports.tests = (function () {
     var testRunner = new TestRunner();

--- old.emptyObjectNotSubtypeOfIndexSignatureContainingObject1.types
+++ new.emptyObjectNotSubtypeOfIndexSignatureContainingObject1.types
@@= skipped -31, +31 lines =@@
 
 // In lodash.d.ts this function has many overloads, but this seems to be the problematic one.
 function mapValues<T, TResult>(
->mapValues : <T, TResult>(obj: Dictionary<T> | NumericDictionary<T> | null | undefined, callback: DictionaryIterator<T, TResult>) => Dictionary<TResult>
+>mapValues : <T, TResult>(obj: Dictionary<T> | NumericDictionary<T>, callback: DictionaryIterator<T, TResult>) => Dictionary<TResult>
 
   obj: Dictionary<T> | NumericDictionary<T> | null | undefined,
 >obj : Dictionary<T> | NumericDictionary<T>
@@= skipped -25, +25 lines =@@
 }
 
 export function fooToBar(
->fooToBar : (foos: Record<string, Foo>) => Record<string, Bar | null>
+>fooToBar : (foos: Record<string, Foo>) => Record<string, Bar>
 
   foos: Record<string, Foo>
 >foos : Record<string, Foo>
@@= skipped -13, +13 lines =@@
 >foos : Record<string, Foo>
 >{} : {}
 >mapValues(foos, f => f.foo) : Dictionary<string>
->mapValues : <T, TResult>(obj: Dictionary<T> | NumericDictionary<T> | null | undefined, callback: DictionaryIterator<T, TResult>) => Dictionary<TResult>
+>mapValues : <T, TResult>(obj: Dictionary<T> | NumericDictionary<T>, callback: DictionaryIterator<T, TResult>) => Dictionary<TResult>
 >foos : Record<string, Foo>
 >f => f.foo : (f: Foo) => string
 >f : Foo

--- old.jsxIssuesErrorWhenTagExpectsTooManyArguments.js
+++ new.jsxIssuesErrorWhenTagExpectsTooManyArguments.js
@@= skipped -27, +27 lines =@@
 
 //// [jsxIssuesErrorWhenTagExpectsTooManyArguments.js]
 "use strict";
-/// <reference path="react16.d.ts" />
 Object.defineProperty(exports, "__esModule", { value: true });
-var React = require("react");
 function MyComp4(props, context, bad, verybad) {
-    return React.createElement("div", null);
+    return <div></div>;
 }
 function MyComp3(props, context, bad) {
-    return React.createElement("div", null);
+    return <div></div>;
 }
 function MyComp2(props, context) {
-    return React.createElement("div", null);
+    return <div></div>;
 }
-var a = React.createElement(MyComp4, { x: 2 }); // using `MyComp` as a component should error - it expects more arguments than react provides
-var b = React.createElement(MyComp3, { x: 2 }); // using `MyComp` as a component should error - it expects more arguments than react provides
-var c = React.createElement(MyComp2, { x: 2 }); // Should be OK, `context` is allowed, per react rules
-var d = React.createElement(MyTagWithOptionalNonJSXBits, { x: 2 }); // Technically OK, but probably questionable
+const a = <MyComp4 x={2}/>;
+const b = <MyComp3 x={2}/>;
+const c = <MyComp2 x={2}/>;
+const d = <MyTagWithOptionalNonJSXBits x={2}/>;

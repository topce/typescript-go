--- old.crashInGetTextOfComputedPropertyName.js
+++ new.crashInGetTextOfComputedPropertyName.js
@@= skipped -34, +34 lines =@@
 //// [crashInGetTextOfComputedPropertyName.js]
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
-var itemId = 'some-id';
+const itemId = 'some-id';
 // --- test on first level ---
-var items = {};
-var _a = items, _b = itemId, itemOk1 = _a[_b];
+const items = {};
+const { [itemId]: itemOk1 } = items;
 typeof itemOk1; // pass
-var objWithItems = { items: {} };
-var itemOk2 = objWithItems.items[itemId];
+const objWithItems = { items: {} };
+const itemOk2 = objWithItems.items[itemId];
 typeof itemOk2; // pass
-var _c = objWithItems, _d = _c.items /*happens when default value is provided*/, _e = _d === void 0 ? {} : _d /*happens when default value is provided*/, _f = itemId, itemWithTSError = _e[_f];
+const { items: { [itemId]: itemWithTSError } = {} /*happens when default value is provided*/ } = objWithItems;
 // in order to re-produce the error, uncomment next line:
 typeof itemWithTSError; // :(
 // will result in:

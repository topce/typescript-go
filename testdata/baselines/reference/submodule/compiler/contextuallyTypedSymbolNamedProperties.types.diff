--- old.contextuallyTypedSymbolNamedProperties.types
+++ new.contextuallyTypedSymbolNamedProperties.types
@@= skipped -31, +31 lines =@@
 >ab : Action
 
 declare function f<T extends { type: string | symbol }>(action: T, blah: { [K in T['type']]: (p: K) => void }): any;
->f : <T extends { type: string | symbol; }>(action: T, blah: { [K in T["type"]]: (p: K) => void; }) => any
+>f : <T extends { type: string | symbol; }>(action: T, blah: { [K in T["type"]]: (p: K) => void }) => any
 >type : string | symbol
 >action : T
->blah : { [K in T["type"]]: (p: K) => void; }
+>blah : { [K in T["type"]]: (p: K) => void }
 >p : K
 
 f(ab, {
 >f(ab, {    [A]: ap => { ap.description },    [B]: bp => { bp.description },}) : any
->f : <T extends { type: string | symbol; }>(action: T, blah: { [K in T["type"]]: (p: K) => void; }) => any
+>f : <T extends { type: string | symbol; }>(action: T, blah: { [K in T["type"]]: (p: K) => void }) => any
 >ab : Action
 >{    [A]: ap => { ap.description },    [B]: bp => { bp.description },} : { [A]: (ap: unique symbol) => void; [B]: (bp: unique symbol) => void; }
 

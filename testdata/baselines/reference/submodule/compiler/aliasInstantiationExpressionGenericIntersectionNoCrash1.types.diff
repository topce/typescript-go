--- old.aliasInstantiationExpressionGenericIntersectionNoCrash1.types
+++ new.aliasInstantiationExpressionGenericIntersectionNoCrash1.types
@@= skipped -8, +8 lines =@@
 }
 
 declare const Err: typeof ErrImpl & (<T>() => T);
->Err : typeof ErrImpl & (<T>() => T)
+>Err : typeof ErrImpl & <T>() => T
 >ErrImpl : typeof ErrImpl
 
 type ErrAlias<U> = typeof Err<U>;
->ErrAlias : { new (): ErrImpl<U>; prototype: ErrImpl<any>; } & (() => U)
->Err : typeof ErrImpl & (<T>() => T)
+>ErrAlias : { new (): ErrImpl<U>; prototype: ErrImpl<any>; } & () => U
+>Err : typeof ErrImpl & <T>() => T
 
 declare const e: ErrAlias<number>;
->e : { new (): ErrImpl<number>; prototype: ErrImpl<any>; } & (() => number)
+>e : { new (): ErrImpl<number>; prototype: ErrImpl<any>; } & () => number
 
 e as ErrAlias<string>;
->e as ErrAlias<string> : { new (): ErrImpl<string>; prototype: ErrImpl<any>; } & (() => string)
->e : { new (): ErrImpl<number>; prototype: ErrImpl<any>; } & (() => number)
+>e as ErrAlias<string> : { new (): ErrImpl<string>; prototype: ErrImpl<any>; } & () => string
+>e : { new (): ErrImpl<number>; prototype: ErrImpl<any>; } & () => number
 

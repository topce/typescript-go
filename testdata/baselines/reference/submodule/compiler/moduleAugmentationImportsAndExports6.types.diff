--- old.moduleAugmentationImportsAndExports6.types
+++ new.moduleAugmentationImportsAndExports6.types
@@= skipped -38, +38 lines =@@
 import I = N.Ifc;
 >I : any
 >N : any
->Ifc : I
+>Ifc : Ifc
 
 import C = N.Cls;
 >C : any
 >N : any
->Cls : C
+>Cls : Cls
 
 declare module "./f1" {
 >"./f1" : typeof import("f1")
@@= skipped -15, +15 lines =@@
 >foo : () => B
 
         bar(): I;
->bar : () => I
+>bar : () => Ifc
 
         baz(): C;
->baz : () => C
+>baz : () => Cls
     }
 }
 
@@= skipped -19, +19 lines =@@
 let b = a.foo().n;
 >b : number
 >a.foo().n : number
->a.foo() : import("f2").B
->a.foo : () => import("f2").B
+>a.foo() : B
+>a.foo : () => B
 >a : A
->foo : () => import("f2").B
+>foo : () => B
 >n : number
 
 let c = a.bar().a;
 >c : number
 >a.bar().a : number
->a.bar() : import("f3").N.Ifc
->a.bar : () => import("f3").N.Ifc
+>a.bar() : Ifc
+>a.bar : () => Ifc
 >a : A
->bar : () => import("f3").N.Ifc
+>bar : () => Ifc
 >a : number
 
 let d = a.baz().b;
 >d : number
 >a.baz().b : number
->a.baz() : import("f3").N.Cls
->a.baz : () => import("f3").N.Cls
+>a.baz() : Cls
+>a.baz : () => Cls
 >a : A
->baz : () => import("f3").N.Cls
+>baz : () => Cls
 >b : number
 

--- old.noImplicitReturnsInAsync2.js
+++ new.noImplicitReturnsInAsync2.js
@@= skipped -37, +37 lines =@@
 }
 
 //// [noImplicitReturnsInAsync2.js]
-var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
-    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
-    return new (P || (P = Promise))(function (resolve, reject) {
-        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
-        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
-        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
-        step((generator = generator.apply(thisArg, _arguments || [])).next());
-    });
-};
-// Should be an error, Promise<number>, currently retorted correctly 
-function test3() {
-    return __awaiter(this, arguments, void 0, function* (isError = true) {
-        if (isError === true) {
-            return 6;
-        }
-    });
+async function test3(isError = true) {
+    if (isError === true) {
+        return 6;
+    }
 }
-// Should not be an error, Promise<any>, currently **not** working
-function test4() {
-    return __awaiter(this, arguments, void 0, function* (isError = true) {
-        if (isError === true) {
-            return undefined;
-        }
-    });
+async function test4(isError = true) {
+    if (isError === true) {
+        return undefined;
+    }
 }
-// should not be error, Promise<any> currently working correctly 
-function test5() {
-    return __awaiter(this, arguments, void 0, function* (isError = true) {
-        if (isError === true) {
-            return undefined;
-        }
-    });
+async function test5(isError = true) {
+    if (isError === true) {
+        return undefined;
+    }
 }
-// should be error, currently reported correctly 
-function test6() {
-    return __awaiter(this, arguments, void 0, function* (isError = true) {
-        if (isError === true) {
-            return undefined;
-        }
-    });
+async function test6(isError = true) {
+    if (isError === true) {
+        return undefined;
+    }
 }
-// infered to be Promise<void>, should not be an error, currently reported correctly 
-function test7() {
-    return __awaiter(this, arguments, void 0, function* (isError = true) {
-        if (isError === true) {
-            return;
-        }
-    });
+async function test7(isError = true) {
+    if (isError === true) {
+        return;
+    }
 }

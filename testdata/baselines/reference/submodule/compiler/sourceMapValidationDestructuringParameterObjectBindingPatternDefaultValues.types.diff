--- old.sourceMapValidationDestructuringParameterObjectBindingPatternDefaultValues.types
+++ new.sourceMapValidationDestructuringParameterObjectBindingPatternDefaultValues.types
@@= skipped -8, +8 lines =@@
 >skill : string
 }
 declare var console: {
->console : { log(msg: string): void; }
+>console : { log: (msg: string) => void; }
 
     log(msg: string): void;
 >log : (msg: string) => void
@@= skipped -19, +19 lines =@@
 >"mowing" : "mowing"
 
 function foo1({ name: nameA = "<NoName>" }: Robot = { }) {
->foo1 : ({ name: nameA }?: Robot) => void
+>foo1 : (__0?: Robot) => void
 >name : any
 >nameA : string
 >"<NoName>" : "<NoName>"
@@= skipped -9, +9 lines =@@
     console.log(nameA);
 >console.log(nameA) : void
 >console.log : (msg: string) => void
->console : { log(msg: string): void; }
+>console : { log: (msg: string) => void; }
 >log : (msg: string) => void
 >nameA : string
 }
 function foo2({ name: nameB = "<NoName>", skill: skillB = "noSkill" }: Robot = {}) {
->foo2 : ({ name: nameB, skill: skillB }?: Robot) => void
+>foo2 : (__0?: Robot) => void
 >name : any
 >nameB : string
 >"<NoName>" : "<NoName>"
@@= skipped -17, +17 lines =@@
     console.log(nameB);
 >console.log(nameB) : void
 >console.log : (msg: string) => void
->console : { log(msg: string): void; }
+>console : { log: (msg: string) => void; }
 >log : (msg: string) => void
 >nameB : string
 }
 function foo3({ name = "<NoName>" }: Robot = {}) {
->foo3 : ({ name }?: Robot) => void
+>foo3 : (__0?: Robot) => void
 >name : string
 >"<NoName>" : "<NoName>"
 >{} : {}
@@= skipped -13, +13 lines =@@
     console.log(name);
 >console.log(name) : void
 >console.log : (msg: string) => void
->console : { log(msg: string): void; }
+>console : { log: (msg: string) => void; }
 >log : (msg: string) => void
 >name : string
 }
 
 foo1(robotA);
 >foo1(robotA) : void
->foo1 : ({ name: nameA }?: Robot) => void
+>foo1 : (__0?: Robot) => void
 >robotA : Robot
 
 foo1({ name: "Edger", skill: "cutting edges" });
 >foo1({ name: "Edger", skill: "cutting edges" }) : void
->foo1 : ({ name: nameA }?: Robot) => void
+>foo1 : (__0?: Robot) => void
 >{ name: "Edger", skill: "cutting edges" } : { name: string; skill: string; }
 >name : string
 >"Edger" : "Edger"
@@= skipped -21, +21 lines =@@
 
 foo2(robotA);
 >foo2(robotA) : void
->foo2 : ({ name: nameB, skill: skillB }?: Robot) => void
+>foo2 : (__0?: Robot) => void
 >robotA : Robot
 
 foo2({ name: "Edger", skill: "cutting edges" });
 >foo2({ name: "Edger", skill: "cutting edges" }) : void
->foo2 : ({ name: nameB, skill: skillB }?: Robot) => void
+>foo2 : (__0?: Robot) => void
 >{ name: "Edger", skill: "cutting edges" } : { name: string; skill: string; }
 >name : string
 >"Edger" : "Edger"
@@= skipped -14, +14 lines =@@
 
 foo3(robotA);
 >foo3(robotA) : void
->foo3 : ({ name }?: Robot) => void
+>foo3 : (__0?: Robot) => void
 >robotA : Robot
 
 foo3({ name: "Edger", skill: "cutting edges" });
 >foo3({ name: "Edger", skill: "cutting edges" }) : void
->foo3 : ({ name }?: Robot) => void
+>foo3 : (__0?: Robot) => void
 >{ name: "Edger", skill: "cutting edges" } : { name: string; skill: string; }
 >name : string
 >"Edger" : "Edger"

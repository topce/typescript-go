--- old.superCallArgsMustMatch.js
+++ new.superCallArgsMustMatch.js
@@= skipped -27, +27 lines =@@
 
 
 //// [superCallArgsMustMatch.js]
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
-var T5 = /** @class */ (function () {
-    function T5(bar) {
+class T5 {
+    bar;
+    foo;
+    constructor(bar) {
         this.bar = bar;
     }
-    return T5;
-}());
-var T6 = /** @class */ (function (_super) {
-    __extends(T6, _super);
-    function T6() {
+}
+class T6 extends T5 {
+    constructor() {
         // Should error; base constructor has type T for first arg,
         // which is instantiated with 'number' in the extends clause
-        var _this = _super.call(this, "hi") || this;
-        var x = _this.foo;
-        return _this;
+        super("hi");
+        var x = this.foo;
     }
-    return T6;
-}(T5));
+}

--- old.contextuallyTypedOptionalProperty(exactoptionalpropertytypes=false).types
+++ new.contextuallyTypedOptionalProperty(exactoptionalpropertytypes=false).types
@@= skipped -8, +8 lines =@@
 >value : T
 
 declare function foo(pos: { x?: number; y?: number }): boolean;
->foo : (pos: { x?: number; y?: number; }) => boolean
->pos : { x?: number; y?: number; }
+>foo : (pos: { x?: number | undefined; y?: number | undefined; }) => boolean
+>pos : { x?: number | undefined; y?: number | undefined; }
 >x : number | undefined
 >y : number | undefined
 
 foo({ y: match(y => y > 0) })
 >foo({ y: match(y => y > 0) }) : boolean
->foo : (pos: { x?: number; y?: number; }) => boolean
+>foo : (pos: { x?: number | undefined; y?: number | undefined; }) => boolean
 >{ y: match(y => y > 0) } : { y: number | undefined; }
 >y : number | undefined
 >match(y => y > 0) : number | undefined
@@= skipped -19, +19 lines =@@
 >0 : 0
 
 declare function foo2(point: [number?]): boolean;
->foo2 : (point: [number?]) => boolean
+>foo2 : (point: [(number | undefined)?]) => boolean
 >point : [(number | undefined)?]
 
 foo2([match(y => y > 0)])
 >foo2([match(y => y > 0)]) : boolean
->foo2 : (point: [number?]) => boolean
+>foo2 : (point: [(number | undefined)?]) => boolean
 >[match(y => y > 0)] : [number | undefined]
 >match(y => y > 0) : number | undefined
 >match : <T>(cb: (value: T) => boolean) => T

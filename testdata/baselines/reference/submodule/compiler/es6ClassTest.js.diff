--- old.es6ClassTest.js
+++ new.es6ClassTest.js
@@= skipped -86, +86 lines =@@
 
 
 //// [es6ClassTest.js]
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
-var Bar = /** @class */ (function () {
-    function Bar(n) {
-    }
-    Bar.prototype.prop1 = function (x) {
+class Bar {
+    goo;
+    prop1(x) {
         return x;
-    };
-    return Bar;
-}());
+    }
+    constructor(n) { }
+}
 // new-style class
-var Foo = /** @class */ (function (_super) {
-    __extends(Foo, _super);
-    function Foo(x, y, z) {
-        if (z === void 0) { z = 0; }
-        var _this = _super.call(this, x) || this;
-        _this.y = y;
-        _this.z = z;
-        _this.gar = 0;
-        _this.zoo = "zoo";
-        _this.x = x;
-        _this.gar = 5;
-        return _this;
+class Foo extends Bar {
+    y;
+    z;
+    foo;
+    gar = 0;
+    zoo = "zoo";
+    x;
+    bar() { return 0; }
+    boo(x) { return x; }
+    static statVal = 0;
+    constructor(x, y, z = 0) {
+        super(x);
+        this.y = y;
+        this.z = z;
+        this.x = x;
+        this.gar = 5;
     }
-    Foo.prototype.bar = function () { return 0; };
-    Foo.prototype.boo = function (x) { return x; };
-    Foo.statVal = 0;
-    return Foo;
-}(Bar));
+}
 var f = new Foo();
 //class GetSetMonster {
 //  // attack(target) {

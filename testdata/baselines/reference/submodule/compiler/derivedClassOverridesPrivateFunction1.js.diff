--- old.derivedClassOverridesPrivateFunction1.js
+++ new.derivedClassOverridesPrivateFunction1.js
@@= skipped -17, +17 lines =@@
 new DerivedClass();
 
 //// [derivedClassOverridesPrivateFunction1.js]
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
-var BaseClass = /** @class */ (function () {
-    function BaseClass() {
+class BaseClass {
+    constructor() {
         this._init();
     }
-    BaseClass.prototype._init = function () {
-    };
-    return BaseClass;
-}());
-var DerivedClass = /** @class */ (function (_super) {
-    __extends(DerivedClass, _super);
-    function DerivedClass() {
-        return _super.call(this) || this;
+    _init() {
     }
-    DerivedClass.prototype._init = function () {
-    };
-    return DerivedClass;
-}(BaseClass));
+}
+class DerivedClass extends BaseClass {
+    constructor() {
+        super();
+    }
+    _init() {
+    }
+}
 new DerivedClass();

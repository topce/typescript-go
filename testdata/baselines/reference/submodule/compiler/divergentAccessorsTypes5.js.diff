--- old.divergentAccessorsTypes5.js
+++ new.divergentAccessorsTypes5.js
@@= skipped -39, +39 lines =@@
 
 
 //// [divergentAccessorsTypes5.js]
-// Not really different from divergentAccessorsTypes4.ts,
-// but goes through the deferred type code
-var One = /** @class */ (function () {
-    function One() {
-    }
-    Object.defineProperty(One.prototype, "prop1", {
-        get: function () { return ""; },
-        set: function (s) { },
-        enumerable: false,
-        configurable: true
-    });
-    return One;
-}());
-var Two = /** @class */ (function () {
-    function Two() {
-    }
-    Object.defineProperty(Two.prototype, "prop1", {
-        get: function () { return "hello"; },
-        set: function (s) { },
-        enumerable: false,
-        configurable: true
-    });
-    Object.defineProperty(Two.prototype, "prop2", {
-        get: function () { return ""; },
-        set: function (s) { },
-        enumerable: false,
-        configurable: true
-    });
-    return Two;
-}());
-var Three = /** @class */ (function () {
-    function Three() {
-    }
-    Object.defineProperty(Three.prototype, "prop1", {
-        get: function () { return "hello"; },
-        set: function (s) { },
-        enumerable: false,
-        configurable: true
-    });
-    Object.defineProperty(Three.prototype, "prop2", {
-        get: function () { return ""; },
-        set: function (s) { },
-        enumerable: false,
-        configurable: true
-    });
-    return Three;
-}());
-// "hello"
-i.prop1 = 42; // error
+class One {
+    get prop1() { return ""; }
+    set prop1(s) { }
+    prop2;
+}
+class Two {
+    get prop1() { return "hello"; }
+    set prop1(s) { }
+    get prop2() { return ""; }
+    set prop2(s) { }
+}
+class Three {
+    get prop1() { return "hello"; }
+    set prop1(s) { }
+    get prop2() { return ""; }
+    set prop2(s) { }
+}
+i.prop1 = 42;
 i.prop1 = "hello";
-// 42
 i.prop2 = 42;
-i.prop2 = "hello"; // error
+i.prop2 = "hello";

--- old.computedPropertiesNarrowed.js
+++ new.computedPropertiesNarrowed.js
@@= skipped -54, +54 lines =@@
 const x = Math.random() ? 0 : 1;
 assert(x);
 export let o = {
-    [x]: 1 // error narrow type !== declared type
+    [x]: 1
 };
 const y = 0;
 export let o2 = {
-    [y]: 1 // ok literal computed type 
+    [y]: 1
 };
-// literals are ok
 export let o3 = { [1]: 1 };
 export let o31 = { [-1]: 1 };
-export let o32 = { [1 - 1]: 1 }; // error number 
+export let o32 = { [1 - 1]: 1 };
 let u = Symbol();
 export let o4 = {
-    [u]: 1 // Should error, nut a unique symbol
+    [u]: 1
 };
 export let o5 = {
-    [Symbol()]: 1 // Should error
+    [Symbol()]: 1
 };
 const uu = Symbol();
 export let o6 = {
-    [uu]: 1 // Should be ok
+    [uu]: 1
 };
 function foo() { return 1; }
 export let o7 = {
-    [foo()]: 1 // Should error
+    [foo()]: 1
 };
 let E = { A: 1 };
 export const o8 = {
-    [E.A]: 1 // Fresh 
+    [E.A]: 1
 };
 function ns() { return { v: 0 }; }
 export const o9 = {

--- old.recursiveTypeRelations.types
+++ new.recursiveTypeRelations.types
@@= skipped -31, +31 lines =@@
 >ClassNameArg : ClassNameArg<S>
 
 export function css<S extends { [K in keyof S]: string }>(styles: S, ...classNames: ClassNameArg<S>[]): string {
->css : <S extends { [K in keyof S]: string; }>(styles: S, ...classNames: ClassNameArg<S>[]) => string
+>css : <S extends { [K in keyof S]: string }>(styles: S, ...classNames: ClassNameArg<S>[]) => string
 >styles : S
 >classNames : ClassNameArg<S>[]
 
@@= skipped -21, +21 lines =@@
     }
     if (typeof arg == "string") {
 >typeof arg == "string" : boolean
->typeof arg : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof arg : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >arg : ClassNameArg<S>
 >"string" : "string"
 
@@= skipped -11, +11 lines =@@
     }
     if (typeof arg == "object") {
 >typeof arg == "object" : boolean
->typeof arg : "string" | "number" | "bigint" | "boolean" | "symbol" | "undefined" | "object" | "function"
+>typeof arg : "bigint" | "boolean" | "function" | "number" | "object" | "string" | "symbol" | "undefined"
 >arg : ClassNameArg<S>
 >"object" : "object"
 

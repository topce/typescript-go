--- old.asyncFunctionsAndStrictNullChecks.js
+++ new.asyncFunctionsAndStrictNullChecks.js
@@= skipped -27, +27 lines =@@
 
 
 //// [asyncFunctionsAndStrictNullChecks.js]
-var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
-    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
-    return new (P || (P = Promise))(function (resolve, reject) {
-        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
-        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
-        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
-        step((generator = generator.apply(thisArg, _arguments || [])).next());
-    });
-};
-function sample(promise) {
-    return __awaiter(this, void 0, void 0, function* () {
-        var number = yield promise;
-    });
+async function sample(promise) {
+    var number = await promise;
 }
-function sample2(x) {
-    return __awaiter(this, void 0, void 0, function* () {
-        let x1 = yield resolve1(x);
-        let x2 = yield resolve2(x);
-    });
+async function sample2(x) {
+    let x1 = await resolve1(x);
+    let x2 = await resolve2(x);
 }

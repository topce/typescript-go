--- old.circularInlineMappedGenericTupleTypeNoCrash.types
+++ new.circularInlineMappedGenericTupleTypeNoCrash.types
@@= skipped -4, +4 lines =@@
 >Foo : Foo<Elements>
 
   public readonly elements: { [P in keyof Elements]: { bar: Elements[P] } };
->elements : { [P in keyof Elements]: { bar: Elements[P]; }; }
+>elements : { [P in keyof Elements]: { bar: Elements[P]; } }
 >bar : Elements[P]
 
   public constructor(
     ...elements: { [P in keyof Elements]: { bar: Elements[P] } }
->elements : { [P in keyof Elements]: { bar: Elements[P]; }; }
+>elements : { [P in keyof Elements]: { bar: Elements[P]; } }
 >bar : Elements[P]
 
   ) {
     this.elements = elements;
->this.elements = elements : { [P in keyof Elements]: { bar: Elements[P]; }; }
->this.elements : { [P in keyof Elements]: { bar: Elements[P]; }; }
+>this.elements = elements : { [P in keyof Elements]: { bar: Elements[P]; } }
+>this.elements : { [P in keyof Elements]: { bar: Elements[P]; } }
 >this : this
->elements : { [P in keyof Elements]: { bar: Elements[P]; }; }
->elements : { [P in keyof Elements]: { bar: Elements[P]; }; }
+>elements : { [P in keyof Elements]: { bar: Elements[P]; } }
+>elements : { [P in keyof Elements]: { bar: Elements[P]; } }
   }
 
   public add(): Foo<[...Elements, "abc"]> {
@@= skipped -24, +24 lines =@@
 >new Foo<[...Elements, "abc"]>(...this.elements, { bar: "abc" }) : Foo<[...Elements, "abc"]>
 >Foo : typeof Foo
 >...this.elements : { bar: unknown; }
->this.elements : { [P in keyof Elements]: { bar: Elements[P]; }; }
+>this.elements : { [P in keyof Elements]: { bar: Elements[P]; } }
 >this : this
->elements : { [P in keyof Elements]: { bar: Elements[P]; }; }
+>elements : { [P in keyof Elements]: { bar: Elements[P]; } }
 >{ bar: "abc" } : { bar: string; }
 >bar : string
 >"abc" : "abc"

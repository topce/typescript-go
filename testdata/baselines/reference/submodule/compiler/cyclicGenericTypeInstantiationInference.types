//// [tests/cases/compiler/cyclicGenericTypeInstantiationInference.ts] ////

=== cyclicGenericTypeInstantiationInference.ts ===
function foo<T>() {
>foo : <T>() => { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }

    var z = foo<typeof y>();
>z : { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }; }
>foo<typeof y>() : { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }; }
>foo : <T>() => { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }
>y : { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }; }

    var y: {
>y : { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }; }

        y2: typeof z
>y2 : { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }; }
>z : { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }; }

    };
    return y;
>y : { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }; }
}


function bar<T>() {
>bar : <T>() => { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }

    var z = bar<typeof y>();
>z : { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }; }
>bar<typeof y>() : { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }; }
>bar : <T>() => { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }
>y : { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }; }

    var y: {
>y : { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }; }

        y2: typeof z;
>y2 : { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }; }
>z : { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }; }
    }
    return y;
>y : { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }; }
}

var a = foo<number>();
>a : { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }; }
>foo<number>() : { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }; }
>foo : <T>() => { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }

var b = bar<number>();
>b : { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }; }
>bar<number>() : { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }; }
>bar : <T>() => { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }

function test<T>(x: typeof a): void { }
>test : <T>(x: { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }) => void
>x : { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }; }
>a : { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }; }

test(b);
>test(b) : void
>test : <T>(x: { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }) => void
>b : { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: { y2: ???; }; }; }; }; }; }; }; }; }


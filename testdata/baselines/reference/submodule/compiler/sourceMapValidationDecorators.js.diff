--- old.sourceMapValidationDecorators.js
+++ new.sourceMapValidationDecorators.js
@@= skipped -56, +56 lines =@@
 }
 
 //// [sourceMapValidationDecorators.js]
-var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
-    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
-    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
-    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
-    return c > 3 && r && Object.defineProperty(target, key, r), r;
-};
-var __param = (this && this.__param) || function (paramIndex, decorator) {
-    return function (target, key) { decorator(target, key, paramIndex); }
-};
-var Greeter = /** @class */ (function () {
-    function Greeter(greeting) {
-        var b = [];
-        for (var _i = 1; _i < arguments.length; _i++) {
-            b[_i - 1] = arguments[_i];
-        }
+@ClassDecorator1
+@ClassDecorator2(10)
+class Greeter {
+    greeting;
+    constructor(greeting, ...b) {
         this.greeting = greeting;
     }
-    Greeter.prototype.greet = function () {
+    @PropertyDecorator1
+    @PropertyDecorator2(40)
+    greet() {
         return "<h1>" + this.greeting + "</h1>";
-    };
-    Greeter.prototype.fn = function (x) {
+    }
+    @PropertyDecorator1
+    @PropertyDecorator2(50)
+    x;
+    @PropertyDecorator1
+    @PropertyDecorator2(60)
+    static x1 = 10;
+    fn(x) {
         return this.greeting;
-    };
-    Object.defineProperty(Greeter.prototype, "greetings", {
-        get: function () {
-            return this.greeting;
-        },
-        set: function (greetings) {
-            this.greeting = greetings;
-        },
-        enumerable: false,
-        configurable: true
-    });
-    Greeter.x1 = 10;
-    __decorate([
-        PropertyDecorator1,
-        PropertyDecorator2(40)
-    ], Greeter.prototype, "greet", null);
-    __decorate([
-        PropertyDecorator1,
-        PropertyDecorator2(50)
-    ], Greeter.prototype, "x", void 0);
-    __decorate([
-        __param(0, ParameterDecorator1),
-        __param(0, ParameterDecorator2(70))
-    ], Greeter.prototype, "fn", null);
-    __decorate([
-        PropertyDecorator1,
-        PropertyDecorator2(80),
-        __param(0, ParameterDecorator1),
-        __param(0, ParameterDecorator2(90))
-    ], Greeter.prototype, "greetings", null);
-    __decorate([
-        PropertyDecorator1,
-        PropertyDecorator2(60)
-    ], Greeter, "x1", void 0);
-    Greeter = __decorate([
-        ClassDecorator1,
-        ClassDecorator2(10),
-        __param(0, ParameterDecorator1),
-        __param(0, ParameterDecorator2(20)),
-        __param(1, ParameterDecorator1),
-        __param(1, ParameterDecorator2(30))
-    ], Greeter);
-    return Greeter;
-}());
-//# sourceMappingURL=sourceMapValidationDecorators.js.map
+    }
+    @PropertyDecorator1
+    @PropertyDecorator2(80)
+    get greetings() {
+        return this.greeting;
+    }
+    set greetings(greetings) {
+        this.greeting = greetings;
+    }
+}

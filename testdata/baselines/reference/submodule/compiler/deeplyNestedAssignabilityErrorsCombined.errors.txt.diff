--- old.deeplyNestedAssignabilityErrorsCombined.errors.txt
+++ new.deeplyNestedAssignabilityErrorsCombined.errors.txt
@@= skipped -0, +0 lines =@@
-deeplyNestedAssignabilityErrorsCombined.ts(3,1): error TS2322: Type '{ a: { b: { c: { d: { e: { f(): { g: number; }; }; }; }; }; }; }' is not assignable to type '{ a: { b: { c: { d: { e: { f(): { g: string; }; }; }; }; }; }; }'.
+deeplyNestedAssignabilityErrorsCombined.ts(3,1): error TS2322: Type '{ a: { b: { c: { d: { e: { f: () => { g: number; }; }; }; }; }; }; }' is not assignable to type '{ a: { b: { c: { d: { e: { f: () => { g: string; }; }; }; }; }; }; }'.
   The types of 'a.b.c.d.e.f().g' are incompatible between these types.
     Type 'number' is not assignable to type 'string'.
 deeplyNestedAssignabilityErrorsCombined.ts(15,1): error TS2322: Type '{ a: { b: { c: { d: { e: { f: typeof Ctor2; }; }; }; }; }; }' is not assignable to type '{ a: { b: { c: { d: { e: { f: typeof Ctor1; }; }; }; }; }; }'.
@@= skipped -10, +10 lines =@@
     let y = { a: { b: { c: { d: { e: { f() { return { g: 12345 }; } } } } } } };
     x = y;
     ~
-!!! error TS2322: Type '{ a: { b: { c: { d: { e: { f(): { g: number; }; }; }; }; }; }; }' is not assignable to type '{ a: { b: { c: { d: { e: { f(): { g: string; }; }; }; }; }; }; }'.
+!!! error TS2322: Type '{ a: { b: { c: { d: { e: { f: () => { g: number; }; }; }; }; }; }; }' is not assignable to type '{ a: { b: { c: { d: { e: { f: () => { g: string; }; }; }; }; }; }; }'.
 !!! error TS2322:   The types of 'a.b.c.d.e.f().g' are incompatible between these types.
 !!! error TS2322:     Type 'number' is not assignable to type 'string'.
     

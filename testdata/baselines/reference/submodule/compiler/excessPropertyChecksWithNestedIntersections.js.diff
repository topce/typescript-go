--- old.excessPropertyChecksWithNestedIntersections.js
+++ new.excessPropertyChecksWithNestedIntersections.js
@@= skipped -74, +74 lines =@@
 
 //// [excessPropertyChecksWithNestedIntersections.js]
 "use strict";
-// https://github.com/Microsoft/TypeScript/issues/13813
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.myInstance = exports.photo = exports.obj = void 0;
-var a = { a: { x: 'hello' } }; // ok
-var b = { a: { x: 2 } }; // error - types of property x are incompatible
-var c = { a: { x: 'hello', y: 2 } }; // error - y does not exist in type A
-var d = { a: { x: 'hello' }, c: 5 }; // ok
-var e = { a: { x: 2 }, c: 5 }; // error - types of property x are incompatible
-var f = { a: { x: 'hello', y: 2 }, c: 5 }; // error - y does not exist in type A
+let a = { a: { x: 'hello' } };
+let b = { a: { x: 2 } };
+let c = { a: { x: 'hello', y: 2 } };
+let d = { a: { x: 'hello' }, c: 5 };
+let e = { a: { x: 2 }, c: 5 };
+let f = { a: { x: 'hello', y: 2 }, c: 5 };
 exports.photo = {
     id: 1,
     url: '',
-    xyz: 1 // Great! This causes an error!
+    xyz: 1
 };
 exports.myInstance = {
     id: 1,
@@= skipped -20, +19 lines =@@
     photo: {
         id: 1,
         url: '',
-        xyz: 2 // This should also be an error
+        xyz: 2
     }
 };
-var test;
+let test;
 test = { foo: true, bar: true, boo: true };
 test = { foo: true, bar: { foo: true, bar: true, boo: true } };

--- old.constEnums.js
+++ new.constEnums.js
@@= skipped -180, +180 lines =@@
 
 
 //// [constEnums.js]
+var Enum1;
+(function (Enum1) {
+    Enum1[Enum1["A0"] = 100] = "A0";
+})(Enum1 || (Enum1 = {}));
+(function (Enum1) {
+    Enum1[Enum1["A"] = 0] = "A";
+    Enum1[Enum1["B"] = 1] = "B";
+    Enum1[Enum1["C"] = 10] = "C";
+    Enum1[Enum1["D"] = 1] = "D";
+    Enum1[Enum1["E"] = 1] = "E";
+    Enum1[Enum1["F"] = 1] = "F";
+    Enum1[Enum1["G"] = 1] = "G";
+    Enum1[Enum1["H"] = -2] = "H";
+    Enum1[Enum1["I"] = 0] = "I";
+    Enum1[Enum1["J"] = 0] = "J";
+    Enum1[Enum1["K"] = -6] = "K";
+    Enum1[Enum1["L"] = -2] = "L";
+    Enum1[Enum1["M"] = 2] = "M";
+    Enum1[Enum1["N"] = 2] = "N";
+    Enum1[Enum1["O"] = 0] = "O";
+    Enum1[Enum1["P"] = 0] = "P";
+    Enum1[Enum1["PQ"] = 1] = "PQ";
+    Enum1[Enum1["Q"] = -1] = "Q";
+    Enum1[Enum1["R"] = 0] = "R";
+    Enum1[Enum1["S"] = 0] = "S";
+    Enum1[Enum1["T"] = 11] = "T";
+    Enum1[Enum1["U"] = 11] = "U";
+    Enum1[Enum1["V"] = 11] = "V";
+    Enum1[Enum1["W"] = 11] = "W";
+    Enum1["W1"] = A0;
+    if (typeof Enum1.W1 !== "string") Enum1[Enum1.W1] = "W1";
+    Enum1["W2"] = Enum1.A0;
+    if (typeof Enum1.W2 !== "string") Enum1[Enum1.W2] = "W2";
+    Enum1["W3"] = Enum1["A0"];
+    if (typeof Enum1.W3 !== "string") Enum1[Enum1.W3] = "W3";
+    Enum1[Enum1["W4"] = 11] = "W4";
+    Enum1[Enum1["W5"] = 11] = "W5";
+})(Enum1 || (Enum1 = {}));
+var Comments;
+(function (Comments) {
+    Comments[Comments["//"] = 0] = "//";
+    Comments[Comments["/*"] = 1] = "/*";
+    Comments[Comments["*/"] = 2] = "*/";
+    Comments[Comments["///"] = 3] = "///";
+    Comments[Comments["#"] = 4] = "#";
+    Comments[Comments["<!--"] = 5] = "<!--";
+    Comments[Comments["-->"] = 6] = "-->";
+})(Comments || (Comments = {}));
 var A2;
 (function (A2) {
-    var B;
+    let B;
     (function (B) {
-        // module C will be classified as value
-        var C;
+        let C;
         (function (C) {
             var x = 1;
         })(C = B.C || (B.C = {}));
     })(B = A2.B || (A2.B = {}));
 })(A2 || (A2 = {}));
-var I2 = A2.B;
 function foo0(e) {
-    if (e === 1 /* I.V1 */) {
+    if (e === I.V1) {
     }
-    else if (e === 101 /* I.V2 */) {
+    else if (e === I.V2) {
     }
 }
 function foo1(e) {
-    if (e === 10 /* I1.C.E.V1 */) {
+    if (e === I1.C.E.V1) {
     }
-    else if (e === 110 /* I1.C.E.V2 */) {
+    else if (e === I1.C.E.V2) {
     }
 }
 function foo2(e) {
-    if (e === 10 /* I2.C.E.V1 */) {
+    if (e === I2.C.E.V1) {
     }
-    else if (e === 110 /* I2.C.E.V2 */) {
+    else if (e === I2.C.E.V2) {
     }
 }
 function foo(x) {
     switch (x) {
-        case 0 /* Enum1.A */:
-        case 1 /* Enum1.B */:
-        case 10 /* Enum1.C */:
-        case 1 /* Enum1.D */:
-        case 1 /* Enum1.E */:
-        case 1 /* Enum1.F */:
-        case 1 /* Enum1.G */:
-        case -2 /* Enum1.H */:
-        case 0 /* Enum1.I */:
-        case 0 /* Enum1.J */:
-        case -6 /* Enum1.K */:
-        case -2 /* Enum1.L */:
-        case 2 /* Enum1.M */:
-        case 2 /* Enum1.N */:
-        case 0 /* Enum1.O */:
-        case 0 /* Enum1.P */:
-        case 1 /* Enum1.PQ */:
-        case -1 /* Enum1.Q */:
-        case 0 /* Enum1.R */:
-        case 0 /* Enum1.S */:
-        case 11 /* Enum1["T"] */:
-        case 11 /* Enum1[`U`] */:
-        case 11 /* Enum1.V */:
-        case 11 /* Enum1.W */:
-        case 100 /* Enum1.W1 */:
-        case 100 /* Enum1.W2 */:
-        case 100 /* Enum1.W3 */:
-        case 11 /* Enum1.W4 */:
+        case Enum1.A:
+        case Enum1.B:
+        case Enum1.C:
+        case Enum1.D:
+        case Enum1.E:
+        case Enum1.F:
+        case Enum1.G:
+        case Enum1.H:
+        case Enum1.I:
+        case Enum1.J:
+        case Enum1.K:
+        case Enum1.L:
+        case Enum1.M:
+        case Enum1.N:
+        case Enum1.O:
+        case Enum1.P:
+        case Enum1.PQ:
+        case Enum1.Q:
+        case Enum1.R:
+        case Enum1.S:
+        case Enum1["T"]:
+        case Enum1[`U`]:
+        case Enum1.V:
+        case Enum1.W:
+        case Enum1.W1:
+        case Enum1.W2:
+        case Enum1.W3:
+        case Enum1.W4:
             break;
     }
 }
 function bar(e) {
     switch (e) {
-        case 1 /* A.B.C.E.V1 */: return 1;
-        case 101 /* A.B.C.E.V2 */: return 1;
-        case 64 /* A.B.C.E.V3 */: return 1;
+        case A.B.C.E.V1: return 1;
+        case A.B.C.E.V2: return 1;
+        case A.B.C.E.V3: return 1;
     }
 }
 function baz(c) {
     switch (c) {
-        case 0 /* Comments["//"] */:
-        case 1 /* Comments["/*"] */:
-        case 2 /* Comments["*_/"] */:
-        case 3 /* Comments["///"] */:
-        case 4 /* Comments["#"] */:
-        case 5 /* Comments["<!--"] */:
-        case 6 /* Comments["-->"] */:
+        case Comments["//"]:
+        case Comments["/*"]:
+        case Comments["*/"]:
+        case Comments["///"]:
+        case Comments["#"]:
+        case Comments["<!--"]:
+        case Comments["-->"]:
             break;
     }
 }

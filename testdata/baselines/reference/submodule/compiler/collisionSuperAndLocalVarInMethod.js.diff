--- old.collisionSuperAndLocalVarInMethod.js
+++ new.collisionSuperAndLocalVarInMethod.js
@@= skipped -20, +20 lines =@@
 }
 
 //// [collisionSuperAndLocalVarInMethod.js]
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
-var _super = 10; // No Error
-var Foo = /** @class */ (function () {
-    function Foo() {
+var _super = 10;
+class Foo {
+    x() {
+        var _super = 10;
     }
-    Foo.prototype.x = function () {
-        var _super = 10; // No error
-    };
-    return Foo;
-}());
-var b = /** @class */ (function (_super_1) {
-    __extends(b, _super_1);
-    function b() {
-        return _super_1 !== null && _super_1.apply(this, arguments) || this;
+}
+class b extends Foo {
+    foo() {
+        var _super = 10;
     }
-    b.prototype.foo = function () {
-        var _super = 10; // Should be error 
-    };
-    return b;
-}(Foo));
-var c = /** @class */ (function (_super_1) {
-    __extends(c, _super_1);
-    function c() {
-        return _super_1 !== null && _super_1.apply(this, arguments) || this;
-    }
-    c.prototype.foo = function () {
-        var x = function () {
-            var _super = 10; // Should be error
+}
+class c extends Foo {
+    foo() {
+        var x = () => {
+            var _super = 10;
         };
-    };
-    return c;
-}(Foo));
+    }
+}

--- old.declarationEmitPartialNodeReuseTypeOf.types
+++ new.declarationEmitPartialNodeReuseTypeOf.types
@@= skipped -13, +13 lines =@@
 >"private" : "private"
 
 export const o = (p1: typeof nImported, p2: typeof nNotImported, p3: typeof nPrivate) => null! as { foo: typeof nImported, bar: typeof nPrivate, baz: typeof nNotImported }
->o : (p1: typeof nImported, p2: typeof nNotImported, p3: typeof nPrivate) => { foo: typeof nImported; bar: typeof nPrivate; baz: typeof nNotImported; }
->(p1: typeof nImported, p2: typeof nNotImported, p3: typeof nPrivate) => null! as { foo: typeof nImported, bar: typeof nPrivate, baz: typeof nNotImported } : (p1: typeof nImported, p2: typeof nNotImported, p3: typeof nPrivate) => { foo: typeof nImported; bar: typeof nPrivate; baz: typeof nNotImported; }
+>o : (p1: "nImported", p2: "nNotImported", p3: "private") => { foo: "nImported"; bar: "private"; baz: "nNotImported"; }
+>(p1: typeof nImported, p2: typeof nNotImported, p3: typeof nPrivate) => null! as { foo: typeof nImported, bar: typeof nPrivate, baz: typeof nNotImported } : (p1: "nImported", p2: "nNotImported", p3: "private") => { foo: "nImported"; bar: "private"; baz: "nNotImported"; }
 >p1 : "nImported"
 >nImported : "nImported"
 >p2 : "nNotImported"
 >nNotImported : "nNotImported"
 >p3 : "private"
 >nPrivate : "private"
->null! as { foo: typeof nImported, bar: typeof nPrivate, baz: typeof nNotImported } : { foo: typeof nImported; bar: typeof nPrivate; baz: typeof nNotImported; }
+>null! as { foo: typeof nImported, bar: typeof nPrivate, baz: typeof nNotImported } : { foo: "nImported"; bar: "private"; baz: "nNotImported"; }
 >null! : never
 >foo : "nImported"
 >nImported : "nImported"
@@= skipped -19, +19 lines =@@
 
 === b.ts ===
 import { o, nImported } from "./a";
->o : (p1: typeof nImported, p2: typeof import("a").nNotImported, p3: "private") => { foo: typeof nImported; bar: "private"; baz: typeof import("a").nNotImported; }
+>o : (p1: "nImported", p2: "nNotImported", p3: "private") => { foo: "nImported"; bar: "private"; baz: "nNotImported"; }
 >nImported : "nImported"
 
 export const g = o
->g : (p1: typeof nImported, p2: typeof import("a").nNotImported, p3: "private") => { foo: typeof nImported; bar: "private"; baz: typeof import("a").nNotImported; }
->o : (p1: typeof nImported, p2: typeof import("a").nNotImported, p3: "private") => { foo: typeof nImported; bar: "private"; baz: typeof import("a").nNotImported; }
+>g : (p1: "nImported", p2: "nNotImported", p3: "private") => { foo: "nImported"; bar: "private"; baz: "nNotImported"; }
+>o : (p1: "nImported", p2: "nNotImported", p3: "private") => { foo: "nImported"; bar: "private"; baz: "nNotImported"; }
 
 console.log(nImported);
 >console.log(nImported) : void
@@= skipped -16, +16 lines =@@
 
 === c.ts ===
 import * as a from "./a";
->a : typeof a
+>a : typeof import("a")
 
 export const g = a.o
->g : (p1: typeof a.nImported, p2: typeof a.nNotImported, p3: "private") => { foo: typeof a.nImported; bar: "private"; baz: typeof a.nNotImported; }
->a.o : (p1: typeof a.nImported, p2: typeof a.nNotImported, p3: "private") => { foo: typeof a.nImported; bar: "private"; baz: typeof a.nNotImported; }
->a : typeof a
->o : (p1: typeof a.nImported, p2: typeof a.nNotImported, p3: "private") => { foo: typeof a.nImported; bar: "private"; baz: typeof a.nNotImported; }
+>g : (p1: "nImported", p2: "nNotImported", p3: "private") => { foo: "nImported"; bar: "private"; baz: "nNotImported"; }
+>a.o : (p1: "nImported", p2: "nNotImported", p3: "private") => { foo: "nImported"; bar: "private"; baz: "nNotImported"; }
+>a : typeof import("a")
+>o : (p1: "nImported", p2: "nNotImported", p3: "private") => { foo: "nImported"; bar: "private"; baz: "nNotImported"; }
 

--- old.tryCatchFinallyControlFlow.js
+++ new.tryCatchFinallyControlFlow.js
@@= skipped -331, +331 lines =@@
 
 
 //// [tryCatchFinallyControlFlow.js]
-"use strict";
-// Repro from #34797
 function f1() {
-    var a = null;
+    let a = null;
     try {
         a = 123;
         return a;
@@= skipped -17, +15 lines =@@
     }
 }
 function f2() {
-    var x = 0;
+    let x = 0;
     try {
         x = 1;
     }
@@= skipped -9, +9 lines =@@
         throw e;
     }
     finally {
-        x; // 0 | 1 | 2
+        x;
     }
-    x; // 1
+    x;
 }
 function f3() {
-    var x = 0;
+    let x = 0;
     try {
         x = 1;
     }
@@= skipped -14, +14 lines =@@
         return;
     }
     finally {
-        x; // 0 | 1 | 2
+        x;
     }
-    x; // 1
+    x;
 }
 function f4() {
-    var x = 0;
+    let x = 0;
     try {
         x = 1;
     }
@@= skipped -13, +13 lines =@@
         x = 2;
     }
     finally {
-        x; // 0 | 1 | 2
+        x;
     }
-    x; // 1 | 2
+    x;
 }
 function f5() {
-    var x = 0;
+    let x = 0;
     try {
         x = 1;
         return;
@@= skipped -14, +14 lines =@@
         x = 2;
     }
     finally {
-        x; // 0 | 1 | 2
+        x;
     }
-    x; // 2
+    x;
 }
 function f6() {
-    var x = 0;
+    let x = 0;
     try {
         x = 1;
     }
@@= skipped -14, +14 lines =@@
         return;
     }
     finally {
-        x; // 0 | 1 | 2
+        x;
     }
-    x; // 1
+    x;
 }
 function f7() {
-    var x = 0;
+    let x = 0;
     try {
         x = 1;
         return;
@@= skipped -15, +15 lines =@@
         return;
     }
     finally {
-        x; // 0 | 1 | 2
+        x;
     }
-    x; // Unreachable
+    x;
 }
 function f8() {
-    var x = 0;
-    (function () {
+    let x = 0;
+    (() => {
         try {
             x = 1;
             return;
         }
         finally {
-            x; // 0 | 1
+            x;
         }
-        x; // Unreachable
+        x;
     })();
-    x; // 1
+    x;
 }
 function f9() {
-    var x = 0;
-    (function () {
+    let x = 0;
+    (() => {
         try {
             if (!!true) {
                 x = 1;
@@= skipped -28, +28 lines =@@
             }
         }
         finally {
-            x; // 0 | 1
+            x;
         }
-        x; // 0
+        x;
         x = 2;
     })();
-    x; // 1 | 2
+    x;
 }
 function f10() {
-    var x = 0;
-    (function () {
+    let x = 0;
+    (() => {
         try {
             x = 1;
             return;
@@= skipped -18, +18 lines =@@
             x = 2;
         }
         finally {
-            x; // 0 | 1 | 2
+            x;
         }
-        x; // 2
+        x;
         x = 3;
     })();
-    x; // 1 | 3
+    x;
 }
 function f11() {
-    var x = 0;
-    (function () {
+    let x = 0;
+    (() => {
         try {
             if (!!true) {
                 x = 1;
@@= skipped -21, +21 lines =@@
             }
         }
         catch (e) {
-            x; // 0 | 1 | 2
+            x;
             x = 3;
         }
         finally {
-            x; // 0 | 1 | 2 | 3
+            x;
             if (!!true) {
                 x = 4;
             }
         }
-        x; // 0 | 3 | 4
+        x;
         x = 5;
     })();
-    x; // 1 | 4 | 5
+    x;
 }
 function f12() {
-    var x = 0;
-    (function () {
+    let x = 0;
+    (() => {
         try {
             if (!!true) {
                 x = 1;
@@= skipped -28, +28 lines =@@
             }
         }
         catch (e) {
-            x; // 0 | 1 | 2
+            x;
             x = 3;
         }
         finally {
-            x; // 0 | 1 | 2 | 3
+            x;
             if (!!true) {
                 x = 4;
                 return;
@@= skipped -15, +15 lines =@@
             }
             x = 6;
             return;
-            x; // unreachable
+            x;
         }
-        x; // unreachable
-        x = 7; // no effect
+        x;
+        x = 7;
     })();
-    x; // 4 | 5 | 6
+    x;
 }
-// Repro from #35644
-var main = function () {
-    var hoge = undefined;
+const main = () => {
+    let hoge = undefined;
     try {
         hoge = 'hoge!';
         return;
     }
-    catch (_a) {
+    catch {
         return;
     }
     finally {
@@= skipped -24, +23 lines =@@
         return;
     }
 };
-// Repro from #36828
 function t1() {
-    var x = (function () {
+    const x = (() => {
         try {
             return 'x';
         }
         catch (e) {
             return null;
         }
-        x; // Unreachable
+        x;
     })();
-    x; // Reachable
+    x;
 }
 function notallowed(arg) {
-    var state = { tag: "one" };
+    let state = { tag: "one" };
     try {
         state = { tag: "two" };
         try {
@@= skipped -30, +29 lines =@@
     }
 }
 function f20() {
-    var x = 0;
+    let x = 0;
     try {
         x = 1;
         try {
@@= skipped -12, +12 lines =@@
                 if (!!true)
                     x = 4;
             }
-            x; // 3 | 4
+            x;
         }
         finally {
             if (!!true)
                 x = 5;
         }
-        x; // 3 | 4 | 5
+        x;
     }
     finally {
         if (!!true)
             x = 6;
     }
-    x; // 3 | 4 | 5 | 6
+    x;
 }
 function f21() {
-    var x = 0;
+    let x = 0;
     try {
         x = 1;
         try {
@@= skipped -27, +27 lines =@@
                 if (!!true)
                     x = 4;
             }
-            x; // 3 | 4
+            x;
         }
         finally {
             if (!!true)
                 x = 5;
         }
-        x; // 3 | 4 | 5
+        x;
     }
     catch (e) {
-        x; // 0 | 1 | 2 | 3 | 4 | 5
+        x;
     }
 }

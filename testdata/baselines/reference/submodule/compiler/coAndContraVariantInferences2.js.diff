--- old.coAndContraVariantInferences2.js
+++ new.coAndContraVariantInferences2.js
@@= skipped -121, +121 lines =@@
 
 
 //// [coAndContraVariantInferences2.js]
-"use strict";
 function f1(a, b) {
-    var x1 = cast(a, isC); // cast<A, C>
-    var x2 = cast(b, isC); // cast<A, C>
+    const x1 = cast(a, isC); // cast<A, C>
+    const x2 = cast(b, isC); // cast<A, C>
 }
 function f2(b, c) {
     consume(b, c, useA); // consume<A, C>
@@= skipped -33, +32 lines =@@
     node; // FunctionDeclaration
 }
 function bar(node) {
-    var a = tryCast(node, isExpression); // tryCast<Expression, Node>
+    const a = tryCast(node, isExpression); // tryCast<Expression, Node>
 }
-var maybeClassStatement = tryCast(statement, isClassLike); // ClassLike1
-var x = tryCast(types, isNodeArray); // NodeAray<TypeNode>
+// Repro from #49924
+var SyntaxKind1;
+(function (SyntaxKind1) {
+    SyntaxKind1[SyntaxKind1["ClassExpression"] = 0] = "ClassExpression";
+    SyntaxKind1[SyntaxKind1["ClassStatement"] = 1] = "ClassStatement";
+})(SyntaxKind1 || (SyntaxKind1 = {}));
+const maybeClassStatement = tryCast(statement, isClassLike); // ClassLike1
+const x = tryCast(types, isNodeArray); // NodeAray<TypeNode>

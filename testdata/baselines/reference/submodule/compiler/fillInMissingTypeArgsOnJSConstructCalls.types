//// [tests/cases/compiler/fillInMissingTypeArgsOnJSConstructCalls.ts] ////

=== BaseA.js ===
export default class BaseA {
>BaseA : default
}
=== SubA.js ===
import BaseA from './BaseA';
>BaseA : typeof default

export default class SubA extends BaseA {
>SubA : default
>BaseA : default
}
=== BaseB.js ===
import BaseA from './BaseA';
>BaseA : typeof default

export default class B<T: BaseA> {
>B : default<T, BaseA>

    _AClass: Class<T>;
>_AClass : Class<T>

    constructor(AClass: Class<T>) {
>AClass : Class<T>

        this._AClass = AClass;
>this._AClass = AClass : Class<T>
>this._AClass : Class<T>
>this : this
>_AClass : Class<T>
>AClass : Class<T>
    }
}
=== SubB.js ===
import SubA from './SubA';
>SubA : typeof default

import BaseB from './BaseB';
>BaseB : typeof default

export default class SubB extends BaseB<SubA> {
>SubB : default
>BaseB : typeof default

    constructor() {
        super(SubA);
>super(SubA) : void
>super : any
>SubA : typeof default
    }
}


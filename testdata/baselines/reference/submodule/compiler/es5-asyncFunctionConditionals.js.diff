--- old.es5-asyncFunctionConditionals.js
+++ new.es5-asyncFunctionConditionals.js
@@= skipped -15, +15 lines =@@
 }
 
 //// [es5-asyncFunctionConditionals.js]
-function conditional0() {
-    return __awaiter(this, void 0, void 0, function () {
-        return __generator(this, function (_a) {
-            switch (_a.label) {
-                case 0: return [4 /*yield*/, x];
-                case 1:
-                    a = (_a.sent()) ? y : z;
-                    return [2 /*return*/];
-            }
-        });
-    });
+async function conditional0() {
+    a = (await x) ? y : z;
 }
-function conditional1() {
-    return __awaiter(this, void 0, void 0, function () {
-        var _a;
-        return __generator(this, function (_b) {
-            switch (_b.label) {
-                case 0:
-                    if (!x) return [3 /*break*/, 2];
-                    return [4 /*yield*/, y];
-                case 1:
-                    _a = _b.sent();
-                    return [3 /*break*/, 3];
-                case 2:
-                    _a = z;
-                    _b.label = 3;
-                case 3:
-                    a = _a;
-                    return [2 /*return*/];
-            }
-        });
-    });
+async function conditional1() {
+    a = x ? await y : z;
 }
-function conditional2() {
-    return __awaiter(this, void 0, void 0, function () {
-        var _a;
-        return __generator(this, function (_b) {
-            switch (_b.label) {
-                case 0:
-                    if (!x) return [3 /*break*/, 1];
-                    _a = y;
-                    return [3 /*break*/, 3];
-                case 1: return [4 /*yield*/, z];
-                case 2:
-                    _a = _b.sent();
-                    _b.label = 3;
-                case 3:
-                    a = _a;
-                    return [2 /*return*/];
-            }
-        });
-    });
+async function conditional2() {
+    a = x ? y : await z;
 }

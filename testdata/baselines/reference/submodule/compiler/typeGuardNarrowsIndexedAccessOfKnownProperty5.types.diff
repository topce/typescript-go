--- old.typeGuardNarrowsIndexedAccessOfKnownProperty5.types
+++ new.typeGuardNarrowsIndexedAccessOfKnownProperty5.types
@@= skipped -1, +1 lines =@@
 
 === typeGuardNarrowsIndexedAccessOfKnownProperty5.ts ===
 const a: { key?: { x?: number } } = {};
->a : { key?: { x?: number; }; }
->key : { x?: number; } | undefined
+>a : { key?: { x?: number | undefined; } | undefined; }
+>key : { x?: number | undefined; } | undefined
 >x : number | undefined
 >{} : {}
 
@@= skipped -11, +11 lines =@@
 
 if (a[aIndex] && a[aIndex].x) {
 >a[aIndex] && a[aIndex].x : number | undefined
->a[aIndex] : { x?: number; } | undefined
->a : { key?: { x?: number; }; }
+>a[aIndex] : { x?: number | undefined; } | undefined
+>a : { key?: { x?: number | undefined; } | undefined; }
 >aIndex : "key"
 >a[aIndex].x : number | undefined
->a[aIndex] : { x?: number; }
->a : { key?: { x?: number; }; }
+>a[aIndex] : { x?: number | undefined; }
+>a : { key?: { x?: number | undefined; } | undefined; }
 >aIndex : "key"
 >x : number | undefined
 
     a[aIndex].x // number
 >a[aIndex].x : number
->a[aIndex] : { x?: number; }
->a : { key?: { x?: number; }; }
+>a[aIndex] : { x?: number | undefined; }
+>a : { key?: { x?: number | undefined; } | undefined; }
 >aIndex : "key"
 >x : number
 }
 
 const b: { key: { x?: number } } = { key: {} };
->b : { key: { x?: number; }; }
->key : { x?: number; }
+>b : { key: { x?: number | undefined; }; }
+>key : { x?: number | undefined; }
 >x : number | undefined
 >{ key: {} } : { key: {}; }
 >key : {}
@@= skipped -31, +31 lines =@@
 
 if (b[bIndex].x) {
 >b[bIndex].x : number | undefined
->b[bIndex] : { x?: number; }
->b : { key: { x?: number; }; }
+>b[bIndex] : { x?: number | undefined; }
+>b : { key: { x?: number | undefined; }; }
 >bIndex : "key"
 >x : number | undefined
 
     b[bIndex].x // number
 >b[bIndex].x : number
->b[bIndex] : { x?: number; }
->b : { key: { x?: number; }; }
+>b[bIndex] : { x?: number | undefined; }
+>b : { key: { x?: number | undefined; }; }
 >bIndex : "key"
 >x : number
 }

--- old.destructuringInitializerContextualTypeFromContext.types
+++ new.destructuringInitializerContextualTypeFromContext.types
@@= skipped -13, +13 lines =@@
 
 const Parent: SFC<Props> = ({
 >Parent : SFC<Props>
->({    children,    name = "Artemis",    ...props}) => Child({name, ...props}) : ({ children, name, ...props }: Props & { children?: any; }) => any
+>({    children,    name = "Artemis",    ...props}) => Child({name, ...props}) : (__0: Props & { children?: any; }) => any
 
     children,
 >children : any
@@= skipped -21, +21 lines =@@
 
 const Child: SFC<Props> = ({
 >Child : SFC<Props>
->({    children,    name = "Artemis",    ...props}) => `name: ${name} props: ${JSON.stringify(props)}` : ({ children, name, ...props }: Props & { children?: any; }) => string
+>({    children,    name = "Artemis",    ...props}) => `name: ${name} props: ${JSON.stringify(props)}` : (__0: Props & { children?: any; }) => string
 
     children,
 >children : any
@@= skipped -16, +16 lines =@@
 >`name: ${name} props: ${JSON.stringify(props)}` : string
 >name : "Apollo" | "Artemis" | "Dionysus" | "Persephone"
 >JSON.stringify(props) : string
->JSON.stringify : { (value: any, replacer?: (this: any, key: string, value: any) => any, space?: string | number): string; (value: any, replacer?: (number | string)[] | null, space?: string | number): string; }
+>JSON.stringify : { (value: any, replacer?: (key: string, value: any) => any | undefined, space?: string | number | undefined): string; (value: any, replacer?: (string | number)[] | null | undefined, space?: string | number | undefined): string; }
 >JSON : JSON
->stringify : { (value: any, replacer?: (this: any, key: string, value: any) => any, space?: string | number): string; (value: any, replacer?: (number | string)[] | null, space?: string | number): string; }
+>stringify : { (value: any, replacer?: (key: string, value: any) => any | undefined, space?: string | number | undefined): string; (value: any, replacer?: (string | number)[] | null | undefined, space?: string | number | undefined): string; }
 >props : {}
 
 // Repro from #29189
@@= skipped -15, +15 lines =@@
 f(([_1, _2 = undefined]) => undefined)
 >f(([_1, _2 = undefined]) => undefined) : void
 >f : (g: (as: string[]) => void) => void
->([_1, _2 = undefined]) => undefined : ([_1, _2]: string[]) => undefined
+>([_1, _2 = undefined]) => undefined : (__0: string[]) => undefined
 >_1 : string
 >_2 : string | undefined
 >undefined : undefined

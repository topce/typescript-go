//// [tests/cases/compiler/enumAssignmentCompat7.ts] ////

=== enumAssignmentCompat7.ts ===
namespace first {
>first : typeof first

    export enum E { A = 1 }
>E : E
>A : E.A
>1 : 1
}

namespace second {
>second : typeof second

    export enum E { A = 2 }
>E : E
>A : E.A
>2 : 2
}

class Base {
>Base : Base

    method(param: first.E) {
>method : (param: E) => void
>param : E
>first : any

    }
}

class Derived extends Base {
>Derived : Derived
>Base : Base

    override method(param: second.E) {
>method : (param: E) => void
>param : E
>second : any
    }
}

function overloadingFunction(): first.E
>overloadingFunction : () => E
>first : any

function overloadingFunction(): second.E {
>overloadingFunction : () => E
>second : any

    return second.E.B
>second.E.B : any
>second.E : typeof E
>second : typeof second
>E : typeof E
>B : any
}

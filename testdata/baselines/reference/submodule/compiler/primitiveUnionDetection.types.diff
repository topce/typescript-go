--- old.primitiveUnionDetection.types
+++ new.primitiveUnionDetection.types
@@= skipped -6, +6 lines =@@
 >Kind : Kind
 
 declare function getInterfaceFromString<T extends Kind>(options?: { type?: T } & { type?: Kind }): T;
->getInterfaceFromString : <T extends Kind>(options?: { type?: T; } & { type?: Kind; }) => T
->options : ({ type?: T; } & { type?: Kind; }) | undefined
+>getInterfaceFromString : <T extends Kind>(options?: { type?: T | undefined; } & { type?: Kind | undefined; } | undefined) => T
+>options : { type?: T | undefined; } & { type?: Kind | undefined; } | undefined
 >type : T | undefined
 >type : Kind | undefined
 
 const result = getInterfaceFromString({ type: 'two' });
 >result : "two"
 >getInterfaceFromString({ type: 'two' }) : "two"
->getInterfaceFromString : <T extends Kind>(options?: { type?: T; } & { type?: Kind; }) => T
+>getInterfaceFromString : <T extends Kind>(options?: { type?: T | undefined; } & { type?: Kind | undefined; } | undefined) => T
 >{ type: 'two' } : { type: "two"; }
 >type : "two"
 >'two' : "two"

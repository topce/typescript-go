--- old.spreadInvalidArgumentType.js
+++ new.spreadInvalidArgumentType.js
@@= skipped -59, +59 lines =@@
 
 
 //// [spreadInvalidArgumentType.js]
-var __assign = (this && this.__assign) || function () {
-    __assign = Object.assign || function(t) {
-        for (var s, i = 1, n = arguments.length; i < n; i++) {
-            s = arguments[i];
-            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
-                t[p] = s[p];
-        }
-        return t;
-    };
-    return __assign.apply(this, arguments);
-};
 var E;
 (function (E) {
     E[E["v1"] = 0] = "v1";
@@= skipped -35, +24 lines =@@
     var n;
     var a;
     var e;
-    var o1 = __assign({}, p1); // OK, generic type paramterre
-    var o2 = __assign({}, p2); // OK
-    var o3 = __assign({}, t); // OK, generic type paramter
-    var o4 = __assign({}, i); // Error, index access
-    var o5 = __assign({}, k); // Error, index
-    var o6 = __assign({}, mapped_generic); // OK, generic mapped object type
-    var o7 = __assign({}, mapped); // OK, non-generic mapped type
-    var o8 = __assign({}, union_generic); // OK, union with generic type parameter
-    var o9 = __assign({}, union_primitive); // Error, union with generic type parameter
-    var o10 = __assign({}, intersection_generic); // OK, intersection with generic type parameter
-    var o11 = __assign({}, intersection_primitive); // Error, intersection with generic type parameter
-    var o12 = __assign({}, num); // Error
-    var o13 = __assign({}, str); // Error
-    var o14 = __assign({}, u); // error, undefined-only not allowed
-    var o15 = __assign({}, n); // error, null-only not allowed
-    var o16 = __assign({}, a); // OK
-    var o17 = __assign({}, literal_string); // Error
-    var o18 = __assign({}, literal_number); // Error
-    var o19 = __assign({}, e); // Error, enum
+    var o1 = { ...p1 };
+    var o2 = { ...p2 };
+    var o3 = { ...t };
+    var o4 = { ...i };
+    var o5 = { ...k };
+    var o6 = { ...mapped_generic };
+    var o7 = { ...mapped };
+    var o8 = { ...union_generic };
+    var o9 = { ...union_primitive };
+    var o10 = { ...intersection_generic };
+    var o11 = { ...intersection_primitive };
+    var o12 = { ...num };
+    var o13 = { ...str };
+    var o14 = { ...u };
+    var o15 = { ...n };
+    var o16 = { ...a };
+    var o17 = { ...literal_string };
+    var o18 = { ...literal_number };
+    var o19 = { ...e };
 }

--- old.es5-asyncFunctionForStatements.js
+++ new.es5-asyncFunctionForStatements.js
@@= skipped -31, +31 lines =@@
 }
 
 //// [es5-asyncFunctionForStatements.js]
-function forStatement0() {
-    return __awaiter(this, void 0, void 0, function () {
-        return __generator(this, function (_a) {
-            for (x; y; z) {
-                a;
-            }
-            return [2 /*return*/];
-        });
-    });
+async function forStatement0() {
+    for (x; y; z) {
+        a;
+    }
 }
-function forStatement1() {
-    return __awaiter(this, void 0, void 0, function () {
-        return __generator(this, function (_a) {
-            switch (_a.label) {
-                case 0: return [4 /*yield*/, x];
-                case 1:
-                    _a.sent();
-                    _a.label = 2;
-                case 2:
-                    if (!y) return [3 /*break*/, 4];
-                    a;
-                    _a.label = 3;
-                case 3:
-                    z;
-                    return [3 /*break*/, 2];
-                case 4: return [2 /*return*/];
-            }
-        });
-    });
+async function forStatement1() {
+    for (await x; y; z) {
+        a;
+    }
 }
-function forStatement2() {
-    return __awaiter(this, void 0, void 0, function () {
-        return __generator(this, function (_a) {
-            switch (_a.label) {
-                case 0:
-                    x;
-                    _a.label = 1;
-                case 1: return [4 /*yield*/, y];
-                case 2:
-                    if (!_a.sent()) return [3 /*break*/, 4];
-                    a;
-                    _a.label = 3;
-                case 3:
-                    z;
-                    return [3 /*break*/, 1];
-                case 4: return [2 /*return*/];
-            }
-        });
-    });
+async function forStatement2() {
+    for (x; await y; z) {
+        a;
+    }
 }
-function forStatement3() {
-    return __awaiter(this, void 0, void 0, function () {
-        return __generator(this, function (_a) {
-            switch (_a.label) {
-                case 0:
-                    x;
-                    _a.label = 1;
-                case 1:
-                    if (!y) return [3 /*break*/, 4];
-                    a;
-                    _a.label = 2;
-                case 2: return [4 /*yield*/, z];
-                case 3:
-                    _a.sent();
-                    return [3 /*break*/, 1];
-                case 4: return [2 /*return*/];
-            }
-        });
-    });
+async function forStatement3() {
+    for (x; y; await z) {
+        a;
+    }
 }
-function forStatement4() {
-    return __awaiter(this, void 0, void 0, function () {
-        return __generator(this, function (_a) {
-            switch (_a.label) {
-                case 0:
-                    x;
-                    _a.label = 1;
-                case 1:
-                    if (!y) return [3 /*break*/, 4];
-                    return [4 /*yield*/, a];
-                case 2:
-                    _a.sent();
-                    _a.label = 3;
-                case 3:
-                    z;
-                    return [3 /*break*/, 1];
-                case 4: return [2 /*return*/];
-            }
-        });
-    });
+async function forStatement4() {
+    for (x; y; z) {
+        await a;
+    }
 }
-function forStatement5() {
-    return __awaiter(this, void 0, void 0, function () {
-        var b;
-        return __generator(this, function (_a) {
-            for (; y; z) {
-                a;
-            }
-            return [2 /*return*/];
-        });
-    });
+async function forStatement5() {
+    for (var b; y; z) {
+        a;
+    }
 }
-function forStatement6() {
-    return __awaiter(this, void 0, void 0, function () {
-        var c;
-        return __generator(this, function (_a) {
-            for (c = x; y; z) {
-                a;
-            }
-            return [2 /*return*/];
-        });
-    });
+async function forStatement6() {
+    for (var c = x; y; z) {
+        a;
+    }
 }

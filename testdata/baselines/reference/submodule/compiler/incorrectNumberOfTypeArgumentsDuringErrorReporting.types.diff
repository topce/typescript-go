--- old.incorrectNumberOfTypeArgumentsDuringErrorReporting.types
+++ new.incorrectNumberOfTypeArgumentsDuringErrorReporting.types
@@= skipped -13, +13 lines =@@
 >b : B
 
 const fn = <
->fn : <A extends ObjA, B extends ObjB = ObjB>(opts: Opts<A, B>) => string
-><  A extends ObjA,  B extends ObjB = ObjB>(opts:Opts<A, B>):string => 'Z' : <A extends ObjA, B extends ObjB = ObjB>(opts: Opts<A, B>) => string
+>fn : <A extends ObjA, B extends ObjB>(opts: Opts<A, B>) => string
+><  A extends ObjA,  B extends ObjB = ObjB>(opts:Opts<A, B>):string => 'Z' : <A extends ObjA, B extends ObjB>(opts: Opts<A, B>) => string
 
   A extends ObjA,
   B extends ObjB = ObjB
@@= skipped -16, +16 lines =@@
 
 fn<MyObjA>({
 >fn<MyObjA>({  a: {x: 'X', y: 'Y'},  b: {},}) : string
->fn : <A extends ObjA, B extends ObjB = ObjB>(opts: Opts<A, B>) => string
+>fn : <A extends ObjA, B extends ObjB>(opts: Opts<A, B>) => string
 >{  a: {x: 'X', y: 'Y'},  b: {},} : { a: { x: string; y: string; }; b: {}; }
 
   a: {x: 'X', y: 'Y'},

--- old.genericIndexedAccessVarianceComparisonResultCorrect.types
+++ new.genericIndexedAccessVarianceComparisonResultCorrect.types
@@= skipped -45, +45 lines =@@
 >false : false
 
 type TA_extends_TB = T<A> extends T<B> ? true : false;                          // should be true
->TA_extends_TB : false
+>TA_extends_TB : true
 >true : true
 >false : false
 
 declare let a: T<A>;
->a : T<A>
+>a : Pick<A, "x">
 
 declare let b: T<B>;
->b : T<B>
+>b : Pick<B, "x">
 
 declare let c: C;
 >c : C
@@= skipped -17, +17 lines =@@
 >d : D
 
 b = a;      // should be no error
->b = a : T<A>
->b : T<B>
->a : T<A>
+>b = a : Pick<A, "x">
+>b : Pick<B, "x">
+>a : Pick<A, "x">
 
 c = d;
 >c = d : D

--- old.predicateSemantics.types
+++ new.predicateSemantics.types
@@= skipped -5, +5 lines =@@
 
 // OK: One or other operand is possibly nullish
 const test1 = (cond ? undefined : 32) ?? "possibly reached";
->test1 : 32 | "possibly reached"
->(cond ? undefined : 32) ?? "possibly reached" : 32 | "possibly reached"
+>test1 : "possibly reached" | 32
+>(cond ? undefined : 32) ?? "possibly reached" : "possibly reached" | 32
 >(cond ? undefined : 32) : 32
 >cond ? undefined : 32 : 32
 >cond : any
@@= skipped -21, +21 lines =@@
 
 // Not OK: Both operands non-nullish
 const test3 = (cond ? 132 : 17) ?? "unreachable";
->test3 : 132 | 17 | "unreachable"
->(cond ? 132 : 17) ?? "unreachable" : 132 | 17 | "unreachable"
->(cond ? 132 : 17) : 132 | 17
->cond ? 132 : 17 : 132 | 17
+>test3 : "unreachable" | 17 | 132
+>(cond ? 132 : 17) ?? "unreachable" : "unreachable" | 17 | 132
+>(cond ? 132 : 17) : 17 | 132
+>cond ? 132 : 17 : 17 | 132
 >cond : any
 >132 : 132
 >17 : 17
@@= skipped -109, +109 lines =@@
 >cond : any
 
 function foo(this: Object | undefined) {
->foo : (this: Object | undefined) => Object | 0
+>foo : (this: Object) => 0 | Object
 >this : Object
 
     // Should be OK

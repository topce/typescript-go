--- old.conflictingDeclarationsImportFromNamespace1.types
+++ new.conflictingDeclarationsImportFromNamespace1.types
@@= skipped -1, +1 lines =@@
 
 === node_modules/@types/lodash/object.d.ts ===
 import _ = require("./index");
->_ : _.LoDashStatic
+>_ : LoDashStatic
 
 declare module "./index" {
 >"./index" : LoDashStatic
 
     interface LoDashStatic {
       pick<T extends object, U extends keyof T>(
->pick : <T extends object, U extends keyof T>(object: T, ...props: Array<U>) => Pick<T, U>
+>pick : <T extends object, U extends keyof T>(object: T, ...props: U[]) => Pick<T, U>
 
         object: T,
 >object : T
@@= skipped -21, +21 lines =@@
 
 === node_modules/@types/lodash/pick.d.ts ===
 import { pick } from "./index";
->pick : <T extends object, U extends keyof T>(object: T, ...props: Array<U>) => Pick<T, U>
+>pick : <T extends object, U extends keyof T>(object: T, ...props: U[]) => Pick<T, U>
 
 export = pick;
->pick : <T extends object, U extends keyof T>(object: T, ...props: Array<U>) => Pick<T, U>
+>pick : <T extends object, U extends keyof T>(object: T, ...props: U[]) => Pick<T, U>
 
 === node_modules/@types/lodash/index.d.ts ===
 /// <reference path="./object.d.ts" />
 export = _;
->_ : import("node_modules/@types/lodash/index.d.ts").LoDashStatic
+>_ : LoDashStatic
 
 export as namespace _;
->_ : import("node_modules/@types/lodash/index.d.ts").LoDashStatic
+>_ : LoDashStatic
 
 declare const _: _.LoDashStatic;
->_ : import("node_modules/@types/lodash/index.d.ts").LoDashStatic
+>_ : LoDashStatic
 >_ : any
 
 declare namespace _ {
@@= skipped -23, +23 lines =@@
 
 === index.ts ===
 import * as pick from 'lodash/pick';
->pick : <T extends object, U extends keyof T>(object: T, ...props: Array<U>) => Pick<T, U>
+>pick : <T extends object, U extends keyof T>(object: T, ...props: U[]) => Pick<T, U>
 
 export const pick = () => pick();
 >pick : () => any

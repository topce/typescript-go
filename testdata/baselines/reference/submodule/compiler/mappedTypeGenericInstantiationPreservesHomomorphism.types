//// [tests/cases/compiler/mappedTypeGenericInstantiationPreservesHomomorphism.ts] ////

=== internal.ts ===
export declare function usePrivateType<T extends unknown[]>(...args: T): PrivateMapped<T[any]>;
>usePrivateType : <T extends unknown[]>(...args: T) => PrivateMapped<T[any]>
>args : T

type PrivateMapped<Obj> = {[K in keyof Obj]: Obj[K]};
>PrivateMapped : PrivateMapped<Obj>

=== api.ts ===
import {usePrivateType} from './internal';
>usePrivateType : <T extends unknown[]>(...args: T) => PrivateMapped<T[any]>

export const mappedUnionWithPrivateType = <T extends unknown[]>(...args: T) => usePrivateType(...args);
>mappedUnionWithPrivateType : <T extends unknown[]>(...args: T) => PrivateMapped<T[any]>
><T extends unknown[]>(...args: T) => usePrivateType(...args) : <T extends unknown[]>(...args: T) => PrivateMapped<T[any]>
>args : T
>usePrivateType(...args) : PrivateMapped<T[any]>
>usePrivateType : <T extends unknown[]>(...args: T) => PrivateMapped<T[any]>
>...args : unknown
>args : T


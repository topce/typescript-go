--- old.aliasUsageInFunctionExpression.types
+++ new.aliasUsageInFunctionExpression.types
@@= skipped -1, +1 lines =@@
 
 === aliasUsageInFunctionExpression_main.ts ===
 import Backbone = require("./aliasUsageInFunctionExpression_backbone");
->Backbone : typeof Backbone
+>Backbone : typeof import("aliasUsageInFunctionExpression_backbone")
 
 import moduleA = require("./aliasUsageInFunctionExpression_moduleA");
->moduleA : typeof moduleA
+>moduleA : typeof import("aliasUsageInFunctionExpression_moduleA")
 
 interface IHasVisualizationModel {
     VisualizationModel: typeof Backbone.Model;
->VisualizationModel : typeof Backbone.Model
->Backbone.Model : typeof Backbone.Model
->Backbone : typeof Backbone
->Model : typeof Backbone.Model
+>VisualizationModel : typeof Model
+>Backbone.Model : typeof Model
+>Backbone : typeof import("aliasUsageInFunctionExpression_backbone")
+>Model : typeof Model
 }
 var f = (x: IHasVisualizationModel) => x;
 >f : (x: IHasVisualizationModel) => IHasVisualizationModel
@@= skipped -19, +19 lines =@@
 >x : IHasVisualizationModel
 
 f = (x) => moduleA;
->f = (x) => moduleA : (x: IHasVisualizationModel) => typeof moduleA
+>f = (x) => moduleA : (x: IHasVisualizationModel) => typeof import("aliasUsageInFunctionExpression_moduleA")
 >f : (x: IHasVisualizationModel) => IHasVisualizationModel
->(x) => moduleA : (x: IHasVisualizationModel) => typeof moduleA
+>(x) => moduleA : (x: IHasVisualizationModel) => typeof import("aliasUsageInFunctionExpression_moduleA")
 >x : IHasVisualizationModel
->moduleA : typeof moduleA
+>moduleA : typeof import("aliasUsageInFunctionExpression_moduleA")
 
 === aliasUsageInFunctionExpression_backbone.ts ===
 export class Model {
@@= skipped -16, +16 lines =@@
 
 === aliasUsageInFunctionExpression_moduleA.ts ===
 import Backbone = require("./aliasUsageInFunctionExpression_backbone");
->Backbone : typeof Backbone
+>Backbone : typeof import("aliasUsageInFunctionExpression_backbone")
 
 export class VisualizationModel extends Backbone.Model {
 >VisualizationModel : VisualizationModel
->Backbone.Model : Backbone.Model
->Backbone : typeof Backbone
->Model : typeof Backbone.Model
+>Backbone.Model : Model
+>Backbone : typeof import("aliasUsageInFunctionExpression_backbone")
+>Model : typeof Model
 
     // interesting stuff here
 }

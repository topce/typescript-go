--- old.interfaceClassMerging2.js
+++ new.interfaceClassMerging2.js
@@= skipped -38, +38 lines =@@
 
 
 //// [interfaceClassMerging2.js]
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
-var Foo = /** @class */ (function () {
-    function Foo() {
-    }
-    Foo.prototype.classFooMethod = function () {
+class Foo {
+    classFooProperty;
+    classFooMethod() {
         return this;
-    };
-    return Foo;
-}());
-var Bar = /** @class */ (function (_super) {
-    __extends(Bar, _super);
-    function Bar() {
-        return _super !== null && _super.apply(this, arguments) || this;
     }
-    Bar.prototype.classBarMethod = function () {
+}
+class Bar extends Foo {
+    classBarProperty;
+    classBarMethod() {
         return this;
-    };
-    return Bar;
-}(Foo));
+    }
+}
 var bar = new Bar();
 bar.interfaceBarMethod().interfaceFooMethod().classBarMethod().classFooMethod();
 var foo = new Foo();

//// [tests/cases/compiler/knockout.ts] ////

=== knockout.ts ===
  declare module ko {
>ko : typeof ko

   export interface Observable<T> {
     (): T;
     (value: T): any;
>value : T

     N: number;
>N : number

     g: boolean;
>g : boolean

     r: T;
>r : T
   }
   export function observable<T>(value: T): Observable<T>;
>observable : <T>(value: T) => Observable<T>
>value : T
 }
 var o = {
>o : { name: Observable<string>; age: Observable<number>; }
>{     name: ko.observable("Bob"),     age: ko.observable(37) } : { name: Observable<string>; age: Observable<number>; }

     name: ko.observable("Bob"),
>name : Observable<string>
>ko.observable("Bob") : Observable<string>
>ko.observable : <T>(value: T) => Observable<T>
>ko : typeof ko
>observable : <T>(value: T) => Observable<T>
>"Bob" : "Bob"

     age: ko.observable(37)
>age : Observable<number>
>ko.observable(37) : Observable<number>
>ko.observable : <T>(value: T) => Observable<T>
>ko : typeof ko
>observable : <T>(value: T) => Observable<T>
>37 : 37
 }
 var x_v = o.name().length
>x_v : number
>o.name().length : number
>o.name() : string
>o.name : Observable<string>
>o : { name: Observable<string>; age: Observable<number>; }
>name : Observable<string>
>length : number

 var age_v = o.age();
>age_v : number
>o.age() : number
>o.age : Observable<number>
>o : { name: Observable<string>; age: Observable<number>; }
>age : Observable<number>

 var name_v = o.name("Robert");
>name_v : any
>o.name("Robert") : any
>o.name : Observable<string>
>o : { name: Observable<string>; age: Observable<number>; }
>name : Observable<string>
>"Robert" : "Robert"

 var zz_v = o.name.N;
>zz_v : number
>o.name.N : number
>o.name : Observable<string>
>o : { name: Observable<string>; age: Observable<number>; }
>name : Observable<string>
>N : number

 var yy_v = o.name.g;
>yy_v : boolean
>o.name.g : boolean
>o.name : Observable<string>
>o : { name: Observable<string>; age: Observable<number>; }
>name : Observable<string>
>g : boolean

 var rr_v = o.name.r;
>rr_v : string
>o.name.r : string
>o.name : Observable<string>
>o : { name: Observable<string>; age: Observable<number>; }
>name : Observable<string>
>r : string

 var dd_v = o.name.d;
>dd_v : any
>o.name.d : any
>o.name : Observable<string>
>o : { name: Observable<string>; age: Observable<number>; }
>name : Observable<string>
>d : any


--- old.declarationEmitTypeofRest.types
+++ new.declarationEmitTypeofRest.types
@@= skipped -1, +1 lines =@@
 
 === v1.ts ===
 export const v1 = (...a: [n: "n", a: "a"]): {
->v1 : (n: "n", a: "a") => { a: [n: "n", a: "a"]; }
->(...a: [n: "n", a: "a"]): {    /** r rest param */    a: typeof a,} => {    return null!} : (n: "n", a: "a") => { a: [n: "n", a: "a"]; }
+>v1 : (...a: [n: "n", a: "a"]) => { a: [n: "n", a: "a"]; }
+>(...a: [n: "n", a: "a"]): {    /** r rest param */    a: typeof a,} => {    return null!} : (...a: [n: "n", a: "a"]) => { a: [n: "n", a: "a"]; }
 >a : [n: "n", a: "a"]
 
     /** r rest param */
@@= skipped -21, +21 lines =@@
 >Symbol : SymbolConstructor
 
 export const v2 = (...a: [n: "n", a: "a"]): {
->v2 : (n: "n", a: "a") => { a: [n: "n", a: "a"]; n: unique symbol; }
->(...a: [n: "n", a: "a"]): {    /** r rest param */    a: typeof a,    /** module var */    n: typeof n,} => {    return null!} : (n: "n", a: "a") => { a: [n: "n", a: "a"]; n: unique symbol; }
+>v2 : (...a: [n: "n", a: "a"]) => { a: [n: "n", a: "a"]; n: unique symbol; }
+>(...a: [n: "n", a: "a"]): {    /** r rest param */    a: typeof a,    /** module var */    n: typeof n,} => {    return null!} : (...a: [n: "n", a: "a"]) => { a: [n: "n", a: "a"]; n: unique symbol; }
 >a : [n: "n", a: "a"]
 
     /** r rest param */

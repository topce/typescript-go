--- old.nonNullableReductionNonStrict.types
+++ new.nonNullableReductionNonStrict.types
@@= skipped -23, +23 lines =@@
 
     f2?.("hello");
 >f2?.("hello") : T
->f2 : ((value: string) => T) | ((value: string) => T)
+>f2 : (value: string) => T | (value: string) => T
 >"hello" : "hello"
 }
 
 function f1<T>(x: T | (string extends T ? null | undefined : never)) {
->f1 : <T>(x: T | (string extends T ? null | undefined : never)) => void
+>f1 : <T>(x: T | (string extends T ? null : never)) => void
 >x : T | (string extends T ? null : never)
 
     let z = x!;  // NonNullable<T>
@@= skipped -15, +15 lines =@@
 }
 
 function f2<T, U extends null | undefined>(x: T | U) {
->f2 : <T, U extends null | undefined>(x: T | U) => void
+>f2 : <T, U extends null>(x: T | U) => void
 >x : T | U
 
     let z = x!;  // NonNullable<T>

--- old.gettersAndSettersErrors.js
+++ new.gettersAndSettersErrors.js
@@= skipped -18, +18 lines =@@
 
 
 //// [gettersAndSettersErrors.js]
-var C = /** @class */ (function () {
-    function C() {
-        this.Foo = 0; // error - duplicate identifier Foo - confirmed
-    }
-    Object.defineProperty(C.prototype, "Foo", {
-        get: function () { return "foo"; } // ok
-        ,
-        set: function (foo) { } // ok
-        ,
-        enumerable: false,
-        configurable: true
-    });
-    Object.defineProperty(C.prototype, "Goo", {
-        get: function (v) { return null; } // error - getters must not have a parameter
-        ,
-        set: function (v) { } // error - setters must not specify a return type
-        ,
-        enumerable: false,
-        configurable: true
-    });
-    return C;
-}());
-var E = /** @class */ (function () {
-    function E() {
-    }
-    Object.defineProperty(E.prototype, "Baz", {
-        get: function () { return 0; },
-        set: function (n) { } // error - accessors do not agree in visibility
-        ,
-        enumerable: false,
-        configurable: true
-    });
-    return E;
-}());
+class C {
+    get Foo() { return "foo"; }
+    set Foo(foo) { }
+    Foo = 0;
+    get Goo(v) { return null; }
+    set Goo(v) { }
+}
+class E {
+    get Baz() { return 0; }
+    set Baz(n) { }
+}

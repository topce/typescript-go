--- old.declFileTypeAnnotationTypeReference.js
+++ new.declFileTypeAnnotationTypeReference.js
@@= skipped -44, +44 lines =@@
 }
 
 //// [declFileTypeAnnotationTypeReference.js]
-var c = /** @class */ (function () {
-    function c() {
-    }
-    return c;
-}());
+class c {
+}
 var m;
 (function (m) {
-    var c = /** @class */ (function () {
-        function c() {
-        }
-        return c;
-    }());
+    class c {
+    }
     m.c = c;
-    var g = /** @class */ (function () {
-        function g() {
-        }
-        return g;
-    }());
+    class g {
+    }
     m.g = g;
 })(m || (m = {}));
-var g = /** @class */ (function () {
-    function g() {
-    }
-    return g;
-}());
-// Just the name
+class g {
+}
 function foo() {
     return new c();
 }
 function foo2() {
     return new c();
 }
-// Qualified name
 function foo3() {
     return new m.c();
 }
 function foo4() {
     return new m.c();
 }
-// Just the name with type arguments
 function foo5() {
     return new g();
 }
 function foo6() {
     return new g();
 }
-// Qualified name with type arguments
 function foo7() {
     return new m.g();
 }
 function foo8() {
     return new m.g();
 }
-
-
-//// [declFileTypeAnnotationTypeReference.d.ts]
-declare class c {
-}
-declare namespace m {
-    class c {
-    }
-    class g<T> {
-    }
-}
-declare class g<T> {
-}
-declare function foo(): c;
-declare function foo2(): c;
-declare function foo3(): m.c;
-declare function foo4(): m.c;
-declare function foo5(): g<string>;
-declare function foo6(): g<string>;
-declare function foo7(): m.g<number>;
-declare function foo8(): m.g<number>;

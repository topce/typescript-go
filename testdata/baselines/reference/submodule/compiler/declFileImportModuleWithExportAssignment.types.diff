--- old.declFileImportModuleWithExportAssignment.types
+++ new.declFileImportModuleWithExportAssignment.types
@@= skipped -2, +2 lines =@@
 === declFileImportModuleWithExportAssignment_1.ts ===
 /**This is on import declaration*/
 import a1 = require("./declFileImportModuleWithExportAssignment_0");
->a1 : { (): a1.connectExport; test1: a1.connectModule; test2(): a1.connectModule; }
+>a1 : { (): connectExport; test1: connectModule; test2: () => connectModule; }
 
 export var a = a1;
->a : { (): a1.connectExport; test1: a1.connectModule; test2(): a1.connectModule; }
->a1 : { (): a1.connectExport; test1: a1.connectModule; test2(): a1.connectModule; }
+>a : { (): connectExport; test1: connectModule; test2: () => connectModule; }
+>a1 : { (): connectExport; test1: connectModule; test2: () => connectModule; }
 
 a.test1(null, null, null);
 >a.test1(null, null, null) : void
->a.test1 : a1.connectModule
->a : { (): a1.connectExport; test1: a1.connectModule; test2(): a1.connectModule; }
->test1 : a1.connectModule
+>a.test1 : connectModule
+>a : { (): connectExport; test1: connectModule; test2: () => connectModule; }
+>test1 : connectModule
 
 === declFileImportModuleWithExportAssignment_0.ts ===
 module m2 {
@@= skipped -32, +32 lines =@@
 
 }
 var m2: {
->m2 : { (): m2.connectExport; test1: m2.connectModule; test2(): m2.connectModule; }
+>m2 : { (): connectExport; test1: connectModule; test2: () => connectModule; }
 
     (): m2.connectExport;
 >m2 : any
 
     test1: m2.connectModule;
->test1 : m2.connectModule
+>test1 : connectModule
 >m2 : any
 
     test2(): m2.connectModule;
->test2 : () => m2.connectModule
+>test2 : () => connectModule
 >m2 : any
 
 };
 export = m2;
->m2 : { (): m2.connectExport; test1: m2.connectModule; test2(): m2.connectModule; }
+>m2 : { (): connectExport; test1: connectModule; test2: () => connectModule; }
 

--- old.declarationEmitNameConflicts.symbols
+++ new.declarationEmitNameConflicts.symbols
@@= skipped -86, +86 lines =@@
 
     export var g = M.c.g; // ok
 >g : Symbol(g, Decl(declarationEmit_nameConflicts_0.ts, 26, 14))
->M.c.g : Symbol(c.g, Decl(declarationEmit_nameConflicts_0.ts, 4, 21))
+>M.c.g : Symbol(g, Decl(declarationEmit_nameConflicts_0.ts, 4, 21))
 >M.c : Symbol(c, Decl(declarationEmit_nameConflicts_0.ts, 10, 26))
 >M : Symbol(M, Decl(declarationEmit_nameConflicts_0.ts, 0, 57), Decl(declarationEmit_nameConflicts_0.ts, 13, 1), Decl(declarationEmit_nameConflicts_0.ts, 28, 1))
 >c : Symbol(c, Decl(declarationEmit_nameConflicts_0.ts, 10, 26))
->g : Symbol(c.g, Decl(declarationEmit_nameConflicts_0.ts, 4, 21))
+>g : Symbol(g, Decl(declarationEmit_nameConflicts_0.ts, 4, 21))
 
     export var d = M.d; // emitted incorrectly as typeof im
 >d : Symbol(d, Decl(declarationEmit_nameConflicts_0.ts, 27, 14))
@@= skipped -40, +40 lines =@@
 
     export interface I extends M.c.I { } // ok
 >I : Symbol(I, Decl(declarationEmit_nameConflicts_0.ts, 37, 38))
->M.c.I : Symbol(M.c.I, Decl(declarationEmit_nameConflicts_0.ts, 5, 32))
+>M.c.I : Symbol(I, Decl(declarationEmit_nameConflicts_0.ts, 5, 32))
 >M.c : Symbol(c, Decl(declarationEmit_nameConflicts_0.ts, 10, 26))
 >M : Symbol(M, Decl(declarationEmit_nameConflicts_0.ts, 0, 57), Decl(declarationEmit_nameConflicts_0.ts, 13, 1), Decl(declarationEmit_nameConflicts_0.ts, 28, 1))
 >c : Symbol(c, Decl(declarationEmit_nameConflicts_0.ts, 10, 26))
->I : Symbol(M.c.I, Decl(declarationEmit_nameConflicts_0.ts, 5, 32))
+>I : Symbol(I, Decl(declarationEmit_nameConflicts_0.ts, 5, 32))
 
     export module c {
 >c : Symbol(c, Decl(declarationEmit_nameConflicts_0.ts, 38, 40))
 
         export interface I extends M.c.I { } // ok
 >I : Symbol(I, Decl(declarationEmit_nameConflicts_0.ts, 39, 21))
->M.c.I : Symbol(M.c.I, Decl(declarationEmit_nameConflicts_0.ts, 5, 32))
+>M.c.I : Symbol(I, Decl(declarationEmit_nameConflicts_0.ts, 5, 32))
 >M.c : Symbol(c, Decl(declarationEmit_nameConflicts_0.ts, 10, 26))
 >M : Symbol(M, Decl(declarationEmit_nameConflicts_0.ts, 0, 57), Decl(declarationEmit_nameConflicts_0.ts, 13, 1), Decl(declarationEmit_nameConflicts_0.ts, 28, 1))
 >c : Symbol(c, Decl(declarationEmit_nameConflicts_0.ts, 10, 26))
->I : Symbol(M.c.I, Decl(declarationEmit_nameConflicts_0.ts, 5, 32))
+>I : Symbol(I, Decl(declarationEmit_nameConflicts_0.ts, 5, 32))
     }
 }
 === declarationEmit_nameConflicts_1.ts ===

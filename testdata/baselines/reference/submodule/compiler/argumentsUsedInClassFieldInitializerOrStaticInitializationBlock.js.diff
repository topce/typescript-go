--- old.argumentsUsedInClassFieldInitializerOrStaticInitializationBlock.js
+++ new.argumentsUsedInClassFieldInitializerOrStaticInitializationBlock.js
@@= skipped -32, +32 lines =@@
 
 //// [argumentsUsedInClassFieldInitializerOrStaticInitializationBlock.js]
 function A() {
-    return /** @class */ (function () {
-        function T() {
-            this.a = arguments;
-        }
-        return T;
-    }());
+    return class T {
+        a = arguments;
+    };
 }
 function A1() {
-    return new /** @class */ (function () {
-        function T() {
-            this.a = arguments;
-        }
-        return T;
-    }());
+    return new class T {
+        a = arguments;
+    };
 }
 function B() {
-    return /** @class */ (function () {
-        function T() {
-            this.a = { b: arguments };
-        }
-        return T;
-    }());
+    return class T {
+        a = { b: arguments };
+    };
 }
 function B1() {
-    return new /** @class */ (function () {
-        function T() {
-            this.a = { b: arguments };
-        }
-        return T;
-    }());
+    return new class T {
+        a = { b: arguments };
+    };
 }
 function C() {
-    return /** @class */ (function () {
-        function T() {
-            this.a = function () { arguments; };
-        }
-        return T;
-    }());
+    return class T {
+        a = function () { arguments; };
+    };
 }

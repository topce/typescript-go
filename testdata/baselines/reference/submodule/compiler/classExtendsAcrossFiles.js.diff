--- old.classExtendsAcrossFiles.js
+++ new.classExtendsAcrossFiles.js
@@= skipped -20, +20 lines =@@
 
 //// [b.js]
 "use strict";
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.b = void 0;
-var a_1 = require("./a");
+const a_1 = require("./a");
 exports.b = {
-    f: function () {
-        var A = /** @class */ (function () {
-            function A() {
-            }
-            return A;
-        }());
-        var B = /** @class */ (function (_super) {
-            __extends(B, _super);
-            function B() {
-                return _super !== null && _super.apply(this, arguments) || this;
-            }
-            return B;
-        }(A));
+    f: () => {
+        class A {
+        }
+        class B extends A {
+        }
         a_1.a.f();
     }
 };
 //// [a.js]
 "use strict";
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.a = void 0;
-var b_1 = require("./b");
+const b_1 = require("./b");
 exports.a = {
-    f: function () {
-        var A = /** @class */ (function () {
-            function A() {
-            }
-            return A;
-        }());
-        var B = /** @class */ (function (_super) {
-            __extends(B, _super);
-            function B() {
-                return _super !== null && _super.apply(this, arguments) || this;
-            }
-            return B;
-        }(A));
+    f: () => {
+        class A {
+        }
+        class B extends A {
+        }
         b_1.b.f();
     }
 };

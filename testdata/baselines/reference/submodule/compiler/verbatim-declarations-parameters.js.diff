--- old.verbatim-declarations-parameters.js
+++ new.verbatim-declarations-parameters.js
@@= skipped -28, +28 lines =@@
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.Foo = void 0;
 exports.foo1 = foo1;
-var Foo = /** @class */ (function () {
-    function Foo(
+class Foo {
+    reuseTypeNode;
+    reuseTypeNode2;
+    resolveType;
+    constructor(
     // Type node is accurate, preserve
     reuseTypeNode, reuseTypeNode2, 
     // Resolve type node, requires adding | undefined
@@= skipped -10, +13 lines =@@
         this.reuseTypeNode2 = reuseTypeNode2;
         this.resolveType = resolveType;
     }
-    return Foo;
-}());
+}
 exports.Foo = Foo;
 function foo1(
 // Type node is accurate, preserve
-reuseTypeNode, reuseTypeNode2, 
+reuseTypeNode = {}, reuseTypeNode2 = {}, 
 // Resolve type node, requires adding | undefined
-resolveType, requiredParam) {
-    if (reuseTypeNode === void 0) { reuseTypeNode = {}; }
-    if (reuseTypeNode2 === void 0) { reuseTypeNode2 = {}; }
-    if (resolveType === void 0) { resolveType = {}; }
+resolveType = {}, requiredParam) {
 }
-
-
-//// [verbatim-declarations-parameters.d.ts]
-type Map = {} & {
-    [P in string]: any;
-};
-type MapOrUndefined = Map | undefined | "dummy";
-export declare class Foo {
-    reuseTypeNode?: Map | undefined;
-    reuseTypeNode2?: Exclude<MapOrUndefined, "dummy">;
-    resolveType?: Map | undefined;
-    constructor(reuseTypeNode?: Map | undefined, reuseTypeNode2?: Exclude<MapOrUndefined, "dummy">, resolveType?: Map | undefined);
-}
-export declare function foo1(reuseTypeNode: Map | undefined, reuseTypeNode2: Exclude<MapOrUndefined, "dummy">, resolveType: Map | undefined, requiredParam: number): void;
-export {};

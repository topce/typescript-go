--- old.objectLiteralExcessProperties.js
+++ new.objectLiteralExcessProperties.js
@@= skipped -62, +62 lines =@@
 var b7 = { foreword: "hi", price: 10.99 };
 var b8 = { couleur: "non" };
 var b9 = { forewarned: "still no" };
-var b10 = { 0: {}, '1': {} }; // ok
-var b11 = { 0: { colour: "blue" } }; // nested object literal still errors
-// Repros inspired by #28752
+var b10 = { 0: {}, '1': {} };
+var b11 = { 0: { colour: "blue" } };
 function test() {
-    // No excess property checks on generic types
-    var obj1 = { name: "test" };
-    // No excess property checks on intersections involving generics
-    var obj2 = { name: "test", prop: true };
-    // Excess property checks only on non-generic parts of unions
-    var obj3 = { name: "test", prop: true };
-    // Excess property checks only on non-generic parts of unions
-    var obj4 = { name: "test", prop: true };
-    // No excess property checks when union includes 'object' type
-    var obj5 = { z: 'abc' };
-    // The 'object' type has no effect on intersections
-    var obj6 = { z: 'abc' };
+    const obj1 = { name: "test" };
+    const obj2 = { name: "test", prop: true };
+    const obj3 = { name: "test", prop: true };
+    const obj4 = { name: "test", prop: true };
+    const obj5 = { z: 'abc' };
+    const obj6 = { z: 'abc' };
 }

--- old.abstractClassUnionInstantiation.js
+++ new.abstractClassUnionInstantiation.js
@@= skipped -23, +23 lines =@@
 [AbstractA, AbstractB].map(cls => new cls()); // should error
 
 //// [abstractClassUnionInstantiation.js]
-var ConcreteA = /** @class */ (function () {
-    function ConcreteA() {
-    }
-    return ConcreteA;
-}());
-var ConcreteB = /** @class */ (function () {
-    function ConcreteB() {
-    }
-    return ConcreteB;
-}());
-var AbstractA = /** @class */ (function () {
-    function AbstractA() {
-    }
-    return AbstractA;
-}());
-var AbstractB = /** @class */ (function () {
-    function AbstractB() {
-    }
-    return AbstractB;
-}());
-new cls1(); // should error
-new cls2(); // should error
-new cls3(); // should work
-[ConcreteA, AbstractA, AbstractB].map(function (cls) { return new cls(); }); // should error
-[AbstractA, AbstractB, ConcreteA].map(function (cls) { return new cls(); }); // should error
-[ConcreteA, ConcreteB].map(function (cls) { return new cls(); }); // should work
-[AbstractA, AbstractB].map(function (cls) { return new cls(); }); // should error
+class ConcreteA {
+}
+class ConcreteB {
+}
+class AbstractA {
+    a;
+}
+class AbstractB {
+    b;
+}
+new cls1();
+new cls2();
+new cls3();
+[ConcreteA, AbstractA, AbstractB].map(cls => new cls());
+[AbstractA, AbstractB, ConcreteA].map(cls => new cls());
+[ConcreteA, ConcreteB].map(cls => new cls());
+[AbstractA, AbstractB].map(cls => new cls());

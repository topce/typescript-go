--- old.neverAsDiscriminantType(strict=true).types
+++ new.neverAsDiscriminantType(strict=true).types
@@= skipped -45, +45 lines =@@
 
         foo.a;
 >foo.a : number
->foo : { kind?: "a"; a: number; }
+>foo : { kind?: "a" | undefined; a: number; }
 >a : number
     }
 }
@@= skipped -117, +117 lines =@@
 
     if (input.t === 'MESSAGE_CREATE') {
 >input.t === 'MESSAGE_CREATE' : boolean
->input.t : "MESSAGE_CREATE" | "MESSAGE_UPDATE" | "MESSAGE_DELETE" | undefined
+>input.t : "MESSAGE_CREATE" | "MESSAGE_DELETE" | "MESSAGE_UPDATE" | undefined
 >input : GatewayPayload
->t : "MESSAGE_CREATE" | "MESSAGE_UPDATE" | "MESSAGE_DELETE" | undefined
+>t : "MESSAGE_CREATE" | "MESSAGE_DELETE" | "MESSAGE_UPDATE" | undefined
 >'MESSAGE_CREATE' : "MESSAGE_CREATE"
 
         assertMessage(input.d)

--- old.narrowingAssignmentReadonlyRespectsAssertion.js
+++ new.narrowingAssignmentReadonlyRespectsAssertion.js
@@= skipped -42, +42 lines =@@
 
 
 //// [narrowingAssignmentReadonlyRespectsAssertion.js]
-// https://github.com/microsoft/TypeScript/issues/41984
 function subDataFunc() {
     return [
         { val1: "a", val2: ["a", "b", "c"] },
@@= skipped -13, +12 lines =@@
     return { cases: subFunc() };
 }
 function testFunc() {
-    var fixture = dataFunc(subDataFunc);
-    fixture.cases.forEach(function (_a) {
-        var val1 = _a.val1, val2 = _a.val2;
+    const fixture = dataFunc(subDataFunc);
+    fixture.cases.forEach(({ val1, val2 }) => {
         if (Array.isArray(val1)) {
-            // This should retain val1 as being an array
-            var reversedVal1 = val1.slice().reverse();
+            const reversedVal1 = val1.slice().reverse();
             console.log(reversedVal1);
         }
         else {

--- old.aliasUsageInTypeArgumentOfExtendsClause.types
+++ new.aliasUsageInTypeArgumentOfExtendsClause.types
@@= skipped -1, +1 lines =@@
 
 === aliasUsageInTypeArgumentOfExtendsClause_main.ts ===
 import Backbone = require("./aliasUsageInTypeArgumentOfExtendsClause_backbone");
->Backbone : typeof Backbone
+>Backbone : typeof import("aliasUsageInTypeArgumentOfExtendsClause_backbone")
 
 import moduleA = require("./aliasUsageInTypeArgumentOfExtendsClause_moduleA");
->moduleA : typeof moduleA
+>moduleA : typeof import("aliasUsageInTypeArgumentOfExtendsClause_moduleA")
 
 interface IHasVisualizationModel {
     VisualizationModel: typeof Backbone.Model;
->VisualizationModel : typeof Backbone.Model
->Backbone.Model : typeof Backbone.Model
->Backbone : typeof Backbone
->Model : typeof Backbone.Model
+>VisualizationModel : typeof Model
+>Backbone.Model : typeof Model
+>Backbone : typeof import("aliasUsageInTypeArgumentOfExtendsClause_backbone")
+>Model : typeof Model
 }
 class C<T extends IHasVisualizationModel> {
 >C : C<T>
@@= skipped -23, +23 lines =@@
 >C : C<IHasVisualizationModel>
 
     x = moduleA;
->x : typeof moduleA
->moduleA : typeof moduleA
+>x : typeof import("aliasUsageInTypeArgumentOfExtendsClause_moduleA")
+>moduleA : typeof import("aliasUsageInTypeArgumentOfExtendsClause_moduleA")
 }
 === aliasUsageInTypeArgumentOfExtendsClause_backbone.ts ===
 export class Model {
@@= skipped -13, +13 lines =@@
 
 === aliasUsageInTypeArgumentOfExtendsClause_moduleA.ts ===
 import Backbone = require("./aliasUsageInTypeArgumentOfExtendsClause_backbone");
->Backbone : typeof Backbone
+>Backbone : typeof import("aliasUsageInTypeArgumentOfExtendsClause_backbone")
 
 export class VisualizationModel extends Backbone.Model {
 >VisualizationModel : VisualizationModel
->Backbone.Model : Backbone.Model
->Backbone : typeof Backbone
->Model : typeof Backbone.Model
+>Backbone.Model : Model
+>Backbone : typeof import("aliasUsageInTypeArgumentOfExtendsClause_backbone")
+>Model : typeof Model
 
     // interesting stuff here
 }

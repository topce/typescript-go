--- old.classMemberInitializerWithLamdaScoping.js
+++ new.classMemberInitializerWithLamdaScoping.js
@@= skipped -32, +32 lines =@@
 }
 
 //// [classMemberInitializerWithLamdaScoping.js]
-var Test = /** @class */ (function () {
-    function Test(field) {
-        var _this = this;
+class Test {
+    field;
+    constructor(field) {
         this.field = field;
-        this.messageHandler = function () {
-            var field = _this.field;
-            console.log(field); // Using field here shouldnt be error
-        };
     }
-    Test.staticMessageHandler = function () {
+    messageHandler = () => {
+        var field = this.field;
+        console.log(field);
+    };
+    static field;
+    static staticMessageHandler = () => {
         var field = Test.field;
-        console.log(field); // Using field here shouldnt be error
+        console.log(field);
     };
-    return Test;
-}());
+}
 var field1;
-var Test1 = /** @class */ (function () {
-    function Test1(field1) {
+class Test1 {
+    field1;
+    constructor(field1) {
         this.field1 = field1;
-        this.messageHandler = function () {
-            console.log(field1); // But this should be error as the field1 will resolve to var field1 
-            // but since this code would be generated inside constructor, in generated js
-            // it would resolve to private field1 and thats not what user intended here. 
-        };
     }
-    Test1.staticMessageHandler = function () {
-        console.log(field1); // This shouldnt be error as its a static property
+    messageHandler = () => {
+        console.log(field1);
     };
-    return Test1;
-}());
+    static staticMessageHandler = () => {
+        console.log(field1);
+    };
+}

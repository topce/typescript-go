--- old.gettersAndSetters.js
+++ new.gettersAndSetters.js
@@= skipped -52, +52 lines =@@
 
 
 //// [gettersAndSetters.js]
-// classes
 class C {
-    constructor() {
-        this.fooBack = "";
-        this.bazBack = "";
-        this.get = function () { }; // ok
-        this.set = function () { }; // ok
-    }
-    get Foo() { return this.fooBack; } // ok
-    set Foo(foo) { this.fooBack = foo; } // ok
-    static get Bar() { return C.barBack; } // ok
-    static set Bar(bar) { C.barBack = bar; } // ok
+    fooBack = "";
+    static barBack = "";
+    bazBack = "";
+    get Foo() { return this.fooBack; }
+    set Foo(foo) { this.fooBack = foo; }
+    static get Bar() { return C.barBack; }
+    static set Bar(bar) { C.barBack = bar; }
+    get = function () { };
+    set = function () { };
 }
-C.barBack = "";
 var c = new C();
 var foo = c.Foo;
 c.Foo = "foov";
@@= skipped -21, +18 lines =@@
 C.Bar = "barv";
 var baz = c.Baz;
 c.Baz = "bazv";
-// The Foo accessors' return and param types should be contextually typed to the Foo field
-var o = { get Foo() { return 0; }, set Foo(val) { val; } }; // o
+var o = { get Foo() { return 0; }, set Foo(val) { val; } };
 var ofg = o.Foo;
 o.Foo = 0;
 var i = function (n) { return n; };
-// Repro from #45006
 const x = Math.random() < 0.5 ? "str" : 123;
 if (typeof x === "string") {
     let obj = {

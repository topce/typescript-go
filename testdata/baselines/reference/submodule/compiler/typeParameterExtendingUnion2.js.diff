--- old.typeParameterExtendingUnion2.js
+++ new.typeParameterExtendingUnion2.js
@@= skipped -14, +14 lines =@@
 }
 
 //// [typeParameterExtendingUnion2.js]
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
-var Animal = /** @class */ (function () {
-    function Animal() {
-    }
-    Animal.prototype.run = function () { };
-    return Animal;
-}());
-var Cat = /** @class */ (function (_super) {
-    __extends(Cat, _super);
-    function Cat() {
-        return _super !== null && _super.apply(this, arguments) || this;
-    }
-    return Cat;
-}(Animal));
-var Dog = /** @class */ (function (_super) {
-    __extends(Dog, _super);
-    function Dog() {
-        return _super !== null && _super.apply(this, arguments) || this;
-    }
-    return Dog;
-}(Animal));
+class Animal {
+    run() { }
+}
+class Cat extends Animal {
+    meow;
+}
+class Dog extends Animal {
+    woof;
+}
 function run(a) {
     a.run();
 }

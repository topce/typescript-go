--- old.genericTypeAssertions6.js
+++ new.genericTypeAssertions6.js
@@= skipped -26, +26 lines =@@
 var c: A<Date, Date> = <A<Date, Date>>b;
 
 //// [genericTypeAssertions6.js]
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
-var A = /** @class */ (function () {
-    function A(x) {
+class A {
+    constructor(x) {
         var y = x;
         var z = x;
     }
-    A.prototype.f = function (x, y) {
+    f(x, y) {
         x = y;
         y = x;
-    };
-    return A;
-}());
-var B = /** @class */ (function (_super) {
-    __extends(B, _super);
-    function B() {
-        return _super !== null && _super.apply(this, arguments) || this;
     }
-    B.prototype.g = function (x) {
+}
+class B extends A {
+    g(x) {
         var a = x;
         var b = x;
         var c = new Date();
         var d = new Date();
         var e = new Date();
-    };
-    return B;
-}(A));
+    }
+}
 var b;
 var c = b;

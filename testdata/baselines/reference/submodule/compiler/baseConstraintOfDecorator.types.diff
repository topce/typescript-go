--- old.baseConstraintOfDecorator.types
+++ new.baseConstraintOfDecorator.types
@@= skipped -43, +43 lines =@@
 >args : any[]
 
     return class decoratorFunc extends superClass {
->class decoratorFunc extends superClass {        constructor(...args: any[]) {            super(...args);            _instanceModifier(this, args);        }    } : { new (...args: any[]): decoratorFunc; prototype: classExtender2<any>.decoratorFunc; } & TFunction
->decoratorFunc : { new (...args: any[]): decoratorFunc; prototype: classExtender2<any>.decoratorFunc; } & TFunction
+>class decoratorFunc extends superClass {        constructor(...args: any[]) {            super(...args);            _instanceModifier(this, args);        }    } : { new (...args: any[]): decoratorFunc<TFunction>; prototype: decoratorFunc<any>; } & TFunction
+>decoratorFunc : { new (...args: any[]): decoratorFunc<TFunction>; prototype: decoratorFunc<any>; } & TFunction
 >superClass : MyClass
 
         constructor(...args: any[]) {

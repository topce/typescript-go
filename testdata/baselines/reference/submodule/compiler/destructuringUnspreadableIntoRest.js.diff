--- old.destructuringUnspreadableIntoRest.js
+++ new.destructuringUnspreadableIntoRest.js
@@= skipped -90, +90 lines =@@
 
 
 //// [destructuringUnspreadableIntoRest.js]
-var __rest = (this && this.__rest) || function (s, e) {
-    var t = {};
-    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
-        t[p] = s[p];
-    if (s != null && typeof Object.getOwnPropertySymbols === "function")
-        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
-            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
-                t[p[i]] = s[p[i]];
-        }
-    return t;
-};
 class A {
+    publicProp;
+    privateProp;
+    protectedProp;
     constructor(publicProp, privateProp, protectedProp) {
         this.publicProp = publicProp;
         this.privateProp = privateProp;
@@= skipped -22, +14 lines =@@
     }
     set setter(_v) { }
     method() {
-        const rest1 = __rest(this, []);
-        const rest2 = __rest(this, []);
-        const _a = this, { publicProp: _1 } = _a, rest3 = __rest(_a, ["publicProp"]);
-        const _b = this, { publicProp: _2 } = _b, rest4 = __rest(_b, ["publicProp"]);
+        const { ...rest1 } = this;
+        const { ...rest2 } = this;
+        const { publicProp: _1, ...rest3 } = this;
+        const { publicProp: _2, ...rest4 } = this;
         rest1.publicProp;
         rest2.publicProp;
         rest3.publicProp;
@@= skipped -31, +31 lines =@@
     }
 }
 function destructure(x) {
-    const rest1 = __rest(x, []);
-    const rest2 = __rest(x, []);
-    const { publicProp: _1 } = x, rest3 = __rest(x, ["publicProp"]);
-    const _a = x, { publicProp: _2 } = _a, rest4 = __rest(_a, ["publicProp"]);
+    const { ...rest1 } = x;
+    const { ...rest2 } = x;
+    const { publicProp: _1, ...rest3 } = x;
+    const { publicProp: _2, ...rest4 } = x;
     rest1.publicProp;
     rest2.publicProp;
     rest3.publicProp;

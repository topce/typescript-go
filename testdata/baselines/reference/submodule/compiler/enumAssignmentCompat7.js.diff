--- old.enumAssignmentCompat7.js
+++ new.enumAssignmentCompat7.js
@@= skipped -25, +25 lines =@@
 }
 
 //// [enumAssignmentCompat7.js]
-"use strict";
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
 var first;
 (function (first) {
-    var E;
+    let E;
     (function (E) {
         E[E["A"] = 1] = "A";
     })(E = first.E || (first.E = {}));
 })(first || (first = {}));
 var second;
 (function (second) {
-    var E;
+    let E;
     (function (E) {
         E[E["A"] = 2] = "A";
     })(E = second.E || (second.E = {}));
 })(second || (second = {}));
-var Base = /** @class */ (function () {
-    function Base() {
+class Base {
+    method(param) {
     }
-    Base.prototype.method = function (param) {
-    };
-    return Base;
-}());
-var Derived = /** @class */ (function (_super) {
-    __extends(Derived, _super);
-    function Derived() {
-        return _super !== null && _super.apply(this, arguments) || this;
+}
+class Derived extends Base {
+    method(param) {
     }
-    Derived.prototype.method = function (param) {
-    };
-    return Derived;
-}(Base));
+}
 function overloadingFunction() {
     return second.E.B;
 }

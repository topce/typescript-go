--- old.contextuallyTypedStringLiteralsInJsxAttributes02.js
+++ new.contextuallyTypedStringLiteralsInJsxAttributes02.js
@@= skipped -39, +39 lines =@@
 
 
 //// [file.jsx]
-define(["require", "exports", "react"], function (require, exports, React) {
-    "use strict";
-    Object.defineProperty(exports, "__esModule", { value: true });
-    exports.MainButton = MainButton;
-    exports.NoOverload = NoOverload;
-    exports.NoOverload1 = NoOverload1;
-    function MainButton(props) {
-        var linkProps = props;
-        if (linkProps.goTo) {
-            return this._buildMainLink(props);
-        }
-        return this._buildMainButton(props);
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.MainButton = MainButton;
+exports.NoOverload = NoOverload;
+exports.NoOverload1 = NoOverload1;
+function MainButton(props) {
+    const linkProps = props;
+    if (linkProps.goTo) {
+        return this._buildMainLink(props);
     }
-    var b0 = <MainButton {...{ onClick: function (k) { console.log(k); } }} extra/>; // k has type "left" | "right"
-    var b2 = <MainButton onClick={function (k) { console.log(k); }} extra/>; // k has type "left" | "right"
-    var b3 = <MainButton {...{ goTo: "home" }} extra/>; // goTo has type"home" | "contact"
-    var b4 = <MainButton goTo="home" extra/>; // goTo has type "home" | "contact"
-    function NoOverload(buttonProps) { return undefined; }
-    var c1 = <NoOverload {...{ onClick: function (k) { console.log(k); } }} extra/>; // k has type any
-    function NoOverload1(linkProps) { return undefined; }
-    var d1 = <NoOverload1 {...{ goTo: "home" }} extra/>; // goTo has type "home" | "contact"
-});
+    return this._buildMainButton(props);
+}
+const b0 = <MainButton {...{ onClick: (k) => { console.log(k); } }} extra/>;
+const b2 = <MainButton onClick={(k) => { console.log(k); }} extra/>;
+const b3 = <MainButton {...{ goTo: "home" }} extra/>;
+const b4 = <MainButton goTo="home" extra/>;
+function NoOverload(buttonProps) { return undefined; }
+const c1 = <NoOverload {...{ onClick: (k) => { console.log(k); } }} extra/>;
+function NoOverload1(linkProps) { return undefined; }
+const d1 = <NoOverload1 {...{ goTo: "home" }} extra/>;

--- old.mergedInterfacesWithMultipleBases2.js
+++ new.mergedInterfacesWithMultipleBases2.js
@@= skipped -77, +77 lines =@@
 }
 
 //// [mergedInterfacesWithMultipleBases2.js]
-// merged interfaces behave as if all extends clauses from each declaration are merged together
-// no errors expected
-var C = /** @class */ (function () {
-    function C() {
+class C {
+    a;
+}
+class C2 {
+    b;
+}
+class C3 {
+    c;
+}
+class C4 {
+    d;
+}
+class D {
+    a;
+    b;
+    c;
+    d;
+    y;
+    z;
+}
+var a;
+var r = a.a;
+var M;
+(function (M) {
+    class C {
+        a;
     }
-    return C;
-}());
-var C2 = /** @class */ (function () {
-    function C2() {
+    class C2 {
+        b;
     }
-    return C2;
-}());
-var C3 = /** @class */ (function () {
-    function C3() {
+    class C3 {
+        c;
     }
-    return C3;
-}());
-var C4 = /** @class */ (function () {
-    function C4() {
+    class C4 {
+        d;
     }
-    return C4;
-}());
-var D = /** @class */ (function () {
-    function D() {
+    class D {
+        a;
+        b;
+        c;
+        d;
+        y;
+        z;
     }
-    return D;
-}());
-var a;
-var r = a.a;
-// generic interfaces in a module
-var M;
-(function (M) {
-    var C = /** @class */ (function () {
-        function C() {
-        }
-        return C;
-    }());
-    var C2 = /** @class */ (function () {
-        function C2() {
-        }
-        return C2;
-    }());
-    var C3 = /** @class */ (function () {
-        function C3() {
-        }
-        return C3;
-    }());
-    var C4 = /** @class */ (function () {
-        function C4() {
-        }
-        return C4;
-    }());
-    var D = /** @class */ (function () {
-        function D() {
-        }
-        return D;
-    }());
 })(M || (M = {}));

--- old.mixinAbstractClasses.2.types
+++ new.mixinAbstractClasses.2.types
@@= skipped -6, +6 lines =@@
 }
 
 function Mixin<TBaseClass extends abstract new (...args: any) => any>(baseClass: TBaseClass): TBaseClass & (abstract new (...args: any) => Mixin) {
->Mixin : <TBaseClass extends abstract new (...args: any) => any>(baseClass: TBaseClass) => TBaseClass & (abstract new (...args: any) => Mixin)
+>Mixin : <TBaseClass extends new (...args: any) => any>(baseClass: TBaseClass) => TBaseClass & (new (...args: any) => Mixin)
 >args : any
 >baseClass : TBaseClass
 >args : any
 
     // error expected: A mixin class that extends from a type variable containing an abstract construct signature must also be declared 'abstract'.
     class MixinClass extends baseClass implements Mixin {
->MixinClass : MixinClass
+>MixinClass : MixinClass<TBaseClass>
 >baseClass : TBaseClass
 
         mixinMethod() {
@@= skipped -15, +15 lines =@@
         }
     }
     return MixinClass;
->MixinClass : { new (...args: any): MixinClass; prototype: Mixin<any>.MixinClass; } & TBaseClass
+>MixinClass : { new (...args: any): MixinClass<TBaseClass>; prototype: MixinClass<any>; } & TBaseClass
 }
 
 abstract class AbstractBase {
@@= skipped -11, +11 lines =@@
 }
 
 const MixedBase = Mixin(AbstractBase);
->MixedBase : typeof AbstractBase & (abstract new (...args: any) => Mixin)
->Mixin(AbstractBase) : typeof AbstractBase & (abstract new (...args: any) => Mixin)
->Mixin : <TBaseClass extends abstract new (...args: any) => any>(baseClass: TBaseClass) => TBaseClass & (abstract new (...args: any) => Mixin)
+>MixedBase : typeof AbstractBase & (new (...args: any) => Mixin)
+>Mixin(AbstractBase) : typeof AbstractBase & (new (...args: any) => Mixin)
+>Mixin : <TBaseClass extends new (...args: any) => any>(baseClass: TBaseClass) => TBaseClass & (new (...args: any) => Mixin)
 >AbstractBase : typeof AbstractBase
 
 // error expected: Non-abstract class 'DerivedFromAbstract' does not implement inherited abstract member 'abstractBaseMethod' from class 'AbstractBase & Mixin'.
@@= skipped -14, +14 lines =@@
 // error expected: Cannot create an instance of an abstract class.
 new MixedBase();
 >new MixedBase() : any
->MixedBase : typeof AbstractBase & (abstract new (...args: any) => Mixin)
+>MixedBase : typeof AbstractBase & (new (...args: any) => Mixin)
 

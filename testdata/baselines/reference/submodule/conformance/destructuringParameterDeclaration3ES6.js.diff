--- old.destructuringParameterDeclaration3ES6.js
+++ new.destructuringParameterDeclaration3ES6.js
@@= skipped -47, +47 lines =@@
 
 
 //// [destructuringParameterDeclaration3ES6.js]
-// If the parameter is a rest parameter, the parameter type is any[]
-// A type annotation for a rest parameter must denote an array type.
 function a1(...x) { }
 function a2(...a) { }
 function a3(...a) { }
@@= skipped -14, +12 lines =@@
 var array2 = [true, false, "hello"];
 a2([...array]);
 a1(...array);
-a9([1, 2, [["string"]], false, true]); // Parameter type is [any, any, [[any]]]
-a10([1, 2, [["string"]], false, true]); // Parameter type is any[]
-a10([1, 2, 3, false, true]); // Parameter type is any[]
-a10([1, 2]); // Parameter type is any[]
-a11([1, 2]); // Parameter type is number[]
-// Rest parameter with generic
+a9([1, 2, [["string"]], false, true]);
+a10([1, 2, [["string"]], false, true]);
+a10([1, 2, 3, false, true]);
+a10([1, 2]);
+a11([1, 2]);
 function foo(...a) { }
 foo("hello", 1, 2);
 foo("hello", "world");
@@= skipped -14, +13 lines =@@
     E[E["a"] = 0] = "a";
     E[E["b"] = 1] = "b";
 })(E || (E = {}));
+var E1;
+(function (E1) {
+    E1[E1["a"] = 0] = "a";
+    E1[E1["b"] = 1] = "b";
+})(E1 || (E1 = {}));
 function foo1(...a) { }
 foo1(1, 2, 3, E.a);
-foo1(1, 2, 3, 0 /* E1.a */, E.b);
+foo1(1, 2, 3, E1.a, E.b);

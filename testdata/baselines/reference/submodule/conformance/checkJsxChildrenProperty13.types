//// [tests/cases/conformance/jsx/checkJsxChildrenProperty13.tsx] ////

=== file.tsx ===
import React = require('react');
>React : any

interface ButtonProp {
    a: number,
>a : number

    b: string,
>b : string

    children: Button;
>children : Button
}

class Button extends React.Component<ButtonProp, any> {
>Button : Button
>React.Component : any
>React : any
>Component : any

    render() {
>render : () => any

        // Error children are specified twice
        return (<InnerButton {...this.props} children="hi">
>(<InnerButton {...this.props} children="hi">            <div>Hello World</div>            </InnerButton>) : any
><InnerButton {...this.props} children="hi">            <div>Hello World</div>            </InnerButton> : any
>InnerButton : typeof InnerButton
>this.props : any
>this : this
>props : any
>children : any

            <div>Hello World</div>
><div>Hello World</div> : any
>div : any
>div : any

            </InnerButton>);
>InnerButton : typeof InnerButton
    }
}

interface InnerButtonProp {
	a: number
>a : number
}

class InnerButton extends React.Component<InnerButtonProp, any> {
>InnerButton : InnerButton
>React.Component : any
>React : any
>Component : any

	render() {
>render : () => any

		return (<button>Hello</button>);
>(<button>Hello</button>) : any
><button>Hello</button> : any
>button : any
>button : any
	}
}


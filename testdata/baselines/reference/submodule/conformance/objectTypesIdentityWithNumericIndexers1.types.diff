--- old.objectTypesIdentityWithNumericIndexers1.types
+++ new.objectTypesIdentityWithNumericIndexers1.types
@@= skipped -100, +100 lines =@@
 >x : any
 
 function foo3(x: typeof a);
->foo3 : { (x: typeof a): any; (x: typeof a): any; }
+>foo3 : { (x: { [x: number]: string; }): any; (x: { [x: number]: string; }): any; }
 >x : { [x: number]: string; }
 >a : { [x: number]: string; }
 
 function foo3(x: typeof a); // error
->foo3 : { (x: typeof a): any; (x: typeof a): any; }
+>foo3 : { (x: { [x: number]: string; }): any; (x: { [x: number]: string; }): any; }
 >x : { [x: number]: string; }
 >a : { [x: number]: string; }
 
 function foo3(x: any) { }
->foo3 : { (x: typeof a): any; (x: typeof a): any; }
+>foo3 : { (x: { [x: number]: string; }): any; (x: { [x: number]: string; }): any; }
 >x : any
 
 function foo4(x: typeof b);
->foo4 : { (x: typeof b): any; (x: typeof b): any; }
+>foo4 : { (x: { [x: number]: string; }): any; (x: { [x: number]: string; }): any; }
 >x : { [x: number]: string; }
 >b : { [x: number]: string; }
 
 function foo4(x: typeof b); // error
->foo4 : { (x: typeof b): any; (x: typeof b): any; }
+>foo4 : { (x: { [x: number]: string; }): any; (x: { [x: number]: string; }): any; }
 >x : { [x: number]: string; }
 >b : { [x: number]: string; }
 
 function foo4(x: any) { }
->foo4 : { (x: typeof b): any; (x: typeof b): any; }
+>foo4 : { (x: { [x: number]: string; }): any; (x: { [x: number]: string; }): any; }
 >x : any
 
 function foo5(x: A);
@@= skipped -88, +88 lines =@@
 >x : any
 
 function foo7(x: A);
->foo7 : { (x: A): any; (x: typeof a): any; }
+>foo7 : { (x: A): any; (x: { [x: number]: string; }): any; }
 >x : A
 
 function foo7(x: typeof a); // error
->foo7 : { (x: A): any; (x: typeof a): any; }
+>foo7 : { (x: A): any; (x: { [x: number]: string; }): any; }
 >x : { [x: number]: string; }
 >a : { [x: number]: string; }
 
 function foo7(x: any) { }
->foo7 : { (x: A): any; (x: typeof a): any; }
+>foo7 : { (x: A): any; (x: { [x: number]: string; }): any; }
 >x : any
 
 function foo8(x: B);
@@= skipped -37, +37 lines =@@
 >x : any
 
 function foo10(x: B);
->foo10 : { (x: B): any; (x: typeof a): any; }
+>foo10 : { (x: B): any; (x: { [x: number]: string; }): any; }
 >x : B
 
 function foo10(x: typeof a); // error
->foo10 : { (x: B): any; (x: typeof a): any; }
+>foo10 : { (x: B): any; (x: { [x: number]: string; }): any; }
 >x : { [x: number]: string; }
 >a : { [x: number]: string; }
 
 function foo10(x: any) { }
->foo10 : { (x: B): any; (x: typeof a): any; }
+>foo10 : { (x: B): any; (x: { [x: number]: string; }): any; }
 >x : any
 
 function foo11(x: B);
->foo11 : { (x: B): any; (x: typeof b): any; }
+>foo11 : { (x: B): any; (x: { [x: number]: string; }): any; }
 >x : B
 
 function foo11(x: typeof b); // error
->foo11 : { (x: B): any; (x: typeof b): any; }
+>foo11 : { (x: B): any; (x: { [x: number]: string; }): any; }
 >x : { [x: number]: string; }
 >b : { [x: number]: string; }
 
 function foo11(x: any) { }
->foo11 : { (x: B): any; (x: typeof b): any; }
+>foo11 : { (x: B): any; (x: { [x: number]: string; }): any; }
 >x : any
 
 function foo11b(x: B);
@@= skipped -62, +62 lines =@@
 >x : any
 
 function foo13(x: I);
->foo13 : { (x: I): any; (x: typeof a): any; }
+>foo13 : { (x: I): any; (x: { [x: number]: string; }): any; }
 >x : I
 
 function foo13(x: typeof a); // error
->foo13 : { (x: I): any; (x: typeof a): any; }
+>foo13 : { (x: I): any; (x: { [x: number]: string; }): any; }
 >x : { [x: number]: string; }
 >a : { [x: number]: string; }
 
 function foo13(x: any) { }
->foo13 : { (x: I): any; (x: typeof a): any; }
+>foo13 : { (x: I): any; (x: { [x: number]: string; }): any; }
 >x : any
 
 function foo14(x: I);
->foo14 : { (x: I): any; (x: typeof b): any; }
+>foo14 : { (x: I): any; (x: { [x: number]: string; }): any; }
 >x : I
 
 function foo14(x: typeof b); // error
->foo14 : { (x: I): any; (x: typeof b): any; }
+>foo14 : { (x: I): any; (x: { [x: number]: string; }): any; }
 >x : { [x: number]: string; }
 >b : { [x: number]: string; }
 
 function foo14(x: any) { }
->foo14 : { (x: I): any; (x: typeof b): any; }
+>foo14 : { (x: I): any; (x: { [x: number]: string; }): any; }
 >x : any
 
 function foo15(x: I);

--- old.amdImportAsPrimaryExpression.js
+++ new.amdImportAsPrimaryExpression.js
@@= skipped -12, +12 lines =@@
 
 
 //// [foo_0.js]
-define(["require", "exports"], function (require, exports) {
-    "use strict";
-    Object.defineProperty(exports, "__esModule", { value: true });
-    exports.E1 = void 0;
-    var E1;
-    (function (E1) {
-        E1[E1["A"] = 0] = "A";
-        E1[E1["B"] = 1] = "B";
-        E1[E1["C"] = 2] = "C";
-    })(E1 || (exports.E1 = E1 = {}));
-});
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.E1 = void 0;
+var E1;
+(function (E1) {
+    E1[E1["A"] = 0] = "A";
+    E1[E1["B"] = 1] = "B";
+    E1[E1["C"] = 2] = "C";
+})(E1 || (exports.E1 = E1 = {}));
 //// [foo_1.js]
-define(["require", "exports", "./foo_0"], function (require, exports, foo) {
-    "use strict";
-    Object.defineProperty(exports, "__esModule", { value: true });
-    if (foo.E1.A === 0) {
-        // Should cause runtime import - interesting optimization possibility, as gets inlined to 0.
-    }
-});
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+const foo = require("./foo_0");
+if (foo.E1.A === 0) {
+    // Should cause runtime import - interesting optimization possibility, as gets inlined to 0.
+}

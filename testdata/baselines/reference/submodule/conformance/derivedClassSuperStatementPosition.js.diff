--- old.derivedClassSuperStatementPosition.js
+++ new.derivedClassSuperStatementPosition.js
@@= skipped -98, +98 lines =@@
 
 
 //// [derivedClassSuperStatementPosition.js]
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
-var DerivedBasic = /** @class */ (function (_super) {
-    __extends(DerivedBasic, _super);
-    function DerivedBasic() {
-        var _this = _super.call(this) || this;
-        _this.prop = 1;
-        return _this;
+class DerivedBasic extends Object {
+    prop = 1;
+    constructor() {
+        super();
     }
-    return DerivedBasic;
-}(Object));
-var DerivedAfterParameterDefault = /** @class */ (function (_super) {
-    __extends(DerivedAfterParameterDefault, _super);
-    function DerivedAfterParameterDefault(x) {
-        if (x === void 0) { x = false; }
-        var _this = this;
-        _this.x1 = x;
-        _this = _super.call(this, x) || this;
-        _this.x2 = x;
-        return _this;
+}
+class DerivedAfterParameterDefault extends Object {
+    x1;
+    x2;
+    constructor(x = false) {
+        this.x1 = x;
+        super(x);
+        this.x2 = x;
     }
-    return DerivedAfterParameterDefault;
-}(Object));
-var DerivedAfterRestParameter = /** @class */ (function (_super) {
-    __extends(DerivedAfterRestParameter, _super);
-    function DerivedAfterRestParameter() {
-        var x = [];
-        for (var _i = 0; _i < arguments.length; _i++) {
-            x[_i] = arguments[_i];
-        }
-        var _this = this;
-        _this.x1 = x;
-        _this = _super.call(this, x) || this;
-        _this.x2 = x;
-        return _this;
+}
+class DerivedAfterRestParameter extends Object {
+    x1;
+    x2;
+    constructor(...x) {
+        this.x1 = x;
+        super(x);
+        this.x2 = x;
     }
-    return DerivedAfterRestParameter;
-}(Object));
-var DerivedComments = /** @class */ (function (_super) {
-    __extends(DerivedComments, _super);
-    function DerivedComments() {
-        var _this = this;
+}
+class DerivedComments extends Object {
+    x;
+    constructor() {
         // c1
         console.log(); // c2
         // c3
-        _this = _super.call(this) || this; // c4
+        super(); // c4
         // c5
-        _this.x = null; // c6
-        return _this;
+        this.x = null; // c6
         // c7
     }
-    return DerivedComments;
-}(Object));
-var DerivedCommentsInvalidThis = /** @class */ (function (_super) {
-    __extends(DerivedCommentsInvalidThis, _super);
-    function DerivedCommentsInvalidThis() {
-        var _this = this;
+}
+class DerivedCommentsInvalidThis extends Object {
+    x;
+    constructor() {
         // c0
-        _this;
+        this;
         // c1
         console.log(); // c2
         // c3
-        _this = _super.call(this) || this; // c4
+        super(); // c4
         // c5
-        _this.x = null; // c6
-        return _this;
+        this.x = null; // c6
         // c7
     }
-    return DerivedCommentsInvalidThis;
-}(Object));
-var DerivedInConditional = /** @class */ (function (_super) {
-    __extends(DerivedInConditional, _super);
-    function DerivedInConditional() {
-        var _this = this;
-        _this.prop = 1;
+}
+class DerivedInConditional extends Object {
+    prop = 1;
+    constructor() {
         Math.random()
-            ? _this = _super.call(this, 1) || this : _this = _super.call(this, 0) || this;
-        return _this;
+            ? super(1)
+            : super(0);
     }
-    return DerivedInConditional;
-}(Object));
-var DerivedInIf = /** @class */ (function (_super) {
-    __extends(DerivedInIf, _super);
-    function DerivedInIf() {
-        var _this = this;
-        _this.prop = 1;
+}
+class DerivedInIf extends Object {
+    prop = 1;
+    constructor() {
         if (Math.random()) {
-            _this = _super.call(this, 1) || this;
+            super(1);
         }
         else {
-            _this = _super.call(this, 0) || this;
+            super(0);
         }
-        return _this;
     }
-    return DerivedInIf;
-}(Object));
-var DerivedInBlockWithProperties = /** @class */ (function (_super) {
-    __extends(DerivedInBlockWithProperties, _super);
-    function DerivedInBlockWithProperties(paramProp) {
-        if (paramProp === void 0) { paramProp = 2; }
-        var _this = this;
-        _this.paramProp = paramProp;
-        _this.prop = 1;
+}
+class DerivedInBlockWithProperties extends Object {
+    paramProp;
+    prop = 1;
+    constructor(paramProp = 2) {
+        this.paramProp = paramProp;
         {
-            _this = _super.call(this) || this;
+            super();
         }
-        return _this;
     }
-    return DerivedInBlockWithProperties;
-}(Object));
-var DerivedInConditionalWithProperties = /** @class */ (function (_super) {
-    __extends(DerivedInConditionalWithProperties, _super);
-    function DerivedInConditionalWithProperties(paramProp) {
-        if (paramProp === void 0) { paramProp = 2; }
-        var _this = this;
-        _this.paramProp = paramProp;
-        _this.prop = 1;
+}
+class DerivedInConditionalWithProperties extends Object {
+    paramProp;
+    prop = 1;
+    constructor(paramProp = 2) {
+        this.paramProp = paramProp;
         if (Math.random()) {
-            _this = _super.call(this, 1) || this;
+            super(1);
         }
         else {
-            _this = _super.call(this, 0) || this;
+            super(0);
         }
-        return _this;
     }
-    return DerivedInConditionalWithProperties;
-}(Object));
+}

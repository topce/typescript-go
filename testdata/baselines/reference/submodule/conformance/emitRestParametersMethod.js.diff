--- old.emitRestParametersMethod.js
+++ new.emitRestParametersMethod.js
@@= skipped -15, +15 lines =@@
 }
 
 //// [emitRestParametersMethod.js]
-var C = /** @class */ (function () {
-    function C(name) {
-        var rest = [];
-        for (var _i = 1; _i < arguments.length; _i++) {
-            rest[_i - 1] = arguments[_i];
-        }
-    }
-    C.prototype.bar = function () {
-        var rest = [];
-        for (var _i = 0; _i < arguments.length; _i++) {
-            rest[_i] = arguments[_i];
-        }
-    };
-    C.prototype.foo = function (x) {
-        var rest = [];
-        for (var _i = 1; _i < arguments.length; _i++) {
-            rest[_i - 1] = arguments[_i];
-        }
-    };
-    return C;
-}());
-var D = /** @class */ (function () {
-    function D() {
-        var rest = [];
-        for (var _i = 0; _i < arguments.length; _i++) {
-            rest[_i] = arguments[_i];
-        }
-    }
-    D.prototype.bar = function () {
-        var rest = [];
-        for (var _i = 0; _i < arguments.length; _i++) {
-            rest[_i] = arguments[_i];
-        }
-    };
-    D.prototype.foo = function (x) {
-        var rest = [];
-        for (var _i = 1; _i < arguments.length; _i++) {
-            rest[_i - 1] = arguments[_i];
-        }
-    };
-    return D;
-}());
+class C {
+    constructor(name, ...rest) { }
+    bar(...rest) { }
+    foo(x, ...rest) { }
+}
+class D {
+    constructor(...rest) { }
+    bar(...rest) { }
+    foo(x, ...rest) { }
+}

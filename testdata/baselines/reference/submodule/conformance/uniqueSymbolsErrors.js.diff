--- old.uniqueSymbolsErrors.js
+++ new.uniqueSymbolsErrors.js
@@= skipped -89, +89 lines =@@
 const shouldNotBeAssignable: string = Symbol();
 
 //// [uniqueSymbolsErrors.js]
-// classes
 class InvalidClass {
     constructor(invalidConstructorArgType) { }
+    invalidReadonlyPropertyType;
+    invalidPropertyType;
     invalidArgType(arg) { return; }
     invalidRestArgType(...args) { return; }
     invalidReturnType() { return; }
@@= skipped -12, +13 lines =@@
     invalidTypeParameterDefault() { return; }
     get invalidGetter() { return; }
     set invalidSetter(arg) { return; }
+    static invalidStaticPropertyType;
     static invalidStaticArgType(arg) { return; }
     static invalidStaticRestArgType(...args) { return; }
     static invalidStaticReturnType() { return; }
@@= skipped -10, +11 lines =@@
     static get invalidStaticGetter() { return; }
     static set invalidStaticSetter(arg) { return; }
 }
-// initializer assignability
-// https://github.com/Microsoft/TypeScript/issues/21584
 const shouldNotBeAssignable = Symbol();

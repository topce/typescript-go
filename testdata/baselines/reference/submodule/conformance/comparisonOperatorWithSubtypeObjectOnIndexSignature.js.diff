--- old.comparisonOperatorWithSubtypeObjectOnIndexSignature.js
+++ new.comparisonOperatorWithSubtypeObjectOnIndexSignature.js
@@= skipped -109, +109 lines =@@
 var r8b1 = b4 !== a4;
 
 //// [comparisonOperatorWithSubtypeObjectOnIndexSignature.js]
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
-var Base = /** @class */ (function () {
-    function Base() {
-    }
-    return Base;
-}());
-var Derived = /** @class */ (function (_super) {
-    __extends(Derived, _super);
-    function Derived() {
-        return _super !== null && _super.apply(this, arguments) || this;
-    }
-    return Derived;
-}(Base));
+class Base {
+    a;
+}
+class Derived extends Base {
+    b;
+}
 var a1;
 var b1;
 var a2;
@@= skipped -35, +14 lines =@@
 var b3;
 var a4;
 var b4;
-// operator <
 var r1a1 = a1 < b1;
 var r1a1 = a2 < b2;
 var r1a1 = a3 < b3;
@@= skipped -9, +8 lines =@@
 var r1b1 = b2 < a2;
 var r1b1 = b3 < a3;
 var r1b1 = b4 < a4;
-// operator >
 var r2a1 = a1 > b1;
 var r2a1 = a2 > b2;
 var r2a1 = a3 > b3;
@@= skipped -9, +8 lines =@@
 var r2b1 = b2 > a2;
 var r2b1 = b3 > a3;
 var r2b1 = b4 > a4;
-// operator <=
 var r3a1 = a1 <= b1;
 var r3a1 = a2 <= b2;
 var r3a1 = a3 <= b3;
@@= skipped -9, +8 lines =@@
 var r3b1 = b2 <= a2;
 var r3b1 = b3 <= a3;
 var r3b1 = b4 <= a4;
-// operator >=
 var r4a1 = a1 >= b1;
 var r4a1 = a2 >= b2;
 var r4a1 = a3 >= b3;
@@= skipped -9, +8 lines =@@
 var r4b1 = b2 >= a2;
 var r4b1 = b3 >= a3;
 var r4b1 = b4 >= a4;
-// operator ==
 var r5a1 = a1 == b1;
 var r5a1 = a2 == b2;
 var r5a1 = a3 == b3;
@@= skipped -9, +8 lines =@@
 var r5b1 = b2 == a2;
 var r5b1 = b3 == a3;
 var r5b1 = b4 == a4;
-// operator !=
 var r6a1 = a1 != b1;
 var r6a1 = a2 != b2;
 var r6a1 = a3 != b3;
@@= skipped -9, +8 lines =@@
 var r6b1 = b2 != a2;
 var r6b1 = b3 != a3;
 var r6b1 = b4 != a4;
-// operator ===
 var r7a1 = a1 === b1;
 var r7a1 = a2 === b2;
 var r7a1 = a3 === b3;
@@= skipped -9, +8 lines =@@
 var r7b1 = b2 === a2;
 var r7b1 = b3 === a3;
 var r7b1 = b4 === a4;
-// operator !==
 var r8a1 = a1 !== b1;
 var r8a1 = a2 !== b2;
 var r8a1 = a3 !== b3;

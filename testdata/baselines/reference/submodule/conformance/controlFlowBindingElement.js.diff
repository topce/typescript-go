--- old.controlFlowBindingElement.js
+++ new.controlFlowBindingElement.js
@@= skipped -92, +92 lines =@@
 
 //// [controlFlowBindingElement.js]
 {
-    var data = { param: 'value' };
-    var _a = data.param, param = _a === void 0 ? (function () { throw new Error('param is not defined'); })() : _a;
-    console.log(param); // should not trigger 'Unreachable code detected.'    
+    const data = { param: 'value' };
+    const { param = (() => { throw new Error('param is not defined'); })(), } = data;
+    console.log(param);
 }
 {
-    var data = { param: 'value' };
-    var foo = "";
-    var _b = data.param, param = _b === void 0 ? (function () { throw new Error('param is not defined'); })() : _b;
-    foo; // should be string  
+    const data = { param: 'value' };
+    let foo = "";
+    const { param = (() => { throw new Error('param is not defined'); })(), } = data;
+    foo;
 }
 {
-    var data = { param: 'value' };
-    var foo_1 = "";
-    var _c = data.param, param = _c === void 0 ? (function () { foo_1 = undefined; })() : _c;
-    foo_1; // should be string | undefined
+    const data = { param: 'value' };
+    let foo = "";
+    const { param = (() => { foo = undefined; })(), } = data;
+    foo;
 }
 {
-    var data = { param: 'value' };
-    var foo = "";
-    var _d = data.param, param = _d === void 0 ? (function () { return "" + 1; })() : _d;
-    foo; // should be string
+    const data = { param: 'value' };
+    let foo = "";
+    const { param = (() => { return "" + 1; })(), } = data;
+    foo;
 }
 {
-    var foo_2;
-    var window_1 = {};
-    window_1.window = window_1;
-    var _e = window_1, _f = (function () { foo_2 = ""; return 'window'; })(), _g = (function () { return 'window'; })(), bar = _e[_f][_g];
-    foo_2; // should be string
+    let foo;
+    let window = {};
+    window.window = window;
+    const { [(() => { foo = ""; return 'window'; })()]: { [(() => { return 'window'; })()]: bar } } = window;
+    foo;
 }
 {
-    var foo_3;
-    var window_2 = {};
-    window_2.window = window_2;
-    var _h = window_2, _j = (function () { return 'window'; })(), _k = (function () { foo_3 = ""; return 'window'; })(), bar = _h[_j][_k];
-    foo_3; // should be string
+    let foo;
+    let window = {};
+    window.window = window;
+    const { [(() => { return 'window'; })()]: { [(() => { foo = ""; return 'window'; })()]: bar } } = window;
+    foo;
 }
 {
-    var foo_4;
-    var window_3 = {};
-    window_3.window = window_3;
-    var _l = window_3, _m = (function () { return 'window'; })(), _o = (function () { return 'window'; })(), _p = _l[_m][_o], bar = _p === void 0 ? (function () { foo_4 = ""; return window_3; })() : _p;
-    foo_4; // should be string | undefined
+    let foo;
+    let window = {};
+    window.window = window;
+    const { [(() => { return 'window'; })()]: { [(() => { return 'window'; })()]: bar = (() => { foo = ""; return window; })() } } = window;
+    foo;
 }

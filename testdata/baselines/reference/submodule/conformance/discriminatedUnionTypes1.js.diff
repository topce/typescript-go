--- old.discriminatedUnionTypes1.js
+++ new.discriminatedUnionTypes1.js
@@= skipped -186, +186 lines =@@
 }
 function f1(m) {
     if (m.kind === "A") {
-        m; // { kind: "A", x: string }
+        m;
     }
     else if (m.kind === "D") {
-        m; // { kind: "D" }
+        m;
     }
     else {
-        m; // { kind: "B" | "C", y: number }
+        m;
     }
 }
 function f2(m) {
     if (m.kind === "A") {
         return;
     }
-    m; // { kind: "B" | "C", y: number } | { kind: "D" }
+    m;
 }
 function f3(m) {
     if (m.kind === "X") {
-        m; // never
+        m;
     }
 }
 function f4(m, x) {
     if (m.kind == x) {
-        m; // { kind: "A", x: string } | { kind: "D" }
+        m;
     }
 }
 function f5(m) {
     switch (m.kind) {
         case "A":
-            m; // { kind: "A", x: string }
+            m;
             break;
         case "D":
-            m; // { kind: "D" }
+            m;
             break;
         default:
-            m; // { kind: "B" | "C", y: number }
+            m;
     }
 }
 function f6(m) {
     switch (m.kind) {
         case "A":
-            m; // { kind: "A", x: string }
+            m;
         case "D":
-            m; // { kind: "A", x: string } | { kind: "D" }
+            m;
             break;
         default:
-            m; // { kind: "B" | "C", y: number }
+            m;
     }
 }
 function f7(m) {
@@= skipped -54, +54 lines =@@
         case "B":
             return;
     }
-    m; // { kind: "B" | "C", y: number } | { kind: "D" }
+    m;
 }
 function f8(m) {
     switch (m.kind) {
@@= skipped -9, +9 lines =@@
         case "D":
             throw new Error();
     }
-    m; // { kind: "B" | "C", y: number }
+    m;
 }

--- old.bestCommonTypeOfTuple2.js
+++ new.bestCommonTypeOfTuple2.js
@@= skipped -24, +24 lines =@@
 
 
 //// [bestCommonTypeOfTuple2.js]
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
-var C = /** @class */ (function () {
-    function C() {
-    }
-    return C;
-}());
-var D = /** @class */ (function () {
-    function D() {
-    }
-    return D;
-}());
-var E = /** @class */ (function () {
-    function E() {
-    }
-    return E;
-}());
-var F = /** @class */ (function (_super) {
-    __extends(F, _super);
-    function F() {
-        return _super !== null && _super.apply(this, arguments) || this;
-    }
-    return F;
-}(C));
-var C1 = /** @class */ (function () {
-    function C1() {
-        this.i = "foo";
-    }
-    return C1;
-}());
-var D1 = /** @class */ (function (_super) {
-    __extends(D1, _super);
-    function D1() {
-        var _this = _super !== null && _super.apply(this, arguments) || this;
-        _this.i = "bar";
-        return _this;
-    }
-    return D1;
-}(C1));
+class C {
+    c;
+}
+class D {
+    d;
+}
+class E {
+    e;
+}
+class F extends C {
+    f;
+}
+class C1 {
+    i = "foo";
+    c;
+}
+class D1 extends C1 {
+    i = "bar";
+    d;
+}
 var t1;
 var t2;
 var t3;
 var t4;
 var t5;
-var e11 = t1[4]; // base
-var e21 = t2[4]; // {}
-var e31 = t3[4]; // C1
-var e41 = t4[2]; // base1
-var e51 = t5[2]; // {}
+var e11 = t1[4];
+var e21 = t2[4];
+var e31 = t3[4];
+var e41 = t4[2];
+var e51 = t5[2];

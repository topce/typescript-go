--- old.genericCallWithFunctionTypedArguments.js
+++ new.genericCallWithFunctionTypedArguments.js
@@= skipped -43, +43 lines =@@
 function foo(x) {
     return x(null);
 }
-var r = foo(function (x) { return ''; }); // {}
-var r2 = foo(function (x) { return ''; }); // string 
-var r3 = foo(function (x) { return ''; }); // {}
+var r = foo((x) => ''); // {}
+var r2 = foo((x) => ''); // string 
+var r3 = foo(x => ''); // {}
 function foo2(x, cb) {
     return cb(x);
 }
 var r4 = foo2(1, function (a) { return ''; }); // string, contextual signature instantiation is applied to generic functions
-var r5 = foo2(1, function (a) { return ''; }); // string
-var r6 = foo2('', function (a) { return 1; });
+var r5 = foo2(1, (a) => ''); // string
+var r6 = foo2('', (a) => 1);
 function foo3(x, cb, y) {
     return cb(x);
 }
-var r7 = foo3(1, function (a) { return ''; }, ''); // string
+var r7 = foo3(1, (a) => '', ''); // string
 var r8 = foo3(1, function (a) { return ''; }, 1); // error
-var r9 = foo3(1, function (a) { return ''; }, ''); // string
+var r9 = foo3(1, (a) => '', ''); // string
 function other(t, u) {
-    var r10 = foo2(1, function (x) { return ''; }); // error
-    var r10 = foo2(1, function (x) { return ''; }); // string
-    var r11 = foo3(1, function (x) { return ''; }, ''); // error
-    var r11b = foo3(1, function (x) { return ''; }, 1); // error
+    var r10 = foo2(1, (x) => ''); // error
+    var r10 = foo2(1, (x) => ''); // string
+    var r11 = foo3(1, (x) => '', ''); // error
+    var r11b = foo3(1, (x) => '', 1); // error
     var r12 = foo3(1, function (a) { return ''; }, 1); // error
 }

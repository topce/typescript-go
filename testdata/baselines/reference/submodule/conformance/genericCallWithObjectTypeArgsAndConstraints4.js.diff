--- old.genericCallWithObjectTypeArgsAndConstraints4.js
+++ new.genericCallWithObjectTypeArgsAndConstraints4.js
@@= skipped -35, +35 lines =@@
 
 
 //// [genericCallWithObjectTypeArgsAndConstraints4.js]
-// Generic call with constraints infering type parameter from object member properties
-var C = /** @class */ (function () {
-    function C() {
-    }
-    return C;
-}());
-var D = /** @class */ (function () {
-    function D() {
-    }
-    return D;
-}());
+class C {
+    x;
+}
+class D {
+    x;
+    y;
+}
 function foo(t, t2) {
-    return function (x) { return t2; };
+    return (x) => t2;
 }
 var c;
 var d;
 var r = foo(c, d);
-var r2 = foo(d, c); // error because C does not extend D
+var r2 = foo(d, c);
 var r3 = foo(c, { x: '', foo: c });
 var r4 = foo(null, null);
 var r5 = foo({}, null);
 var r6 = foo(null, {});
 var r7 = foo({}, {});
-var r8 = foo(function () { }, function () { });
-var r9 = foo(function () { }, function () { return 1; });
+var r8 = foo(() => { }, () => { });
+var r9 = foo(() => { }, () => 1);
 function other() {
     var r4 = foo(c, d);
-    var r5 = foo(c, d); // error
+    var r5 = foo(c, d);
 }

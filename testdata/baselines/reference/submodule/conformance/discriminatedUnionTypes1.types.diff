--- old.discriminatedUnionTypes1.types
+++ new.discriminatedUnionTypes1.types
@@= skipped -36, +36 lines =@@
 
     if (s.kind === "square") {
 >s.kind === "square" : boolean
->s.kind : "square" | "rectangle" | "circle"
+>s.kind : "circle" | "rectangle" | "square"
 >s : Shape
->kind : "square" | "rectangle" | "circle"
+>kind : "circle" | "rectangle" | "square"
 >"square" : "square"
 
         return s.size * s.size;
@@= skipped -16, +16 lines =@@
     }
     else if (s.kind === "circle") {
 >s.kind === "circle" : boolean
->s.kind : "rectangle" | "circle"
->s : Rectangle | Circle
->kind : "rectangle" | "circle"
+>s.kind : "circle" | "rectangle"
+>s : Circle | Rectangle
+>kind : "circle" | "rectangle"
 >"circle" : "circle"
 
         return Math.PI * s.radius * s.radius;
@@= skipped -45, +45 lines =@@
 >s : Shape
 
     switch (s.kind) {
->s.kind : "square" | "rectangle" | "circle"
+>s.kind : "circle" | "rectangle" | "square"
 >s : Shape
->kind : "square" | "rectangle" | "circle"
+>kind : "circle" | "rectangle" | "square"
 
         case "square": return s.size * s.size;
 >"square" : "square"
@@= skipped -57, +57 lines =@@
 >s : Shape
 
     switch (s.kind) {
->s.kind : "square" | "rectangle" | "circle"
+>s.kind : "circle" | "rectangle" | "square"
 >s : Shape
->kind : "square" | "rectangle" | "circle"
+>kind : "circle" | "rectangle" | "square"
 
         case "square": return s.size * s.size;
 >"square" : "square"
@@= skipped -50, +50 lines =@@
 >s : Shape
 
     switch (s.kind) {
->s.kind : "square" | "rectangle" | "circle"
+>s.kind : "circle" | "rectangle" | "square"
 >s : Shape
->kind : "square" | "rectangle" | "circle"
+>kind : "circle" | "rectangle" | "square"
 
         case "square": return s.size * s.size;
 >"square" : "square"

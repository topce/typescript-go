--- old.heterogeneousArrayLiterals.types
+++ new.heterogeneousArrayLiterals.types
@@= skipped -39, +39 lines =@@
 >1 : 1
 
 var g = [[1], ['']]; // {}[]
->g : (number[] | string[])[]
->[[1], ['']] : (number[] | string[])[]
+>g : (string[] | number[])[]
+>[[1], ['']] : (string[] | number[])[]
 >[1] : number[]
 >1 : 1
 >[''] : string[]
 >'' : ""
 
 var h = [{ foo: 1, bar: '' }, { foo: 2 }]; // {foo: number}[]
->h : ({ foo: number; bar: string; } | { foo: number; bar?: undefined; })[]
+>h : ({ foo: number; bar: string; } | { bar?: undefined; foo: number; })[]
 >[{ foo: 1, bar: '' }, { foo: 2 }] : ({ foo: number; bar: string; } | { foo: number; })[]
 >{ foo: 1, bar: '' } : { foo: number; bar: string; }
 >foo : number
@@= skipped -20, +20 lines =@@
 >2 : 2
 
 var i = [{ foo: 1, bar: '' }, { foo: '' }]; // {}[]
->i : ({ foo: number; bar: string; } | { foo: string; bar?: undefined; })[]
+>i : ({ foo: number; bar: string; } | { bar?: undefined; foo: string; })[]
 >[{ foo: 1, bar: '' }, { foo: '' }] : ({ foo: number; bar: string; } | { foo: string; })[]
 >{ foo: 1, bar: '' } : { foo: number; bar: string; }
 >foo : number
@@= skipped -80, +80 lines =@@
 >Derived : typeof Derived
 
     var h = [{ foo: base, basear: derived }, { foo: base }]; // {foo: Base}[]
->h : ({ foo: Base; basear: Derived; } | { foo: Base; basear?: undefined; })[]
+>h : ({ foo: Base; basear: Derived; } | { basear?: undefined; foo: Base; })[]
 >[{ foo: base, basear: derived }, { foo: base }] : ({ foo: Base; basear: Derived; } | { foo: Base; })[]
 >{ foo: base, basear: derived } : { foo: Base; basear: Derived; }
 >foo : Base
@@= skipped -12, +12 lines =@@
 >base : Base
 
     var i = [{ foo: base, basear: derived }, { foo: derived }]; // {foo: Derived}[]
->i : ({ foo: Base; basear: Derived; } | { foo: Derived; basear?: undefined; })[]
+>i : ({ foo: Base; basear: Derived; } | { basear?: undefined; foo: Derived; })[]
 >[{ foo: base, basear: derived }, { foo: derived }] : ({ foo: Base; basear: Derived; } | { foo: Derived; })[]
 >{ foo: base, basear: derived } : { foo: Base; basear: Derived; }
 >foo : Base
@@= skipped -202, +202 lines =@@
 >base : Base
 
     var h = [t, derived]; // Derived[]
->h : (Derived | T)[]
->[t, derived] : (Derived | T)[]
+>h : (T | Derived)[]
+>[t, derived] : (T | Derived)[]
 >t : T
 >derived : Derived
 
@@= skipped -140, +140 lines =@@
 >base : Base
 
     var h = [t, derived]; // Derived[]
->h : (Derived | T)[]
->[t, derived] : (Derived | T)[]
+>h : (T | Derived)[]
+>[t, derived] : (T | Derived)[]
 >t : T
 >derived : Derived
 
@@= skipped -12, +12 lines =@@
 >base : Base
 
     var j = [u, derived]; // Derived[]
->j : (Derived | U)[]
->[u, derived] : (Derived | U)[]
+>j : (U | Derived)[]
+>[u, derived] : (U | Derived)[]
 >u : U
 >derived : Derived
 

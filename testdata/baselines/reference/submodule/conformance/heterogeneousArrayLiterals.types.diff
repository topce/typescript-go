--- old.heterogeneousArrayLiterals.types
+++ new.heterogeneousArrayLiterals.types
@@= skipped -39, +39 lines =@@
 >1 : 1
 
 var g = [[1], ['']]; // {}[]
->g : (number[] | string[])[]
->[[1], ['']] : (number[] | string[])[]
+>g : (string[] | number[])[]
+>[[1], ['']] : (string[] | number[])[]
 >[1] : number[]
 >1 : 1
 >[''] : string[]
 >'' : ""
 
 var h = [{ foo: 1, bar: '' }, { foo: 2 }]; // {foo: number}[]
->h : ({ foo: number; bar: string; } | { foo: number; bar?: undefined; })[]
+>h : ({ foo: number; bar: string; } | { bar?: undefined; foo: number; })[]
 >[{ foo: 1, bar: '' }, { foo: 2 }] : ({ foo: number; bar: string; } | { foo: number; })[]
 >{ foo: 1, bar: '' } : { foo: number; bar: string; }
 >foo : number
@@= skipped -20, +20 lines =@@
 >2 : 2
 
 var i = [{ foo: 1, bar: '' }, { foo: '' }]; // {}[]
->i : ({ foo: number; bar: string; } | { foo: string; bar?: undefined; })[]
+>i : ({ foo: number; bar: string; } | { bar?: undefined; foo: string; })[]
 >[{ foo: 1, bar: '' }, { foo: '' }] : ({ foo: number; bar: string; } | { foo: string; })[]
 >{ foo: 1, bar: '' } : { foo: number; bar: string; }
 >foo : number
@@= skipped -12, +12 lines =@@
 >'' : ""
 
 var j = [() => 1, () => '']; // {}[]
->j : ((() => number) | (() => string))[]
->[() => 1, () => ''] : ((() => number) | (() => string))[]
+>j : (() => number | () => string)[]
+>[() => 1, () => ''] : (() => number | () => string)[]
 >() => 1 : () => number
 >1 : 1
 >() => '' : () => string
 >'' : ""
 
 var k = [() => 1, () => 1]; // { (): number }[]
->k : (() => number)[]
->[() => 1, () => 1] : (() => number)[]
+>k : () => number[]
+>[() => 1, () => 1] : () => number[]
 >() => 1 : () => number
 >1 : 1
 >() => 1 : () => number
 >1 : 1
 
 var l = [() => 1, () => null]; // { (): any }[]
->l : (() => any)[]
->[() => 1, () => null] : (() => any)[]
+>l : () => any[]
+>[() => 1, () => null] : () => any[]
 >() => 1 : () => number
 >1 : 1
 >() => null : () => any
 
 var m = [() => 1, () => '', () => null]; // { (): any }[]
->m : (() => any)[]
->[() => 1, () => '', () => null] : (() => any)[]
+>m : () => any[]
+>[() => 1, () => '', () => null] : () => any[]
 >() => 1 : () => number
 >1 : 1
 >() => '' : () => string
@@= skipped -32, +32 lines =@@
 >() => null : () => any
 
 var n = [[() => 1], [() => '']]; // {}[]
->n : ((() => number)[] | (() => string)[])[]
->[[() => 1], [() => '']] : ((() => number)[] | (() => string)[])[]
->[() => 1] : (() => number)[]
+>n : (() => number[] | () => string[])[]
+>[[() => 1], [() => '']] : (() => number[] | () => string[])[]
+>[() => 1] : () => number[]
 >() => 1 : () => number
 >1 : 1
->[() => ''] : (() => string)[]
+>[() => ''] : () => string[]
 >() => '' : () => string
 >'' : ""
 
@@= skipped -36, +36 lines =@@
 >Derived : typeof Derived
 
     var h = [{ foo: base, basear: derived }, { foo: base }]; // {foo: Base}[]
->h : ({ foo: Base; basear: Derived; } | { foo: Base; basear?: undefined; })[]
+>h : ({ foo: Base; basear: Derived; } | { basear?: undefined; foo: Base; })[]
 >[{ foo: base, basear: derived }, { foo: base }] : ({ foo: Base; basear: Derived; } | { foo: Base; })[]
 >{ foo: base, basear: derived } : { foo: Base; basear: Derived; }
 >foo : Base
@@= skipped -12, +12 lines =@@
 >base : Base
 
     var i = [{ foo: base, basear: derived }, { foo: derived }]; // {foo: Derived}[]
->i : ({ foo: Base; basear: Derived; } | { foo: Derived; basear?: undefined; })[]
+>i : ({ foo: Base; basear: Derived; } | { basear?: undefined; foo: Derived; })[]
 >[{ foo: base, basear: derived }, { foo: derived }] : ({ foo: Base; basear: Derived; } | { foo: Derived; })[]
 >{ foo: base, basear: derived } : { foo: Base; basear: Derived; }
 >foo : Base
@@= skipped -12, +12 lines =@@
 >derived : Derived
 
     var j = [() => base, () => derived]; // { {}: Base }
->j : (() => Base)[]
->[() => base, () => derived] : (() => Base)[]
+>j : () => Base[]
+>[() => base, () => derived] : () => Base[]
 >() => base : () => Base
 >base : Base
 >() => derived : () => Derived
 >derived : Derived
 
     var k = [() => base, () => 1]; // {}[]~
->k : ((() => Base) | (() => number))[]
->[() => base, () => 1] : ((() => Base) | (() => number))[]
+>k : (() => Base | () => number)[]
+>[() => base, () => 1] : (() => Base | () => number)[]
 >() => base : () => Base
 >base : Base
 >() => 1 : () => number
 >1 : 1
 
     var l = [() => base, () => null]; // { (): any }[]
->l : (() => any)[]
->[() => base, () => null] : (() => any)[]
+>l : () => any[]
+>[() => base, () => null] : () => any[]
 >() => base : () => Base
 >base : Base
 >() => null : () => any
 
     var m = [() => base, () => derived, () => null]; // { (): any }[]
->m : (() => any)[]
->[() => base, () => derived, () => null] : (() => any)[]
+>m : () => any[]
+>[() => base, () => derived, () => null] : () => any[]
 >() => base : () => Base
 >base : Base
 >() => derived : () => Derived
@@= skipped -32, +32 lines =@@
 >() => null : () => any
 
     var n = [[() => base], [() => derived]]; // { (): Base }[]
->n : (() => Base)[][]
->[[() => base], [() => derived]] : (() => Base)[][]
->[() => base] : (() => Base)[]
+>n : () => Base[][]
+>[[() => base], [() => derived]] : () => Base[][]
+>[() => base] : () => Base[]
 >() => base : () => Base
 >base : Base
->[() => derived] : (() => Derived)[]
+>[() => derived] : () => Derived[]
 >() => derived : () => Derived
 >derived : Derived
 
@@= skipped -23, +23 lines =@@
 >base : Base
 
     var q = [[() => derived2], [() => derived]]; // {}[]
->q : ((() => Derived2)[] | (() => Derived)[])[]
->[[() => derived2], [() => derived]] : ((() => Derived2)[] | (() => Derived)[])[]
->[() => derived2] : (() => Derived2)[]
+>q : (() => Derived2[] | () => Derived[])[]
+>[[() => derived2], [() => derived]] : (() => Derived2[] | () => Derived[])[]
+>[() => derived2] : () => Derived2[]
 >() => derived2 : () => Derived2
 >derived2 : Derived2
->[() => derived] : (() => Derived)[]
+>[() => derived] : () => Derived[]
 >() => derived : () => Derived
 >derived : Derived
 }
@@= skipped -29, +29 lines =@@
 >[] : undefined[]
 
     var d: { (): Base }[] = [() => derived, () => derived2];
->d : (() => Base)[]
->[() => derived, () => derived2] : ((() => Derived) | (() => Derived2))[]
+>d : () => Base[]
+>[() => derived, () => derived2] : (() => Derived | () => Derived2)[]
 >() => derived : () => Derived
 >derived : Derived
 >() => derived2 : () => Derived2
@@= skipped -37, +37 lines =@@
 >1 : 1
 
     var e = [() => t, () => u]; // {}[]
->e : ((() => T) | (() => U))[]
->[() => t, () => u] : ((() => T) | (() => U))[]
+>e : (() => T | () => U)[]
+>[() => t, () => u] : (() => T | () => U)[]
 >() => t : () => T
 >t : T
 >() => u : () => U
 >u : U
 
     var f = [() => t, () => u, () => null]; // { (): any }[]
->f : (() => any)[]
->[() => t, () => u, () => null] : (() => any)[]
+>f : () => any[]
+>[() => t, () => u, () => null] : () => any[]
 >() => t : () => T
 >t : T
 >() => u : () => U
@@= skipped -46, +46 lines =@@
 >1 : 1
 
     var e = [() => t, () => u]; // {}[]
->e : ((() => T) | (() => U))[]
->[() => t, () => u] : ((() => T) | (() => U))[]
+>e : (() => T | () => U)[]
+>[() => t, () => u] : (() => T | () => U)[]
 >() => t : () => T
 >t : T
 >() => u : () => U
 >u : U
 
     var f = [() => t, () => u, () => null]; // { (): any }[]
->f : (() => any)[]
->[() => t, () => u, () => null] : (() => any)[]
+>f : () => any[]
+>[() => t, () => u, () => null] : () => any[]
 >() => t : () => T
 >t : T
 >() => u : () => U
@@= skipped -23, +23 lines =@@
 >base : Base
 
     var h = [t, derived]; // Derived[]
->h : (Derived | T)[]
->[t, derived] : (Derived | T)[]
+>h : (T | Derived)[]
+>[t, derived] : (T | Derived)[]
 >t : T
 >derived : Derived
 
@@= skipped -47, +47 lines =@@
 >1 : 1
 
     var e = [() => t, () => u]; // {}[]
->e : ((() => T) | (() => U))[]
->[() => t, () => u] : ((() => T) | (() => U))[]
+>e : (() => T | () => U)[]
+>[() => t, () => u] : (() => T | () => U)[]
 >() => t : () => T
 >t : T
 >() => u : () => U
 >u : U
 
     var f = [() => t, () => u, () => null]; // { (): any }[]
->f : (() => any)[]
->[() => t, () => u, () => null] : (() => any)[]
+>f : () => any[]
+>[() => t, () => u, () => null] : () => any[]
 >() => t : () => T
 >t : T
 >() => u : () => U
@@= skipped -70, +70 lines =@@
 >1 : 1
 
     var e = [() => t, () => u]; // {}[]
->e : ((() => T) | (() => U))[]
->[() => t, () => u] : ((() => T) | (() => U))[]
+>e : (() => T | () => U)[]
+>[() => t, () => u] : (() => T | () => U)[]
 >() => t : () => T
 >t : T
 >() => u : () => U
 >u : U
 
     var f = [() => t, () => u, () => null]; // { (): any }[]
->f : (() => any)[]
->[() => t, () => u, () => null] : (() => any)[]
+>f : () => any[]
+>[() => t, () => u, () => null] : () => any[]
 >() => t : () => T
 >t : T
 >() => u : () => U
@@= skipped -23, +23 lines =@@
 >base : Base
 
     var h = [t, derived]; // Derived[]
->h : (Derived | T)[]
->[t, derived] : (Derived | T)[]
+>h : (T | Derived)[]
+>[t, derived] : (T | Derived)[]
 >t : T
 >derived : Derived
 
@@= skipped -12, +12 lines =@@
 >base : Base
 
     var j = [u, derived]; // Derived[]
->j : (Derived | U)[]
->[u, derived] : (Derived | U)[]
+>j : (U | Derived)[]
+>[u, derived] : (U | Derived)[]
 >u : U
 >derived : Derived
 

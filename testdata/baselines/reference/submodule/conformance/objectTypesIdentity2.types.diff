--- old.objectTypesIdentity2.types
+++ new.objectTypesIdentity2.types
@@= skipped -81, +81 lines =@@
 >x : any
 
 function foo7(x: A);
->foo7 : { (x: A): any; (x: typeof a): any; }
+>foo7 : { (x: A): any; (x: { foo: RegExp; }): any; }
 >x : A
 
 function foo7(x: typeof a); // ok
->foo7 : { (x: A): any; (x: typeof a): any; }
+>foo7 : { (x: A): any; (x: { foo: RegExp; }): any; }
 >x : { foo: RegExp; }
 >a : { foo: RegExp; }
 
 function foo7(x: any) { }
->foo7 : { (x: A): any; (x: typeof a): any; }
+>foo7 : { (x: A): any; (x: { foo: RegExp; }): any; }
 >x : any
 
 function foo8(x: B);
@@= skipped -37, +37 lines =@@
 >x : any
 
 function foo10(x: B);
->foo10 : { (x: B): any; (x: typeof a): any; }
+>foo10 : { (x: B): any; (x: { foo: RegExp; }): any; }
 >x : B
 
 function foo10(x: typeof a); // ok
->foo10 : { (x: B): any; (x: typeof a): any; }
+>foo10 : { (x: B): any; (x: { foo: RegExp; }): any; }
 >x : { foo: RegExp; }
 >a : { foo: RegExp; }
 
 function foo10(x: any) { }
->foo10 : { (x: B): any; (x: typeof a): any; }
+>foo10 : { (x: B): any; (x: { foo: RegExp; }): any; }
 >x : any
 
 function foo11(x: B);
->foo11 : { (x: B): any; (x: typeof b): any; }
+>foo11 : { (x: B): any; (x: { foo: E; }): any; }
 >x : B
 
 function foo11(x: typeof b); // ok
->foo11 : { (x: B): any; (x: typeof b): any; }
+>foo11 : { (x: B): any; (x: { foo: E; }): any; }
 >x : { foo: E; }
 >b : { foo: E; }
 
 function foo11(x: any) { }
->foo11 : { (x: B): any; (x: typeof b): any; }
+>foo11 : { (x: B): any; (x: { foo: E; }): any; }
 >x : any
 
 function foo12(x: I);
@@= skipped -38, +38 lines =@@
 >x : any
 
 function foo13(x: I);
->foo13 : { (x: I): any; (x: typeof a): any; }
+>foo13 : { (x: I): any; (x: { foo: RegExp; }): any; }
 >x : I
 
 function foo13(x: typeof a); // ok
->foo13 : { (x: I): any; (x: typeof a): any; }
+>foo13 : { (x: I): any; (x: { foo: RegExp; }): any; }
 >x : { foo: RegExp; }
 >a : { foo: RegExp; }
 
 function foo13(x: any) { }
->foo13 : { (x: I): any; (x: typeof a): any; }
+>foo13 : { (x: I): any; (x: { foo: RegExp; }): any; }
 >x : any
 
 function foo14(x: I);
->foo14 : { (x: I): any; (x: typeof b): any; }
+>foo14 : { (x: I): any; (x: { foo: E; }): any; }
 >x : I
 
 function foo14(x: typeof b); // ok
->foo14 : { (x: I): any; (x: typeof b): any; }
+>foo14 : { (x: I): any; (x: { foo: E; }): any; }
 >x : { foo: E; }
 >b : { foo: E; }
 
 function foo14(x: any) { }
->foo14 : { (x: I): any; (x: typeof b): any; }
+>foo14 : { (x: I): any; (x: { foo: E; }): any; }
 >x : any
 

--- old.importCallExpressionAsyncES6System.js
+++ new.importCallExpressionAsyncES6System.js
@@= skipped -30, +30 lines =@@
 
 
 //// [test.js]
-System.register([], function (exports_1, context_1) {
-    "use strict";
-    var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
-        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
-        return new (P || (P = Promise))(function (resolve, reject) {
-            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
-            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
-            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
-            step((generator = generator.apply(thisArg, _arguments || [])).next());
-        });
-    };
-    var cl1, obj, cl2, l;
-    var __moduleName = context_1 && context_1.id;
-    function fn() {
-        return __awaiter(this, void 0, void 0, function* () {
-            const req = yield context_1.import('./test'); // ONE
-        });
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.l = exports.cl2 = exports.obj = exports.cl1 = void 0;
+exports.fn = fn;
+async function fn() {
+    const req = await Promise.resolve().then(() => require('./test'));
+}
+class cl1 {
+    async m() {
+        const req = await Promise.resolve().then(() => require('./test'));
     }
-    exports_1("fn", fn);
-    return {
-        setters: [],
-        execute: function () {
-            cl1 = class cl1 {
-                m() {
-                    return __awaiter(this, void 0, void 0, function* () {
-                        const req = yield context_1.import('./test'); // TWO
-                    });
-                }
-            };
-            exports_1("cl1", cl1);
-            exports_1("obj", obj = {
-                m: () => __awaiter(void 0, void 0, void 0, function* () {
-                    const req = yield context_1.import('./test'); // THREE
-                })
-            });
-            cl2 = class cl2 {
-                constructor() {
-                    this.p = {
-                        m: () => __awaiter(this, void 0, void 0, function* () {
-                            const req = yield context_1.import('./test'); // FOUR
-                        })
-                    };
-                }
-            };
-            exports_1("cl2", cl2);
-            exports_1("l", l = () => __awaiter(void 0, void 0, void 0, function* () {
-                const req = yield context_1.import('./test'); // FIVE
-            }));
+}
+exports.cl1 = cl1;
+exports.obj = {
+    m: async () => {
+        const req = await Promise.resolve().then(() => require('./test'));
+    }
+};
+class cl2 {
+    p = {
+        m: async () => {
+            const req = await Promise.resolve().then(() => require('./test'));
         }
     };
-});
+}
+exports.cl2 = cl2;
+const l = async () => {
+    const req = await Promise.resolve().then(() => require('./test'));
+};
+exports.l = l;

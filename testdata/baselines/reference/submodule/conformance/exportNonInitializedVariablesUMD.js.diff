--- old.exportNonInitializedVariablesUMD.js
+++ new.exportNonInitializedVariablesUMD.js
@@= skipped -35, +35 lines =@@
 
 
 //// [exportNonInitializedVariablesUMD.js]
-(function (factory) {
-    if (typeof module === "object" && typeof module.exports === "object") {
-        var v = factory(require, exports);
-        if (v !== undefined) module.exports = v;
-    }
-    else if (typeof define === "function" && define.amd) {
-        define(["require", "exports"], factory);
-    }
-})(function (require, exports) {
-    "use strict";
-    Object.defineProperty(exports, "__esModule", { value: true });
-    exports.h1 = exports.g1 = exports.f1 = exports.e1 = exports.d1 = exports.c1 = exports.b1 = exports.a1 = exports.f = exports.e = exports.d = exports.c = exports.b = exports.a = void 0;
-    var ;
-    let;
-    var ;
-    var A = /** @class */ (function () {
-        function A() {
-        }
-        return A;
-    }());
-    var B;
-    (function (B) {
-        B.a = 1, B.c = 2;
-    })(B || (B = {}));
-    var C;
-    (function (C) {
-        C.a = 1, C.c = 2;
-    })(C || (C = {}));
-    // Shouldn't be filtered
-    exports.a1 = 1;
-    exports.b1 = 1;
-    exports.c1 = 'a';
-    exports.d1 = 1;
-    var D = /** @class */ (function () {
-        function D() {
-        }
-        return D;
-    }());
-    exports.e1 = new D;
-    exports.f1 = new D;
-    exports.g1 = new D;
-    exports.h1 = new D;
-});
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.h1 = exports.g1 = exports.f1 = exports.e1 = exports.d1 = exports.c1 = exports.b1 = exports.a1 = exports.f = exports.e = exports.d = exports.c = exports.b = exports.a = void 0;
+var ;
+let;
+const ;
+class A {
+}
+var B;
+(function (B) {
+    B.a = 1, B.c = 2;
+})(B || (B = {}));
+var C;
+(function (C) {
+    C.a = 1, C.c = 2;
+})(C || (C = {}));
+// Shouldn't be filtered
+exports.a1 = 1;
+exports.b1 = 1;
+exports.c1 = 'a';
+exports.d1 = 1;
+class D {
+}
+exports.e1 = new D;
+exports.f1 = new D;
+exports.g1 = new D;
+exports.h1 = new D;

--- old.typeInferenceWithTupleType.js
+++ new.typeInferenceWithTupleType.js
@@= skipped -39, +39 lines =@@
     return [x, y];
 }
 var combineResult = combine("string", 10);
-var combineEle1 = combineResult[0]; // string
-var combineEle2 = combineResult[1]; // number
+var combineEle1 = combineResult[0];
+var combineEle2 = combineResult[1];
 function zip(array1, array2) {
     if (array1.length != array2.length) {
         return [[undefined, undefined]];
@@= skipped -14, +14 lines =@@
     return zipResult;
 }
 var zipResult = zip(["foo", "bar"], [5, 6]);
-var zipResultEle = zipResult[0]; // [string, number]
-var zipResultEleEle = zipResult[0][0]; // string
-var expected;
+var zipResultEle = zipResult[0];
+var zipResultEleEle = zipResult[0][0];
+let expected;
 expected = f1(undefined);
 expected = f2(undefined);

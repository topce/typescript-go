--- old.weakTypesAndLiterals01.js
+++ new.weakTypesAndLiterals01.js
@@= skipped -49, +49 lines =@@
 }
 
 
-
-
-//// [weakTypesAndLiterals01.d.ts]
-type WeakTypes = {
-    optional?: true;
-} | {
-    toLowerCase?(): string;
-} | {
-    toUpperCase?(): string;
-    otherOptionalProp?: number;
+//// [weakTypesAndLiterals01.js]
+const f = (arg) => {
+    if (arg === "A") {
+        return arg;
+    }
+    else {
+        return arg;
+    }
 };
-type LiteralsOrWeakTypes = "A" | "B" | WeakTypes;
-declare let aOrB: "A" | "B";
-declare const f: (arg: LiteralsOrWeakTypes) => WeakTypes | "A" | "B";
-declare const g: (arg: WeakTypes) => WeakTypes;
-declare const h: (arg: LiteralsOrWeakTypes) => LiteralsOrWeakTypes;
-declare const i: (arg: WeakTypes) => WeakTypes;
-
-
-!!!! File weakTypesAndLiterals01.d.ts differs from original emit in noCheck emit
-//// [weakTypesAndLiterals01.d.ts]
-===================================================================
---- Expected	The full check baseline
-+++ Actual	with noCheck set
-@@= skipped --43, +-43 lines =@@
-     otherOptionalProp?: number;
- };
- type LiteralsOrWeakTypes = "A" | "B" | WeakTypes;
- declare let aOrB: "A" | "B";
--declare const f: (arg: LiteralsOrWeakTypes) => WeakTypes | "A" | "B";
-+declare const f: (arg: LiteralsOrWeakTypes) => "A" | "B" | WeakTypes;
- declare const g: (arg: WeakTypes) => WeakTypes;
- declare const h: (arg: LiteralsOrWeakTypes) => LiteralsOrWeakTypes;
- declare const i: (arg: WeakTypes) => WeakTypes;
+const g = (arg) => {
+    if (arg === "A") {
+        return arg;
+    }
+    else {
+        return arg;
+    }
+};
+const h = (arg) => {
+    if (arg === aOrB) {
+        return arg;
+    }
+    else {
+        return arg;
+    }
+};
+const i = (arg) => {
+    if (arg === aOrB) {
+        return arg;
+    }
+    else {
+        return arg;
+    }
+};

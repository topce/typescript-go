--- old.incrementOperatorWithUnsupportedBooleanType.js
+++ new.incrementOperatorWithUnsupportedBooleanType.js
@@= skipped -59, +59 lines =@@
 // ++ operator on boolean type
 var BOOLEAN;
 function foo() { return true; }
-var A = /** @class */ (function () {
-    function A() {
-    }
-    A.foo = function () { return true; };
-    return A;
-}());
+class A {
+    a;
+    static foo() { return true; }
+}
 var M;
 (function (M) {
 })(M || (M = {}));
@@= skipped -16, +14 lines =@@
 // boolean type literal
 var ResultIsNumber3 = ++true;
 var ResultIsNumber4 = ++{ x: true, y: false };
-var ResultIsNumber5 = ++{ x: true, y: function (n) { return n; } };
+var ResultIsNumber5 = ++{ x: true, y: (n) => { return n; } };
 var ResultIsNumber6 = true++;
 var ResultIsNumber7 = { x: true, y: false }++;
-var ResultIsNumber8 = { x: true, y: function (n) { return n; } }++;
+var ResultIsNumber8 = { x: true, y: (n) => { return n; } }++;
 // boolean type expressions
 var ResultIsNumber9 = ++objA.a;
 var ResultIsNumber10 = ++M.n;

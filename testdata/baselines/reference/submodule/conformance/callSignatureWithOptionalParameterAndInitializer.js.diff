--- old.callSignatureWithOptionalParameterAndInitializer.js
+++ new.callSignatureWithOptionalParameterAndInitializer.js
@@= skipped -58, +58 lines =@@
 
 //// [callSignatureWithOptionalParameterAndInitializer.js]
 // Optional parameters cannot also have initializer expressions, these are all errors
-function foo(x) {
-    if (x === void 0) { x = 1; }
-}
-var f = function foo(x) {
-    if (x === void 0) { x = 1; }
-};
-var f2 = function (x, y) {
-    if (y === void 0) { y = 1; }
-};
+function foo(x = 1) { }
+var f = function foo(x = 1) { };
+var f2 = (x, y = 1) => { };
 foo(1);
 foo();
 f(1);
 f();
 f2(1);
 f2(1, 2);
-var C = /** @class */ (function () {
-    function C() {
-    }
-    C.prototype.foo = function (x) {
-        if (x === void 0) { x = 1; }
-    };
-    return C;
-}());
+class C {
+    foo(x = 1) { }
+}
 var c;
 c.foo();
 c.foo(1);
@@= skipped -37, +26 lines =@@
 a.foo();
 a.foo(1);
 var b = {
-    foo: function (x) {
-        if (x === void 0) { x = 1; }
-    },
-    a: function foo(x, y) {
-        if (y === void 0) { y = ''; }
-    },
-    b: function (x) {
-        if (x === void 0) { x = ''; }
-    }
+    foo(x = 1) { },
+    a: function foo(x, y = '') { },
+    b: (x = '') => { }
 };
 b.foo();
 b.foo(1);

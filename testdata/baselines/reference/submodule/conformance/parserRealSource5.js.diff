--- old.parserRealSource5.js
+++ new.parserRealSource5.js
@@= skipped -67, +67 lines =@@
     }
 }
 
+//// [typescript.js]
 //// [parserRealSource5.js]
-// Copyright (c) Microsoft. All rights reserved. Licensed under the Apache License, Version 2.0. 
-// See LICENSE.txt in the project root for complete license information.
-///<reference path='typescript.ts' />
 var TypeScript;
 (function (TypeScript) {
-    // TODO: refactor indent logic for use in emit
-    var PrintContext = /** @class */ (function () {
-        function PrintContext(outfile, parser) {
+    class PrintContext {
+        outfile;
+        parser;
+        builder = "";
+        indent1 = "  ";
+        indentStrings = [];
+        indentAmt = 0;
+        constructor(outfile, parser) {
             this.outfile = outfile;
             this.parser = parser;
-            this.builder = "";
-            this.indent1 = "  ";
-            this.indentStrings = [];
-            this.indentAmt = 0;
         }
-        PrintContext.prototype.increaseIndent = function () {
+        increaseIndent() {
             this.indentAmt++;
-        };
-        PrintContext.prototype.decreaseIndent = function () {
+        }
+        decreaseIndent() {
             this.indentAmt--;
-        };
-        PrintContext.prototype.startLine = function () {
+        }
+        startLine() {
             if (this.builder.length > 0) {
                 CompilerDiagnostics.Alert(this.builder);
             }
@@= skipped -35, +34 lines =@@
                 this.indentStrings[this.indentAmt] = indentString;
             }
             this.builder += indentString;
-        };
-        PrintContext.prototype.write = function (s) {
+        }
+        write(s) {
             this.builder += s;
-        };
-        PrintContext.prototype.writeLine = function (s) {
+        }
+        writeLine(s) {
             this.builder += s;
             this.outfile.WriteLine(this.builder);
             this.builder = "";
-        };
-        return PrintContext;
-    }());
+        }
+    }
     TypeScript.PrintContext = PrintContext;
     function prePrintAST(ast, parent, walker) {
         var pc = walker.state;

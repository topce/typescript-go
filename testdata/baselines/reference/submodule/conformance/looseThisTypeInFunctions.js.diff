--- old.looseThisTypeInFunctions.js
+++ new.looseThisTypeInFunctions.js
@@= skipped -50, +50 lines =@@
 
 
 //// [looseThisTypeInFunctions.js]
-var C = /** @class */ (function () {
-    function C() {
+class C {
+    n;
+    explicitThis(m) {
+        return this.n + m;
     }
-    C.prototype.explicitThis = function (m) {
+    implicitThis(m) {
         return this.n + m;
-    };
-    C.prototype.implicitThis = function (m) {
-        return this.n + m;
-    };
-    C.prototype.explicitVoid = function (m) {
+    }
+    explicitVoid(m) {
         return m + 1;
-    };
-    return C;
-}());
-var c = new C();
+    }
+}
+let c = new C();
 c.explicitVoid = c.explicitThis; // error, 'void' is missing everything
-var o = {
+let o = {
     n: 101,
     explicitThis: function (m) {
         return m + this.n.length; // error, 'length' does not exist on 'number'
     },
-    implicitThis: function (m) { return m; }
+    implicitThis(m) { return m; }
 };
-var i = o;
-var o2 = {
+let i = o;
+let o2 = {
     n: 1001,
     explicitThis: function (m) {
         return m + this.n.length; // error, this.n: number, no member 'length'
     },
 };
-var x = i.explicitThis;
-var n = x(12); // callee:void doesn't match this:I
-var u;
-var y = u.implicitNoThis;
+let x = i.explicitThis;
+let n = x(12); // callee:void doesn't match this:I
+let u;
+let y = u.implicitNoThis;
 n = y(12); // ok, callee:void matches this:any
 c.explicitVoid = c.implicitThis; // ok, implicitThis(this:any)
 o.implicitThis = c.implicitThis; // ok, implicitThis(this:any)

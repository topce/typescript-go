--- old.genericCallWithOverloadedConstructorTypedArguments.js
+++ new.genericCallWithOverloadedConstructorTypedArguments.js
@@= skipped -50, +50 lines =@@
 }
 
 //// [genericCallWithOverloadedConstructorTypedArguments.js]
-// Function typed arguments with multiple signatures must be passed an implementation that matches all of them
-// Inferences are made quadratic-pairwise to and from these overload sets
 var NonGenericParameter;
 (function (NonGenericParameter) {
     var a;
@@= skipped -18, +16 lines =@@
         return cb;
     }
     var a;
-    var r5 = foo5(a); // new{} => string; new(x:number) => {}
+    var r5 = foo5(a);
     var b;
-    var r7 = foo5(b); // new any => string; new(x:number) => any
+    var r7 = foo5(b);
     function foo6(cb) {
         return cb;
     }
-    var r8 = foo6(a); // error
-    var r9 = foo6(b); // new any => string; new(x:any, y?:any) => string
+    var r8 = foo6(a);
+    var r9 = foo6(b);
     function foo7(x, cb) {
         return cb;
     }
-    var r13 = foo7(1, b); // new any => string; new(x:any, y?:any) => string
+    var r13 = foo7(1, b);
     var c;
     var c2;
-    var r14 = foo7(1, c); // new any => string; new(x:any, y?:any) => string
-    var r15 = foo7(1, c2); // new any => string; new(x:any, y?:any) => string
+    var r14 = foo7(1, c);
+    var r15 = foo7(1, c2);
 })(GenericParameter || (GenericParameter = {}));

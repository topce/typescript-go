--- old.assignmentGenericLookupTypeNarrowing.types
+++ new.assignmentGenericLookupTypeNarrowing.types
@@= skipped -12, +12 lines =@@
 >"hello" : "hello"
 
 declare function foo<T>(x: T): null | T;
->foo : <T>(x: T) => null | T
+>foo : <T>(x: T) => T
 >x : T
 
 function bar<K extends "foo">(key: K) {
@@= skipped -10, +10 lines =@@
   const element = foo(mappedObject[key]);
 >element : { foo: { x: string; }; }[K]
 >foo(mappedObject[key]) : { foo: { x: string; }; }[K]
->foo : <T>(x: T) => null | T
+>foo : <T>(x: T) => T
 >mappedObject[key] : { foo: { x: string; }; }[K]
 >mappedObject : { foo: { x: string; }; }
 >key : K

--- old.umd-augmentation-2.types
+++ new.umd-augmentation-2.types
@@= skipped -3, +3 lines =@@
 /// <reference path="node_modules/math2d/index.d.ts" />
 /// <reference path="math2d-augment.d.ts" />
 let v = new Math2d.Vector(3, 2);
->v : Math2d.Vector
->new Math2d.Vector(3, 2) : Math2d.Vector
->Math2d.Vector : typeof Math2d.Vector
->Math2d : typeof Math2d
->Vector : typeof Math2d.Vector
+>v : Vector
+>new Math2d.Vector(3, 2) : Vector
+>Math2d.Vector : typeof Vector
+>Math2d : typeof import("node_modules/math2d/index")
+>Vector : typeof Vector
 >3 : 3
 >2 : 2
 
 let magnitude = Math2d.getLength(v);
 >magnitude : number
 >Math2d.getLength(v) : number
->Math2d.getLength : (p: Math2d.Vector) => number
->Math2d : typeof Math2d
->getLength : (p: Math2d.Vector) => number
->v : Math2d.Vector
+>Math2d.getLength : (p: Vector) => number
+>Math2d : typeof import("node_modules/math2d/index")
+>getLength : (p: Vector) => number
+>v : Vector
 
 let p: Math2d.Point = v.translate(5, 5);
->p : Math2d.Point
+>p : Point
 >Math2d : any
->v.translate(5, 5) : Math2d.Vector
->v.translate : (dx: number, dy: number) => Math2d.Vector
->v : Math2d.Vector
->translate : (dx: number, dy: number) => Math2d.Vector
+>v.translate(5, 5) : Vector
+>v.translate : (dx: number, dy: number) => Vector
+>v : Vector
+>translate : (dx: number, dy: number) => Vector
 >5 : 5
 >5 : 5
 
 p = v.reverse();
->p = v.reverse() : Math2d.Point
->p : Math2d.Point
->v.reverse() : Math2d.Point
->v.reverse : () => Math2d.Point
->v : Math2d.Vector
->reverse : () => Math2d.Point
+>p = v.reverse() : Point
+>p : Point
+>v.reverse() : Point
+>v.reverse : () => Point
+>v : Vector
+>reverse : () => Point
 
 var t = p.x;
 >t : number
 >p.x : number
->p : Math2d.Point
+>p : Point
 >x : number
 
 === node_modules/math2d/index.d.ts ===
@@= skipped -77, +77 lines =@@
 
 === math2d-augment.d.ts ===
 import * as Math2d from 'math2d';
->Math2d : typeof Math2d
+>Math2d : typeof import("node_modules/math2d/index")
 
 // Augment the module
 declare module 'math2d' {
->'math2d' : typeof Math2d
+>'math2d' : typeof import("node_modules/math2d/index")
 
 	// Add a method to the class
 	interface Vector {
 		reverse(): Math2d.Point;
->reverse : () => Math2d.Point
+>reverse : () => Point
 >Math2d : any
 	}
 }

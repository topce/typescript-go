--- old.moduleWithStatementsOfEveryKind.js
+++ new.moduleWithStatementsOfEveryKind.js
@@= skipped -60, +60 lines =@@
 
 
 //// [moduleWithStatementsOfEveryKind.js]
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
 var A;
 (function (A_1) {
-    var A = /** @class */ (function () {
-        function A() {
-        }
-        return A;
-    }());
-    var AA = /** @class */ (function () {
-        function AA() {
-        }
-        return AA;
-    }());
-    var B = /** @class */ (function (_super) {
-        __extends(B, _super);
-        function B() {
-            return _super !== null && _super.apply(this, arguments) || this;
-        }
-        return B;
-    }(AA));
-    var BB = /** @class */ (function (_super) {
-        __extends(BB, _super);
-        function BB() {
-            return _super !== null && _super.apply(this, arguments) || this;
-        }
-        return BB;
-    }(A));
-    var Module;
+    class A {
+        s;
+    }
+    class AA {
+        s;
+    }
+    class B extends AA {
+        id;
+    }
+    class BB extends A {
+        id;
+    }
+    let Module;
     (function (Module) {
-        var A = /** @class */ (function () {
-            function A() {
-            }
-            return A;
-        }());
+        class A {
+            s;
+        }
     })(Module || (Module = {}));
-    var Color;
+    let Color;
     (function (Color) {
         Color[Color["Blue"] = 0] = "Blue";
         Color[Color["Red"] = 1] = "Red";
@@= skipped -59, +30 lines =@@
         return 2;
     }
     var array = null;
-    var fn = function (s) {
+    var fn = (s) => {
         return 'hello ' + s;
     };
     var ol = { s: 'hello', id: 2, isvalid: true };
 })(A || (A = {}));
 var Y;
 (function (Y) {
-    var A = /** @class */ (function () {
-        function A() {
-        }
-        return A;
-    }());
+    class A {
+        s;
+    }
     Y.A = A;
-    var AA = /** @class */ (function () {
-        function AA() {
-        }
-        return AA;
-    }());
+    class AA {
+        s;
+    }
     Y.AA = AA;
-    var B = /** @class */ (function (_super) {
-        __extends(B, _super);
-        function B() {
-            return _super !== null && _super.apply(this, arguments) || this;
-        }
-        return B;
-    }(AA));
+    class B extends AA {
+        id;
+    }
     Y.B = B;
-    var BB = /** @class */ (function (_super) {
-        __extends(BB, _super);
-        function BB() {
-            return _super !== null && _super.apply(this, arguments) || this;
-        }
-        return BB;
-    }(A));
+    class BB extends A {
+        id;
+    }
     Y.BB = BB;
-    var Module;
+    let Module;
     (function (Module) {
-        var A = /** @class */ (function () {
-            function A() {
-            }
-            return A;
-        }());
+        class A {
+            s;
+        }
     })(Module = Y.Module || (Y.Module = {}));
-    var Color;
+    let Color;
     (function (Color) {
         Color[Color["Blue"] = 0] = "Blue";
         Color[Color["Red"] = 1] = "Red";
@@= skipped -54, +40 lines =@@
     }
     Y.F = F;
     Y.array = null;
-    Y.fn = function (s) {
+    Y.fn = (s) => {
         return 'hello ' + s;
     };
     Y.ol = { s: 'hello', id: 2, isvalid: true };

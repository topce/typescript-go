--- old.genericCallWithFunctionTypedArguments.types
+++ new.genericCallWithFunctionTypedArguments.types
@@= skipped -127, +127 lines =@@
     var r10 = foo2(1, (x: T) => ''); // error
 >r10 : string
 >foo2(1, (x: T) => '') : string
->foo2 : <T_1, U_1>(x: T_1, cb: (a: T_1) => U_1) => U_1
+>foo2 : <T, U>(x: T, cb: (a: T) => U) => U
 >1 : 1
 >(x: T) => '' : (x: T) => string
 >x : T
@@= skipped -9, +9 lines =@@
     var r10 = foo2(1, (x) => ''); // string
 >r10 : string
 >foo2(1, (x) => '') : string
->foo2 : <T_1, U_1>(x: T_1, cb: (a: T_1) => U_1) => U_1
+>foo2 : <T, U>(x: T, cb: (a: T) => U) => U
 >1 : 1
 >(x) => '' : (x: number) => string
 >x : number
@@= skipped -9, +9 lines =@@
     var r11 = foo3(1, (x: T) => '', ''); // error
 >r11 : string
 >foo3(1, (x: T) => '', '') : string
->foo3 : <T_1, U_1>(x: T_1, cb: (a: T_1) => U_1, y: U_1) => U_1
+>foo3 : <T, U>(x: T, cb: (a: T) => U, y: U) => U
 >1 : 1
 >(x: T) => '' : (x: T) => string
 >x : T
@@= skipped -10, +10 lines =@@
     var r11b = foo3(1, (x: T) => '', 1); // error
 >r11b : string
 >foo3(1, (x: T) => '', 1) : string
->foo3 : <T_1, U_1>(x: T_1, cb: (a: T_1) => U_1, y: U_1) => U_1
+>foo3 : <T, U>(x: T, cb: (a: T) => U, y: U) => U
 >1 : 1
 >(x: T) => '' : (x: T) => string
 >x : T
@@= skipped -10, +10 lines =@@
     var r12 = foo3(1, function (a) { return '' }, 1); // error
 >r12 : number
 >foo3(1, function (a) { return '' }, 1) : 1
->foo3 : <T_1, U_1>(x: T_1, cb: (a: T_1) => U_1, y: U_1) => U_1
+>foo3 : <T, U>(x: T, cb: (a: T) => U, y: U) => U
 >1 : 1
 >function (a) { return '' } : (a: number) => string
 >a : number

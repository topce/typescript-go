--- old.functionConstraintSatisfaction.js
+++ new.functionConstraintSatisfaction.js
@@= skipped -63, +63 lines =@@
 //}
 
 //// [functionConstraintSatisfaction.js]
-// satisfaction of a constraint to Function, no errors expected
 function foo(x) { return x; }
 var i;
-var C = /** @class */ (function () {
-    function C() {
-    }
-    return C;
-}());
+class C {
+    foo;
+}
 var a;
 var b;
 var c;
 var r = foo(new Function());
-var r1 = foo(function (x) { return x; });
-var r2 = foo(function (x) { return x; });
+var r1 = foo((x) => x);
+var r2 = foo((x) => x);
 var r3 = foo(function (x) { return x; });
 var r4 = foo(function (x) { return x; });
 var r5 = foo(i);
@@= skipped -21, +18 lines =@@
 var r7 = foo(b);
 var r8 = foo(c);
 var i2;
-var C2 = /** @class */ (function () {
-    function C2() {
-    }
-    return C2;
-}());
+class C2 {
+    foo;
+}
 var a2;
 var b2;
 var c2;
-var r9 = foo(function (x) { return x; });
+var r9 = foo((x) => x);
 var r10 = foo(function (x) { return x; });
-var r11 = foo(function (x) { return x; });
-var r12 = foo(function (x, y) { return x; });
+var r11 = foo((x) => x);
+var r12 = foo((x, y) => x);
 var r13 = foo(i2);
 var r14 = foo(C2);
 var r15 = foo(b2);
@@= skipped -22, +20 lines =@@
     foo(x);
     foo(y);
 }
-//function foo2<T extends { (): void }, U extends T>(x: T, y: U) {
-//    foo(x);
-//    foo(y);
-//}

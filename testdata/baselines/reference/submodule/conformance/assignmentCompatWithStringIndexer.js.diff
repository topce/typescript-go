--- old.assignmentCompatWithStringIndexer.js
+++ new.assignmentCompatWithStringIndexer.js
@@= skipped -55, +55 lines =@@
 }
 
 //// [assignmentCompatWithStringIndexer.js]
-// index signatures must be compatible in assignments
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
-var A = /** @class */ (function () {
-    function A() {
-    }
-    return A;
-}());
+class A {
+}
 var a;
 var b;
-a = b; // ok
-b = a; // error
+a = b;
+b = a;
 var b2;
-a = b2; // ok
-b2 = a; // error
+a = b2;
+b2 = a;
 var Generics;
 (function (Generics) {
-    var A = /** @class */ (function () {
-        function A() {
-        }
-        return A;
-    }());
-    var B = /** @class */ (function (_super) {
-        __extends(B, _super);
-        function B() {
-            return _super !== null && _super.apply(this, arguments) || this;
-        }
-        return B;
-    }(A));
+    class A {
+    }
+    class B extends A {
+    }
     var b1;
     var a1;
-    a1 = b1; // ok
-    b1 = a1; // error
-    var B2 = /** @class */ (function (_super) {
-        __extends(B2, _super);
-        function B2() {
-            return _super !== null && _super.apply(this, arguments) || this;
-        }
-        return B2;
-    }(A));
+    a1 = b1;
+    b1 = a1;
+    class B2 extends A {
+    }
     var b2;
-    a1 = b2; // ok
-    b2 = a1; // error
+    a1 = b2;
+    b2 = a1;
     function foo() {
         var b3;
         var a3;
-        a3 = b3; // error
-        b3 = a3; // error
+        a3 = b3;
+        b3 = a3;
         var b4;
-        a3 = b4; // error
-        b4 = a3; // error
+        a3 = b4;
+        b4 = a3;
     }
 })(Generics || (Generics = {}));

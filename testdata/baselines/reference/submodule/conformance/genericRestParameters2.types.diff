--- old.genericRestParameters2.types
+++ new.genericRestParameters2.types
@@= skipped -13, +13 lines =@@
 >t4 : []
 
 declare let f00: (...x: [number, string, boolean]) => void;
->f00 : (x_0: number, x_1: string, x_2: boolean) => void
+>f00 : (...x: [number, string, boolean]) => void
 >x : [number, string, boolean]
 
 declare let f01: (a: number, ...x: [string, boolean]) => void;
->f01 : (a: number, x_0: string, x_1: boolean) => void
+>f01 : (a: number, ...x: [string, boolean]) => void
 >a : number
 >x : [string, boolean]
 
 declare let f02: (a: number, b: string, ...x: [boolean]) => void;
->f02 : (a: number, b: string, x_0: boolean) => void
+>f02 : (a: number, b: string, ...x: [boolean]) => void
 >a : number
 >b : string
 >x : [boolean]
@@= skipped -21, +21 lines =@@
 >c : boolean
 
 declare let f04: (a: number, b: string, c: boolean, ...x: []) => void;
->f04 : (a: number, b: string, c: boolean) => void
+>f04 : (a: number, b: string, c: boolean, ...x: []) => void
 >a : number
 >b : string
 >c : boolean
 >x : []
 
 declare let f10: (...x: [number, string, ...boolean[]]) => void;
->f10 : (x_0: number, x_1: string, ...x: boolean[]) => void
+>f10 : (...x: [number, string, ...boolean[]]) => void
 >x : [number, string, ...boolean[]]
 
 declare let f11: (a: number, ...x: [string, ...boolean[]]) => void;
->f11 : (a: number, x_0: string, ...x: boolean[]) => void
+>f11 : (a: number, ...x: [string, ...boolean[]]) => void
 >a : number
 >x : [string, ...boolean[]]
 
 declare let f12: (a: number, b: string, ...x: [...boolean[]]) => void;
->f12 : (a: number, b: string, ...x: [...boolean[]]) => void
+>f12 : (a: number, b: string, ...x: boolean[]) => void
 >a : number
 >b : string
 >x : boolean[]
@@= skipped -35, +35 lines =@@
 
 f10(42, "hello");
 >f10(42, "hello") : void
->f10 : (x_0: number, x_1: string, ...x: boolean[]) => void
+>f10 : (...x: [number, string, ...boolean[]]) => void
 >42 : 42
 >"hello" : "hello"
 
 f10(42, "hello", true);
 >f10(42, "hello", true) : void
->f10 : (x_0: number, x_1: string, ...x: boolean[]) => void
+>f10 : (...x: [number, string, ...boolean[]]) => void
 >42 : 42
 >"hello" : "hello"
 >true : true
 
 f10(42, "hello", true, false);
 >f10(42, "hello", true, false) : void
->f10 : (x_0: number, x_1: string, ...x: boolean[]) => void
+>f10 : (...x: [number, string, ...boolean[]]) => void
 >42 : 42
 >"hello" : "hello"
 >true : true
@@= skipped -21, +21 lines =@@
 
 f10(t1[0], t1[1], t1[2], t1[3]);
 >f10(t1[0], t1[1], t1[2], t1[3]) : void
->f10 : (x_0: number, x_1: string, ...x: boolean[]) => void
+>f10 : (...x: [number, string, ...boolean[]]) => void
 >t1[0] : number
 >t1 : [number, string, ...boolean[]]
 >0 : 0
@@= skipped -16, +16 lines =@@
 
 f10(...t1);
 >f10(...t1) : void
->f10 : (x_0: number, x_1: string, ...x: boolean[]) => void
+>f10 : (...x: [number, string, ...boolean[]]) => void
 >...t1 : string | number | boolean
 >t1 : [number, string, ...boolean[]]
 
 f10(42, ...t2);
 >f10(42, ...t2) : void
->f10 : (x_0: number, x_1: string, ...x: boolean[]) => void
+>f10 : (...x: [number, string, ...boolean[]]) => void
 >42 : 42
 >...t2 : string | boolean
 >t2 : [string, ...boolean[]]
 
 f10(42, "hello", ...t3);
 >f10(42, "hello", ...t3) : void
->f10 : (x_0: number, x_1: string, ...x: boolean[]) => void
+>f10 : (...x: [number, string, ...boolean[]]) => void
 >42 : 42
 >"hello" : "hello"
 >...t3 : boolean
@@= skipped -21, +21 lines =@@
 
 f10(42, "hello", true, ...t4);
 >f10(42, "hello", true, ...t4) : void
->f10 : (x_0: number, x_1: string, ...x: boolean[]) => void
+>f10 : (...x: [number, string, ...boolean[]]) => void
 >42 : 42
 >"hello" : "hello"
 >true : true
@@= skipped -9, +9 lines =@@
 
 f10(42, "hello", true, ...t4, false, ...t3);
 >f10(42, "hello", true, ...t4, false, ...t3) : void
->f10 : (x_0: number, x_1: string, ...x: boolean[]) => void
+>f10 : (...x: [number, string, ...boolean[]]) => void
 >42 : 42
 >"hello" : "hello"
 >true : true
@@= skipped -12, +12 lines =@@
 
 f11(42, "hello");
 >f11(42, "hello") : void
->f11 : (a: number, x_0: string, ...x: boolean[]) => void
+>f11 : (a: number, ...x: [string, ...boolean[]]) => void
 >42 : 42
 >"hello" : "hello"
 
 f11(42, "hello", true);
 >f11(42, "hello", true) : void
->f11 : (a: number, x_0: string, ...x: boolean[]) => void
+>f11 : (a: number, ...x: [string, ...boolean[]]) => void
 >42 : 42
 >"hello" : "hello"
 >true : true
 
 f11(42, "hello", true, false);
 >f11(42, "hello", true, false) : void
->f11 : (a: number, x_0: string, ...x: boolean[]) => void
+>f11 : (a: number, ...x: [string, ...boolean[]]) => void
 >42 : 42
 >"hello" : "hello"
 >true : true
@@= skipped -21, +21 lines =@@
 
 f11(t1[0], t1[1], t1[2], t1[3]);
 >f11(t1[0], t1[1], t1[2], t1[3]) : void
->f11 : (a: number, x_0: string, ...x: boolean[]) => void
+>f11 : (a: number, ...x: [string, ...boolean[]]) => void
 >t1[0] : number
 >t1 : [number, string, ...boolean[]]
 >0 : 0
@@= skipped -16, +16 lines =@@
 
 f11(...t1);
 >f11(...t1) : void
->f11 : (a: number, x_0: string, ...x: boolean[]) => void
+>f11 : (a: number, ...x: [string, ...boolean[]]) => void
 >...t1 : string | number | boolean
 >t1 : [number, string, ...boolean[]]
 
 f11(42, ...t2);
 >f11(42, ...t2) : void
->f11 : (a: number, x_0: string, ...x: boolean[]) => void
+>f11 : (a: number, ...x: [string, ...boolean[]]) => void
 >42 : 42
 >...t2 : string | boolean
 >t2 : [string, ...boolean[]]
 
 f11(42, "hello", ...t3);
 >f11(42, "hello", ...t3) : void
->f11 : (a: number, x_0: string, ...x: boolean[]) => void
+>f11 : (a: number, ...x: [string, ...boolean[]]) => void
 >42 : 42
 >"hello" : "hello"
 >...t3 : boolean
@@= skipped -21, +21 lines =@@
 
 f11(42, "hello", true, ...t4);
 >f11(42, "hello", true, ...t4) : void
->f11 : (a: number, x_0: string, ...x: boolean[]) => void
+>f11 : (a: number, ...x: [string, ...boolean[]]) => void
 >42 : 42
 >"hello" : "hello"
 >true : true
@@= skipped -9, +9 lines =@@
 
 f11(42, "hello", true, ...t4, false, ...t3);
 >f11(42, "hello", true, ...t4, false, ...t3) : void
->f11 : (a: number, x_0: string, ...x: boolean[]) => void
+>f11 : (a: number, ...x: [string, ...boolean[]]) => void
 >42 : 42
 >"hello" : "hello"
 >true : true
@@= skipped -12, +12 lines =@@
 
 f12(42, "hello");
 >f12(42, "hello") : void
->f12 : (a: number, b: string, ...x: [...boolean[]]) => void
+>f12 : (a: number, b: string, ...x: boolean[]) => void
 >42 : 42
 >"hello" : "hello"
 
 f12(42, "hello", true);
 >f12(42, "hello", true) : void
->f12 : (a: number, b: string, ...x: [...boolean[]]) => void
+>f12 : (a: number, b: string, ...x: boolean[]) => void
 >42 : 42
 >"hello" : "hello"
 >true : true
 
 f12(42, "hello", true, false);
 >f12(42, "hello", true, false) : void
->f12 : (a: number, b: string, ...x: [...boolean[]]) => void
+>f12 : (a: number, b: string, ...x: boolean[]) => void
 >42 : 42
 >"hello" : "hello"
 >true : true
@@= skipped -21, +21 lines =@@
 
 f12(t1[0], t1[1], t1[2], t1[3]);
 >f12(t1[0], t1[1], t1[2], t1[3]) : void
->f12 : (a: number, b: string, ...x: [...boolean[]]) => void
+>f12 : (a: number, b: string, ...x: boolean[]) => void
 >t1[0] : number
 >t1 : [number, string, ...boolean[]]
 >0 : 0
@@= skipped -16, +16 lines =@@
 
 f12(...t1);
 >f12(...t1) : void
->f12 : (a: number, b: string, ...x: [...boolean[]]) => void
+>f12 : (a: number, b: string, ...x: boolean[]) => void
 >...t1 : string | number | boolean
 >t1 : [number, string, ...boolean[]]
 
 f12(42, ...t2);
 >f12(42, ...t2) : void
->f12 : (a: number, b: string, ...x: [...boolean[]]) => void
+>f12 : (a: number, b: string, ...x: boolean[]) => void
 >42 : 42
 >...t2 : string | boolean
 >t2 : [string, ...boolean[]]
 
 f12(42, "hello", ...t3);
 >f12(42, "hello", ...t3) : void
->f12 : (a: number, b: string, ...x: [...boolean[]]) => void
+>f12 : (a: number, b: string, ...x: boolean[]) => void
 >42 : 42
 >"hello" : "hello"
 >...t3 : boolean
@@= skipped -21, +21 lines =@@
 
 f12(42, "hello", true, ...t4);
 >f12(42, "hello", true, ...t4) : void
->f12 : (a: number, b: string, ...x: [...boolean[]]) => void
+>f12 : (a: number, b: string, ...x: boolean[]) => void
 >42 : 42
 >"hello" : "hello"
 >true : true
@@= skipped -9, +9 lines =@@
 
 f12(42, "hello", true, ...t4, false, ...t3);
 >f12(42, "hello", true, ...t4, false, ...t3) : void
->f12 : (a: number, b: string, ...x: [...boolean[]]) => void
+>f12 : (a: number, b: string, ...x: boolean[]) => void
 >42 : 42
 >"hello" : "hello"
 >true : true

--- old.enumLiteralTypes3.js
+++ new.enumLiteralTypes3.js
@@= skipped -121, +121 lines =@@
 }
 
 //// [enumLiteralTypes3.js]
+var Choice;
+(function (Choice) {
+    Choice[Choice["Unknown"] = 0] = "Unknown";
+    Choice[Choice["Yes"] = 1] = "Yes";
+    Choice[Choice["No"] = 2] = "No";
+})(Choice || (Choice = {}));
 ;
 function f1(a, b, c, d) {
     a = a;
@@= skipped -26, +32 lines =@@
     d = d;
 }
 function f5(a, b, c, d) {
-    a = 0 /* Choice.Unknown */;
-    a = 1 /* Choice.Yes */;
-    a = 2 /* Choice.No */;
-    b = 0 /* Choice.Unknown */;
-    b = 1 /* Choice.Yes */;
-    b = 2 /* Choice.No */;
-    c = 0 /* Choice.Unknown */;
-    c = 1 /* Choice.Yes */;
-    c = 2 /* Choice.No */;
-    d = 0 /* Choice.Unknown */;
-    d = 1 /* Choice.Yes */;
-    d = 2 /* Choice.No */;
+    a = Choice.Unknown;
+    a = Choice.Yes;
+    a = Choice.No;
+    b = Choice.Unknown;
+    b = Choice.Yes;
+    b = Choice.No;
+    c = Choice.Unknown;
+    c = Choice.Yes;
+    c = Choice.No;
+    d = Choice.Unknown;
+    d = Choice.Yes;
+    d = Choice.No;
 }
 function f6(a, b, c, d) {
-    a === 0 /* Choice.Unknown */;
-    a === 1 /* Choice.Yes */;
-    a === 2 /* Choice.No */;
-    b === 0 /* Choice.Unknown */;
-    b === 1 /* Choice.Yes */;
-    b === 2 /* Choice.No */;
-    c === 0 /* Choice.Unknown */;
-    c === 1 /* Choice.Yes */;
-    c === 2 /* Choice.No */;
-    d === 0 /* Choice.Unknown */;
-    d === 1 /* Choice.Yes */;
-    d === 2 /* Choice.No */;
+    a === Choice.Unknown;
+    a === Choice.Yes;
+    a === Choice.No;
+    b === Choice.Unknown;
+    b === Choice.Yes;
+    b === Choice.No;
+    c === Choice.Unknown;
+    c === Choice.Yes;
+    c === Choice.No;
+    d === Choice.Unknown;
+    d === Choice.Yes;
+    d === Choice.No;
 }
 function f7(a, b, c, d) {
     a === a;
@@= skipped -47, +47 lines =@@
 }
 function f10(x) {
     switch (x) {
-        case 0 /* Choice.Unknown */: return x;
-        case 1 /* Choice.Yes */: return x;
-        case 2 /* Choice.No */: return x;
+        case Choice.Unknown: return x;
+        case Choice.Yes: return x;
+        case Choice.No: return x;
     }
     return x;
 }
 function f11(x) {
     switch (x) {
-        case 0 /* Choice.Unknown */: return x;
-        case 1 /* Choice.Yes */: return x;
-        case 2 /* Choice.No */: return x;
+        case Choice.Unknown: return x;
+        case Choice.Yes: return x;
+        case Choice.No: return x;
     }
     return x;
 }
 function f12(x) {
     switch (x) {
-        case 0 /* Choice.Unknown */: return x;
-        case 1 /* Choice.Yes */: return x;
-        case 2 /* Choice.No */: return x;
+        case Choice.Unknown: return x;
+        case Choice.Yes: return x;
+        case Choice.No: return x;
     }
     return x;
 }
 function f13(x) {
     switch (x) {
-        case 0 /* Choice.Unknown */: return x;
-        case 1 /* Choice.Yes */: return x;
-        case 2 /* Choice.No */: return x;
+        case Choice.Unknown: return x;
+        case Choice.Yes: return x;
+        case Choice.No: return x;
     }
     return x;
 }

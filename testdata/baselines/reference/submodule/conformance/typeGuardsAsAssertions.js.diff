--- old.typeGuardsAsAssertions.js
+++ new.typeGuardsAsAssertions.js
@@= skipped -129, +129 lines =@@
 
 //// [typeGuardsAsAssertions.js]
 "use strict";
-// Repro from #8513
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.none = void 0;
 exports.isSome = isSome;
 exports.fn = fn;
-var cond;
+// Repro from #8513
+let cond;
 exports.none = { none: '' };
 function isSome(value) {
     return 'some' in value;
 }
 function someFrom(some) {
-    return { some: some };
+    return { some };
 }
 function fn(makeSome) {
-    var result = exports.none;
+    let result = exports.none;
     result; // None
     while (cond) {
         result; // Some<r> | None
@@= skipped -23, +23 lines =@@
     }
 }
 function foo1() {
-    var x = 0;
+    let x = 0;
     x; // number
     while (cond) {
         x; // number, then string | number
@@= skipped -10, +10 lines =@@
     x;
 }
 function foo2() {
-    var x = 0;
+    let x = 0;
     x; // number
     while (cond) {
         x; // number, then string | number
@@= skipped -16, +16 lines =@@
 }
 // Type guards as assertions
 function f1() {
-    var x = undefined;
+    let x = undefined;
     x; // undefined
     if (x) {
         x; // string | number (guard as assertion)
@@= skipped -8, +8 lines =@@
     x; // string | number | undefined
 }
 function f2() {
-    var x = undefined;
+    let x = undefined;
     x; // undefined
     if (typeof x === "string") {
         x; // string (guard as assertion)
@@= skipped -8, +8 lines =@@
     x; // string | undefined
 }
 function f3() {
-    var x = undefined;
+    let x = undefined;
     x; // undefined
     if (!x) {
         return;
@@= skipped -8, +8 lines =@@
     x; // string | number (guard as assertion)
 }
 function f4() {
-    var x = undefined;
+    let x = undefined;
     x; // undefined
     if (typeof x === "boolean") {
         x; // nothing (boolean not in declared type)
@@= skipped -17, +17 lines =@@
     x; // string | number
 }
 function f6() {
-    var x;
+    let x;
     x.slice();
     x = "";
     x.slice();
@@= skipped -16, +16 lines =@@
     x.slice();
 }
 function f7() {
-    var x;
+    let x;
     x.slice();
 }

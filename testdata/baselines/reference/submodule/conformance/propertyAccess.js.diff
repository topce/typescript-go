--- old.propertyAccess.js
+++ new.propertyAccess.js
@@= skipped -152, +152 lines =@@
 
 
 //// [propertyAccess.js]
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
-var A = /** @class */ (function () {
-    function A() {
-    }
-    return A;
-}());
-var B = /** @class */ (function (_super) {
-    __extends(B, _super);
-    function B() {
-        return _super !== null && _super.apply(this, arguments) || this;
-    }
-    return B;
-}(A));
+class A {
+    a;
+}
+class B extends A {
+    b;
+}
 var Compass;
 (function (Compass) {
     Compass[Compass["North"] = 0] = "North";
@@= skipped -42, +21 lines =@@
     10: 'ten',
     x: 'hello',
     y: 32,
-    z: { n: 'world', m: 15, o: function () { return false; } },
+    z: { n: 'world', m: 15, o: () => false },
     'literal property': 100
 };
 var anyVar = {};

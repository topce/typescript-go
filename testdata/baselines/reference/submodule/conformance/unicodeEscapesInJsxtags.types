//// [tests/cases/conformance/jsx/unicodeEscapesInJsxtags.tsx] ////

=== file.tsx ===
import * as React from "react";
>React : any

declare global {
>global : any

    namespace JSX {
        interface IntrinsicElements {
            "a-b": any;
>"a-b" : any

            "a-c": any;
>"a-c" : any
        }
    }
}
const Compa = (x: {x: number}) => <div>{"" + x}</div>;
>Compa : (x: { x: number; }) => any
>(x: {x: number}) => <div>{"" + x}</div> : (x: { x: number; }) => any
>x : { x: number; }
>x : number
><div>{"" + x}</div> : any
>div : any
>"" + x : string
>"" : ""
>x : { x: number; }
>div : any

const x = { video: () => null }
>x : { video: () => any; }
>{ video: () => null } : { video: () => any; }
>video : () => any
>() => null : () => any

// unicode escape sequence is not allowed in tag name or JSX attribute name.
// tag name:
; <\u0061></a>
><\u0061></a> : any
>\u0061 : any
>a : any

; <\u0061-b></a-b>
><\u0061-b></a-b> : any
>\u0061-b : any
>a-b : any

; <a-\u0063></a-c>
><a-\u0063></a-c> : any
>a-\u0063 : any
>a-c : any

; <Comp\u0061 x={12} />
><Comp\u0061 x={12} /> : any
>Comp\u0061 : (x: { x: number; }) => any
>x : any
>12 : 12

; <x.\u0076ideo />
><x.\u0076ideo /> : any
>x.\u0076ideo : () => any
>x : { video: () => any; }
>\u0076ideo : () => any

; <\u{0061}></a>
><\u{0061}></a> : any
>\u{0061} : any
>a : any

; <\u{0061}-b></a-b>
><\u{0061}-b></a-b> : any
>\u{0061}-b : any
>a-b : any

; <a-\u{0063}></a-c>
><a-\u{0063}></a-c> : any
>a-\u{0063} : any
>a-c : any

; <Comp\u{0061} x={12} />
><Comp\u{0061} x={12} /> : any
>Comp\u{0061} : (x: { x: number; }) => any
>x : any
>12 : 12

// attribute name
;<video data-\u0076ideo />
><video data-\u0076ideo /> : any
>video : any
>data-\u0076ideo : any

;<video \u0073rc="" />
><video \u0073rc="" /> : any
>video : any
>\u0073rc : any


--- old.es2022IntlAPIs.types
+++ new.es2022IntlAPIs.types
@@= skipped -13, +13 lines =@@
 >'longGeneric' : "longGeneric"
 
 for (const zoneName of timezoneNames) {
->zoneName : "short" | "long" | "shortOffset" | "longOffset" | "shortGeneric" | "longGeneric"
+>zoneName : "long" | "longGeneric" | "longOffset" | "short" | "shortGeneric" | "shortOffset"
 >timezoneNames : readonly ["short", "long", "shortOffset", "longOffset", "shortGeneric", "longGeneric"]
 
   var formatter = new Intl.DateTimeFormat('en-US', {
->formatter : Intl.DateTimeFormat
->new Intl.DateTimeFormat('en-US', {    timeZone: 'America/Los_Angeles',    timeZoneName: zoneName,  }) : Intl.DateTimeFormat
->Intl.DateTimeFormat : Intl.DateTimeFormatConstructor
+>formatter : DateTimeFormat
+>new Intl.DateTimeFormat('en-US', {    timeZone: 'America/Los_Angeles',    timeZoneName: zoneName,  }) : DateTimeFormat
+>Intl.DateTimeFormat : DateTimeFormatConstructor
 >Intl : typeof Intl
->DateTimeFormat : Intl.DateTimeFormatConstructor
+>DateTimeFormat : DateTimeFormatConstructor
 >'en-US' : "en-US"
->{    timeZone: 'America/Los_Angeles',    timeZoneName: zoneName,  } : { timeZone: string; timeZoneName: "short" | "long" | "shortOffset" | "longOffset" | "shortGeneric" | "longGeneric"; }
+>{    timeZone: 'America/Los_Angeles',    timeZoneName: zoneName,  } : { timeZone: string; timeZoneName: "long" | "longGeneric" | "longOffset" | "short" | "shortGeneric" | "shortOffset"; }
 
     timeZone: 'America/Los_Angeles',
 >timeZone : string
 >'America/Los_Angeles' : "America/Los_Angeles"
 
     timeZoneName: zoneName,
->timeZoneName : "short" | "long" | "shortOffset" | "longOffset" | "shortGeneric" | "longGeneric"
->zoneName : "short" | "long" | "shortOffset" | "longOffset" | "shortGeneric" | "longGeneric"
+>timeZoneName : "long" | "longGeneric" | "longOffset" | "short" | "shortGeneric" | "shortOffset"
+>zoneName : "long" | "longGeneric" | "longOffset" | "short" | "shortGeneric" | "shortOffset"
 
   });
 }

--- old.restParametersOfNonArrayTypes2.types
+++ new.restParametersOfNonArrayTypes2.types
@@= skipped -17, +17 lines =@@
 >x : MyThing
 
 var f2 = (...x: MyThing, ...y: MyThing) => { }
->f2 : (...x: MyThing, ...y: MyThing) => void
->(...x: MyThing, ...y: MyThing) => { } : (...x: MyThing, ...y: MyThing) => void
+>f2 : (x?: MyThing, ...y: MyThing) => void
+>(...x: MyThing, ...y: MyThing) => { } : (x?: MyThing, ...y: MyThing) => void
 >x : MyThing
 >y : MyThing
 
@@= skipped -18, +18 lines =@@
 >x : MyThing
 
     foo(...x: MyThing, ...y: MyThing);
->foo : (...x: MyThing, ...y: MyThing) => any
+>foo : (x?: MyThing, ...y: MyThing) => any
 >x : MyThing
 >y : MyThing
 }
 
 var a: {
->a : { (...x: MyThing): any; foo(...x: MyThing): any; }
+>a : { (...x: MyThing): any; foo: (...x: MyThing) => any; }
 
     (...x: MyThing);
 >x : MyThing
@@= skipped -17, +17 lines =@@
 }
 
 var b = {
->b : { foo(...x: MyThing): void; a: (...x: MyThing, ...y: MyThing) => void; b: (...x: MyThing) => void; }
->{    foo(...x: MyThing) { },    a: function foo(...x: MyThing, ...y: MyThing) { },    b: (...x: MyThing) => { }} : { foo(...x: MyThing): void; a: (...x: MyThing, ...y: MyThing) => void; b: (...x: MyThing) => void; }
+>b : { foo: (...x: MyThing) => void; a: (x?: MyThing, ...y: MyThing) => void; b: (...x: MyThing) => void; }
+>{    foo(...x: MyThing) { },    a: function foo(...x: MyThing, ...y: MyThing) { },    b: (...x: MyThing) => { }} : { foo: (...x: MyThing) => void; a: (x?: MyThing, ...y: MyThing) => void; b: (...x: MyThing) => void; }
 
     foo(...x: MyThing) { },
 >foo : (...x: MyThing) => void
 >x : MyThing
 
     a: function foo(...x: MyThing, ...y: MyThing) { },
->a : (...x: MyThing, ...y: MyThing) => void
->function foo(...x: MyThing, ...y: MyThing) { } : (...x: MyThing, ...y: MyThing) => void
->foo : (...x: MyThing, ...y: MyThing) => void
+>a : (x?: MyThing, ...y: MyThing) => void
+>function foo(...x: MyThing, ...y: MyThing) { } : (x?: MyThing, ...y: MyThing) => void
+>foo : (x?: MyThing, ...y: MyThing) => void
 >x : MyThing
 >y : MyThing
 
@@= skipped -34, +34 lines =@@
 >x : MyThing2<string>
 
 var f4 = (...x: MyThing2<string>, ...y: MyThing2<string>) => { }
->f4 : (...x: MyThing2<string>, ...y: MyThing2<string>) => void
->(...x: MyThing2<string>, ...y: MyThing2<string>) => { } : (...x: MyThing2<string>, ...y: MyThing2<string>) => void
+>f4 : (x?: MyThing2<string>, ...y: MyThing2<string>) => void
+>(...x: MyThing2<string>, ...y: MyThing2<string>) => { } : (x?: MyThing2<string>, ...y: MyThing2<string>) => void
 >x : MyThing2<string>
 >y : MyThing2<string>
 
@@= skipped -18, +18 lines =@@
 >x : MyThing2<string>
 
     foo(...x: MyThing2<string>, ...y: MyThing2<string>);
->foo : (...x: MyThing2<string>, ...y: MyThing2<string>) => any
+>foo : (x?: MyThing2<string>, ...y: MyThing2<string>) => any
 >x : MyThing2<string>
 >y : MyThing2<string>
 }
 
 var a2: {
->a2 : { (...x: MyThing2<string>): any; foo(...x: MyThing2<string>): any; }
+>a2 : { (...x: MyThing2<string>): any; foo: (...x: MyThing2<string>) => any; }
 
     (...x: MyThing2<string>);
 >x : MyThing2<string>
@@= skipped -17, +17 lines =@@
 }
 
 var b2 = {
->b2 : { foo(...x: MyThing2<string>): void; a: (...x: MyThing2<string>, ...y: MyThing2<string>) => void; b: (...x: MyThing2<string>) => void; }
->{    foo(...x: MyThing2<string>) { },    a: function foo(...x: MyThing2<string>, ...y: MyThing2<string>) { },    b: (...x: MyThing2<string>) => { }} : { foo(...x: MyThing2<string>): void; a: (...x: MyThing2<string>, ...y: MyThing2<string>) => void; b: (...x: MyThing2<string>) => void; }
+>b2 : { foo: (...x: MyThing2<string>) => void; a: (x?: MyThing2<string>, ...y: MyThing2<string>) => void; b: (...x: MyThing2<string>) => void; }
+>{    foo(...x: MyThing2<string>) { },    a: function foo(...x: MyThing2<string>, ...y: MyThing2<string>) { },    b: (...x: MyThing2<string>) => { }} : { foo: (...x: MyThing2<string>) => void; a: (x?: MyThing2<string>, ...y: MyThing2<string>) => void; b: (...x: MyThing2<string>) => void; }
 
     foo(...x: MyThing2<string>) { },
 >foo : (...x: MyThing2<string>) => void
 >x : MyThing2<string>
 
     a: function foo(...x: MyThing2<string>, ...y: MyThing2<string>) { },
->a : (...x: MyThing2<string>, ...y: MyThing2<string>) => void
->function foo(...x: MyThing2<string>, ...y: MyThing2<string>) { } : (...x: MyThing2<string>, ...y: MyThing2<string>) => void
->foo : (...x: MyThing2<string>, ...y: MyThing2<string>) => void
+>a : (x?: MyThing2<string>, ...y: MyThing2<string>) => void
+>function foo(...x: MyThing2<string>, ...y: MyThing2<string>) { } : (x?: MyThing2<string>, ...y: MyThing2<string>) => void
+>foo : (x?: MyThing2<string>, ...y: MyThing2<string>) => void
 >x : MyThing2<string>
 >y : MyThing2<string>
 

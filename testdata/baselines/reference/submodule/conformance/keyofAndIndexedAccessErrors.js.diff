--- old.keyofAndIndexedAccessErrors.js
+++ new.keyofAndIndexedAccessErrors.js
@@= skipped -172, +172 lines =@@
 
 
 //// [keyofAndIndexedAccessErrors.js]
-var Shape = /** @class */ (function () {
-    function Shape() {
-    }
-    return Shape;
-}());
+class Shape {
+    name;
+    width;
+    height;
+    visible;
+}
 function getProperty(obj, key) {
     return obj[key];
 }
@@= skipped -12, +13 lines =@@
     obj[key] = value;
 }
 function f10(shape) {
-    var x1 = getProperty(shape, "name");
-    var x2 = getProperty(shape, "size"); // Error
-    var x3 = getProperty(shape, cond ? "name" : "size"); // Error
+    let x1 = getProperty(shape, "name");
+    let x2 = getProperty(shape, "size");
+    let x3 = getProperty(shape, cond ? "name" : "size");
     setProperty(shape, "name", "rectangle");
-    setProperty(shape, "size", 10); // Error
-    setProperty(shape, cond ? "name" : "size", 10); // Error
+    setProperty(shape, "size", 10);
+    setProperty(shape, cond ? "name" : "size", 10);
 }
 function f20(x, y, k1, k2, k3, k4) {
     x[k1];
     x[k2];
-    x[k3]; // Error
-    x[k4]; // Error
+    x[k3];
+    x[k4];
     y[k1];
     y[k2];
     y[k3];
     y[k4];
     k1 = k2;
-    k1 = k3; // Error
-    k1 = k4; // Error
+    k1 = k3;
+    k1 = k4;
     k2 = k1;
-    k2 = k3; // Error
-    k2 = k4; // Error
+    k2 = k3;
+    k2 = k4;
     k3 = k1;
     k3 = k2;
     k3 = k4;
@@= skipped -29, +29 lines =@@
     k4 = k2;
     k4 = k3;
 }
-// Repro from #17166
 function f3(t, k, tk, u, j, uk, tj, uj) {
-    for (var key in t) {
-        key = k; // ok, K ==> keyof T
-        k = key; // error, keyof T =/=> K
-        t[key] = tk; // ok, T[K] ==> T[keyof T]
-        tk = t[key]; // error, T[keyof T] =/=> T[K]
+    for (let key in t) {
+        key = k;
+        k = key;
+        t[key] = tk;
+        tk = t[key];
     }
     tk = uk;
-    uk = tk; // error
+    uk = tk;
     tj = uj;
-    uj = tj; // error
+    uj = tj;
     tk = tj;
-    tj = tk; // error
+    tj = tk;
     tk = uj;
-    uj = tk; // error
+    uj = tk;
 }
-// The constraint of 'keyof T' is 'keyof T'
 function f4(k) {
-    k = 42; // error
-    k = "hello"; // error
+    k = 42;
+    k = "hello";
 }
-var a1 = 'a'; // Error
-var b1 = 'b';
+const a1 = 'a';
+const b1 = 'b';
 function test1(t, k) {
-    t[k] = 42; // Error
-    t[k] = "hello"; // Error
-    t[k] = [10, 20]; // Error
+    t[k] = 42;
+    t[k] = "hello";
+    t[k] = [10, 20];
 }
-// Repro from #28839
 function f30() {
-    var x = "hello";
+    let x = "hello";
 }
 function f31() {
-    var x = "hello";
+    let x = "hello";
 }
-// Repro from #51069
-var Test = /** @class */ (function () {
-    function Test(t) {
+class Test {
+    testy;
+    constructor(t) {
         this.testy = t;
     }
-    Test.prototype.t = function (key) {
-        this.testy[key] += 1; // Error
+    t(key) {
+        this.testy[key] += 1;
         return this.testy[key];
-    };
-    return Test;
-}());
+    }
+}

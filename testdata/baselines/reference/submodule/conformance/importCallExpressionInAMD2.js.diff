--- old.importCallExpressionInAMD2.js
+++ new.importCallExpressionInAMD2.js
@@= skipped -16, +16 lines =@@
 foo(import("./0"));
 
 //// [0.js]
-define(["require", "exports"], function (require, exports) {
-    "use strict";
-    Object.defineProperty(exports, "__esModule", { value: true });
-    exports.B = void 0;
-    class B {
-        print() { return "I am B"; }
-    }
-    exports.B = B;
-});
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.B = void 0;
+class B {
+    print() { return "I am B"; }
+}
+exports.B = B;
 //// [2.js]
-define(["require", "exports"], function (require, exports) {
-    "use strict";
-    // We use Promise<any> for now as there is no way to specify shape of module object
-    function foo(x) {
-        x.then(value => {
-            let b = new value.B();
-            b.print();
-        });
-    }
-    foo(new Promise((resolve_1, reject_1) => { require(["./0"], resolve_1, reject_1); }));
-});
+function foo(x) {
+    x.then(value => {
+        let b = new value.B();
+        b.print();
+    });
+}
+foo(Promise.resolve().then(() => require("./0")));

--- old.overrideWithoutNoImplicitOverride1.js
+++ new.overrideWithoutNoImplicitOverride1.js
@@= skipped -49, +49 lines =@@
 
 //// [overrideWithoutNoImplicitOverride1.js]
 "use strict";
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.NonAmbientDerived = exports.NonAmbientBase = exports.NonAmbientClass = void 0;
-var NonAmbientClass = /** @class */ (function () {
-    function NonAmbientClass() {
-    }
-    NonAmbientClass.prototype.yadda = function () { };
-    return NonAmbientClass;
-}());
+class NonAmbientClass {
+    yadda() { }
+}
 exports.NonAmbientClass = NonAmbientClass;
 /////
-var NonAmbientBase = /** @class */ (function () {
-    function NonAmbientBase() {
-    }
-    NonAmbientBase.prototype.foo = function () { };
-    return NonAmbientBase;
-}());
+class NonAmbientBase {
+    foo() { }
+}
 exports.NonAmbientBase = NonAmbientBase;
-var NonAmbientDerived = /** @class */ (function (_super) {
-    __extends(NonAmbientDerived, _super);
-    function NonAmbientDerived() {
-        return _super !== null && _super.apply(this, arguments) || this;
-    }
-    NonAmbientDerived.prototype.foo = function () { };
-    NonAmbientDerived.prototype.bar = function () { };
-    return NonAmbientDerived;
-}(NonAmbientBase));
+class NonAmbientDerived extends NonAmbientBase {
+    foo() { }
+    bar() { }
+}
 exports.NonAmbientDerived = NonAmbientDerived;

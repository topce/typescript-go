--- old.classConstructorAccessibility.js
+++ new.classConstructorAccessibility.js
@@= skipped -36, +36 lines =@@
 
 
 //// [classConstructorAccessibility.js]
-var C = /** @class */ (function () {
-    function C(x) {
+class C {
+    x;
+    constructor(x) {
         this.x = x;
     }
-    return C;
-}());
-var D = /** @class */ (function () {
-    function D(x) {
+}
+class D {
+    x;
+    constructor(x) {
         this.x = x;
     }
-    return D;
-}());
-var E = /** @class */ (function () {
-    function E(x) {
+}
+class E {
+    x;
+    constructor(x) {
         this.x = x;
     }
-    return E;
-}());
+}
 var c = new C(1);
-var d = new D(1); // error
-var e = new E(1); // error
+var d = new D(1);
+var e = new E(1);
 var Generic;
 (function (Generic) {
-    var C = /** @class */ (function () {
-        function C(x) {
+    class C {
+        x;
+        constructor(x) {
             this.x = x;
         }
-        return C;
-    }());
-    var D = /** @class */ (function () {
-        function D(x) {
+    }
+    class D {
+        x;
+        constructor(x) {
             this.x = x;
         }
-        return D;
-    }());
-    var E = /** @class */ (function () {
-        function E(x) {
+    }
+    class E {
+        x;
+        constructor(x) {
             this.x = x;
         }
-        return E;
-    }());
+    }
     var c = new C(1);
-    var d = new D(1); // error
-    var e = new E(1); // error
+    var d = new D(1);
+    var e = new E(1);
 })(Generic || (Generic = {}));
-
-
-//// [classConstructorAccessibility.d.ts]
-declare class C {
-    x: number;
-    constructor(x: number);
-}
-declare class D {
-    x: number;
-    private constructor();
-}
-declare class E {
-    x: number;
-    protected constructor(x: number);
-}
-declare var c: C;
-declare var d: any;
-declare var e: any;
-declare namespace Generic {
-}

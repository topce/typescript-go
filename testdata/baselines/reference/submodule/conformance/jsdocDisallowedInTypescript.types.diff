--- old.jsdocDisallowedInTypescript.types
+++ new.jsdocDisallowedInTypescript.types
@@= skipped -9, +9 lines =@@
 >3 : 3
 
 function f(x: ?number, y: Array.<number>) {
->f : (x: number | null, y: Array<number>) => number
+>f : (x: number | null, y: number[]) => number
 >x : number | null
 >y : number[]
 
@@= skipped -17, +17 lines =@@
 >0 : 0
 }
 function hof(ctor: function(new: number, string)) {
->hof : (ctor: new (arg1: string) => number) => number
->ctor : new (arg1: string) => number
->new : number
+>hof : (ctor: function) => any
+>ctor : function
+>(new : any
+>new : any
+> : any
+>number, string : any
+>number : any
+>string : any
 
     return new ctor('hi');
->new ctor('hi') : number
->ctor : new (arg1: string) => number
+>new ctor('hi') : any
+>ctor : any
 >'hi' : "hi"
 }
 function hof2(f: function(this: number, string): string) {
->hof2 : (f: (this: number, arg1: string) => string) => string
->f : (this: number, arg1: string) => string
+>hof2 : (f: function) => any
+>f : function
+>(this: number, string): string : (this: number, string: any) => string
 >this : number
+>string : any
+> : any
 
     return f(12, 'hullo');
->f(12, 'hullo') : string
->f : (this: number, arg1: string) => string
+>f(12, 'hullo') : number
+>f : (x: number | null, y: number[]) => number
 >12 : 12
 >'hullo' : "hullo"
 }
@@= skipped -29, +37 lines =@@
 >'what' : "what"
 
 var g: function(number, number): number = (n,m) => n + m;
->g : (arg0: number, arg1: number) => number
->(n,m) => n + m : (n: number, m: number) => number
->n : number
->m : number
->n + m : number
->n : number
->m : number
+>g : function
+>(number, number) : any
+>number, number : any
+>number : any
+>number : any
+>number = (n,m) => n + m : (n: any, m: any) => any
+>number : any
+>(n,m) => n + m : (n: any, m: any) => any
+>n : any
+>m : any
+>n + m : any
+>n : any
+>m : any
 
 var most: !string = 'definite';
 >most : string
@@= skipped -14, +20 lines =@@
 
 var postfixdef: number! = 101;
 >postfixdef : number
+>! : boolean
+> : any
 >101 : 101
 
 var postfixopt: number? = undefined;
->postfixopt : number | null
->undefined : undefined
+>postfixopt : number
+>undefined : any
 
 var nns: Array<?number>;
 >nns : (number | null)[]

--- old.typeGuardIntersectionTypes.js
+++ new.typeGuardIntersectionTypes.js
@@= skipped -121, +121 lines =@@
         obj;
     }
 }
-// a type guard for B
 function isB(toTest) {
     return toTest && toTest.b;
 }
-// a function that turns an A into an A & B
 function union(a) {
     if (isB(a)) {
         return a;
@@= skipped -13, +11 lines =@@
         return null;
     }
 }
-// Beast feature detection via user-defined type guards
 function hasLegs(x) { return x && typeof x.legs === 'number'; }
 function hasWings(x) { return x && !!x.wings; }
-// Function to identify a given beast by detecting its features
 function identifyBeast(beast) {
-    // All beasts with legs
     if (hasLegs(beast)) {
-        // All winged beasts with legs
         if (hasWings(beast)) {
             if (beast.legs === 4) {
-                log("pegasus - 4 legs, wings");
+                log(`pegasus - 4 legs, wings`);
             }
             else if (beast.legs === 2) {
-                log("bird - 2 legs, wings");
+                log(`bird - 2 legs, wings`);
             }
             else {
-                log("unknown - ".concat(beast.legs, " legs, wings"));
+                log(`unknown - ${beast.legs} legs, wings`);
             }
         }
-        // All non-winged beasts with legs
         else {
-            log("manbearpig - ".concat(beast.legs, " legs, no wings"));
+            log(`manbearpig - ${beast.legs} legs, no wings`);
         }
     }
-    // All beasts without legs    
     else {
         if (hasWings(beast)) {
-            log("quetzalcoatl - no legs, wings");
+            log(`quetzalcoatl - no legs, wings`);
         }
         else {
-            log("snake - no legs, no wings");
+            log(`snake - no legs, no wings`);
         }
     }
 }
 function beastFoo(beast) {
     if (hasWings(beast) && hasLegs(beast)) {
-        beast; // Winged & Legged
+        beast;
     }
     else {
         beast;
     }
     if (hasLegs(beast) && hasWings(beast)) {
-        beast; // Legged & Winged
+        beast;
     }
 }

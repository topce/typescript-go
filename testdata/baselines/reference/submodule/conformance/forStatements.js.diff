--- old.forStatements.js
+++ new.forStatements.js
@@= skipped -48, +48 lines =@@
 for(var aFunctionInModule: typeof M.F2 = (x) => 'this is a string';;){}
 
 //// [forStatements.js]
-var C = /** @class */ (function () {
-    function C() {
-    }
-    return C;
-}());
-var D = /** @class */ (function () {
-    function D() {
-    }
-    return D;
-}());
+class C {
+    id;
+}
+class D {
+    source;
+    recurse;
+    wrapped;
+}
 function F(x) { return 42; }
 var M;
 (function (M) {
-    var A = /** @class */ (function () {
-        function A() {
-        }
-        return A;
-    }());
+    class A {
+        name;
+    }
     M.A = A;
     function F2(x) { return x.toString(); }
     M.F2 = F2;
@@= skipped -36, +32 lines =@@
 for (var anOtherObjectLiteral = new C();;) { }
 for (var aFunction = F;;) { }
 for (var anOtherFunction = F;;) { }
-for (var aLambda = function (x) { return 2; };;) { }
+for (var aLambda = (x) => 2;;) { }
 for (var aModule = M;;) { }
 for (var aClassInModule = new M.A();;) { }
-for (var aFunctionInModule = function (x) { return 'this is a string'; };;) { }
+for (var aFunctionInModule = (x) => 'this is a string';;) { }

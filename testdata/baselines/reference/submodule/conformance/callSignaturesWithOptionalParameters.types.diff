--- old.callSignaturesWithOptionalParameters.types
+++ new.callSignaturesWithOptionalParameters.types
@@= skipped -109, +109 lines =@@
 >2 : 2
 
 var a: {
->a : { (x?: number): any; foo(x?: number): any; }
+>a : { (x?: number): any; foo: (x?: number) => any; }
 
     (x?: number);
 >x : number
@@= skipped -12, +12 lines =@@
 
 a();
 >a() : any
->a : { (x?: number): any; foo(x?: number): any; }
+>a : { (x?: number): any; foo: (x?: number) => any; }
 
 a(1);
 >a(1) : any
->a : { (x?: number): any; foo(x?: number): any; }
+>a : { (x?: number): any; foo: (x?: number) => any; }
 >1 : 1
 
 a.foo();
 >a.foo() : any
 >a.foo : (x?: number) => any
->a : { (x?: number): any; foo(x?: number): any; }
+>a : { (x?: number): any; foo: (x?: number) => any; }
 >foo : (x?: number) => any
 
 a.foo(1);
 >a.foo(1) : any
 >a.foo : (x?: number) => any
->a : { (x?: number): any; foo(x?: number): any; }
+>a : { (x?: number): any; foo: (x?: number) => any; }
 >foo : (x?: number) => any
 >1 : 1
 
 var b = {
->b : { foo(x?: number): void; a: (x: number, y?: number) => void; b: (x?: number) => void; }
->{    foo(x?: number) { },    a: function foo(x: number, y?: number) { },    b: (x?: number) => { }} : { foo(x?: number): void; a: (x: number, y?: number) => void; b: (x?: number) => void; }
+>b : { foo: (x?: number) => void; a: (x: number, y?: number) => void; b: (x?: number) => void; }
+>{    foo(x?: number) { },    a: function foo(x: number, y?: number) { },    b: (x?: number) => { }} : { foo: (x?: number) => void; a: (x: number, y?: number) => void; b: (x?: number) => void; }
 
     foo(x?: number) { },
 >foo : (x?: number) => void
@@= skipped -44, +44 lines =@@
 b.foo();
 >b.foo() : void
 >b.foo : (x?: number) => void
->b : { foo(x?: number): void; a: (x: number, y?: number) => void; b: (x?: number) => void; }
+>b : { foo: (x?: number) => void; a: (x: number, y?: number) => void; b: (x?: number) => void; }
 >foo : (x?: number) => void
 
 b.foo(1);
 >b.foo(1) : void
 >b.foo : (x?: number) => void
->b : { foo(x?: number): void; a: (x: number, y?: number) => void; b: (x?: number) => void; }
+>b : { foo: (x?: number) => void; a: (x: number, y?: number) => void; b: (x?: number) => void; }
 >foo : (x?: number) => void
 >1 : 1
 
 b.a(1);
 >b.a(1) : void
 >b.a : (x: number, y?: number) => void
->b : { foo(x?: number): void; a: (x: number, y?: number) => void; b: (x?: number) => void; }
+>b : { foo: (x?: number) => void; a: (x: number, y?: number) => void; b: (x?: number) => void; }
 >a : (x: number, y?: number) => void
 >1 : 1
 
 b.a(1, 2);
 >b.a(1, 2) : void
 >b.a : (x: number, y?: number) => void
->b : { foo(x?: number): void; a: (x: number, y?: number) => void; b: (x?: number) => void; }
+>b : { foo: (x?: number) => void; a: (x: number, y?: number) => void; b: (x?: number) => void; }
 >a : (x: number, y?: number) => void
 >1 : 1
 >2 : 2
@@= skipped -28, +28 lines =@@
 b.b();
 >b.b() : void
 >b.b : (x?: number) => void
->b : { foo(x?: number): void; a: (x: number, y?: number) => void; b: (x?: number) => void; }
+>b : { foo: (x?: number) => void; a: (x: number, y?: number) => void; b: (x?: number) => void; }
 >b : (x?: number) => void
 
 b.b(1);
 >b.b(1) : void
 >b.b : (x?: number) => void
->b : { foo(x?: number): void; a: (x: number, y?: number) => void; b: (x?: number) => void; }
+>b : { foo: (x?: number) => void; a: (x: number, y?: number) => void; b: (x?: number) => void; }
 >b : (x?: number) => void
 >1 : 1
 

--- old.taggedTemplateStringsWithManyCallAndMemberExpressions.types
+++ new.taggedTemplateStringsWithManyCallAndMemberExpressions.types
@@= skipped -6, +6 lines =@@
 >subs : number[]
 
     member: {
->member : new (s: string) => { new (n: number): { new (): boolean; }; }
+>member : new (s: string) => new (n: number) => new () => boolean
 
         new (s: string): {
 >s : string
@@= skipped -21, +21 lines =@@
 >new new new f `abc${ 0 }def`.member("hello")(42) === true : boolean
 >new new new f `abc${ 0 }def`.member("hello")(42) : boolean
 >new new f `abc${ 0 }def`.member("hello")(42) : new () => boolean
->new f `abc${ 0 }def`.member("hello") : new (n: number) => { new (): boolean; }
->f `abc${ 0 }def`.member : new (s: string) => { new (n: number): { new (): boolean; }; }
+>new f `abc${ 0 }def`.member("hello") : new (n: number) => new () => boolean
+>f `abc${ 0 }def`.member : new (s: string) => new (n: number) => new () => boolean
 >f `abc${ 0 }def` : I
 >f : I
 >`abc${ 0 }def` : string
 >0 : 0
->member : new (s: string) => { new (n: number): { new (): boolean; }; }
+>member : new (s: string) => new (n: number) => new () => boolean
 >"hello" : "hello"
 >42 : 42
 >true : true

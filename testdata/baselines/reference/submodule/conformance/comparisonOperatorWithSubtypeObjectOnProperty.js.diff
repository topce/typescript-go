--- old.comparisonOperatorWithSubtypeObjectOnProperty.js
+++ new.comparisonOperatorWithSubtypeObjectOnProperty.js
@@= skipped -80, +80 lines =@@
 var rh4 = b2 !== a2;
 
 //// [comparisonOperatorWithSubtypeObjectOnProperty.js]
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
-var Base = /** @class */ (function () {
-    function Base() {
-    }
-    return Base;
-}());
-var Derived = /** @class */ (function (_super) {
-    __extends(Derived, _super);
-    function Derived() {
-        return _super !== null && _super.apply(this, arguments) || this;
-    }
-    return Derived;
-}(Base));
-var A1 = /** @class */ (function () {
-    function A1() {
-    }
-    return A1;
-}());
-var B1 = /** @class */ (function () {
-    function B1() {
-    }
-    return B1;
-}());
-var A2 = /** @class */ (function () {
-    function A2() {
-    }
-    return A2;
-}());
-var B2 = /** @class */ (function (_super) {
-    __extends(B2, _super);
-    function B2() {
-        return _super !== null && _super.apply(this, arguments) || this;
-    }
-    return B2;
-}(A2));
+class Base {
+    a;
+}
+class Derived extends Base {
+    b;
+}
+class A1 {
+    a;
+    b;
+}
+class B1 {
+    a;
+    b;
+}
+class A2 {
+    a;
+}
+class B2 extends A2 {
+    b;
+}
 var a1;
 var a2;
 var b1;

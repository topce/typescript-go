--- old.objectTypesIdentityWithPrivates3.js
+++ new.objectTypesIdentityWithPrivates3.js
@@= skipped -27, +27 lines =@@
 <C4>c3; // Should fail (private x originates in the same declaration, but different types)
 
 //// [objectTypesIdentityWithPrivates3.js]
-var __extends = (this && this.__extends) || (function () {
-    var extendStatics = function (d, b) {
-        extendStatics = Object.setPrototypeOf ||
-            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
-            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
-        return extendStatics(d, b);
-    };
-    return function (d, b) {
-        if (typeof b !== "function" && b !== null)
-            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
-        extendStatics(d, b);
-        function __() { this.constructor = d; }
-        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
-    };
-})();
-var C1 = /** @class */ (function () {
-    function C1() {
-    }
-    return C1;
-}());
-var C2 = /** @class */ (function (_super) {
-    __extends(C2, _super);
-    function C2() {
-        return _super !== null && _super.apply(this, arguments) || this;
-    }
-    return C2;
-}(C1));
+class C1 {
+    x;
+}
+class C2 extends C1 {
+    y;
+}
 var c1;
 c1; // Should succeed (private x originates in the same declaration)
-var C3 = /** @class */ (function () {
-    function C3() {
-    }
-    return C3;
-}());
-var C4 = /** @class */ (function (_super) {
-    __extends(C4, _super);
-    function C4() {
-        return _super !== null && _super.apply(this, arguments) || this;
-    }
-    return C4;
-}(C3));
+class C3 {
+    x; // This T is the difference between C3 and C1
+}
+class C4 extends C3 {
+    y;
+}
 var c3;
 c3; // Should fail (private x originates in the same declaration, but different types)

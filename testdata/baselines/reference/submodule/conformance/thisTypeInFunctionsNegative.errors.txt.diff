--- old.thisTypeInFunctionsNegative.errors.txt
+++ new.thisTypeInFunctionsNegative.errors.txt
@@= skipped -12, +12 lines =@@
 thisTypeInFunctionsNegative.ts(68,1): error TS2684: The 'this' context of type '{ y: string; f: (this: { y: number; }, x: number) => number; }' is not assignable to method's 'this' of type '{ y: number; }'.
   Types of property 'y' are incompatible.
     Type 'string' is not assignable to type 'number'.
-thisTypeInFunctionsNegative.ts(69,1): error TS2684: The 'this' context of type '{ wrongName: number; f: (this: { y: number; }, x: number) => number; }' is not assignable to method's 'this' of type '{ y: number; }'.
-  Property 'y' is missing in type '{ wrongName: number; f: (this: { y: number; }, x: number) => number; }' but required in type '{ y: number; }'.
+thisTypeInFunctionsNegative.ts(69,1): error TS2741: Property 'y' is missing in type '{ wrongName: number; f: (this: { y: number; }, x: number) => number; }' but required in type '{ y: number; }'.
 thisTypeInFunctionsNegative.ts(72,3): error TS2554: Expected 1 arguments, but got 0.
 thisTypeInFunctionsNegative.ts(73,13): error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.
 thisTypeInFunctionsNegative.ts(74,17): error TS2554: Expected 1 arguments, but got 2.
@@= skipped -181, +180 lines =@@
 !!! error TS2684:     Type 'string' is not assignable to type 'number'.
     wrongPropertyName.f(13);
     ~~~~~~~~~~~~~~~~~
-!!! error TS2684: The 'this' context of type '{ wrongName: number; f: (this: { y: number; }, x: number) => number; }' is not assignable to method's 'this' of type '{ y: number; }'.
-!!! error TS2684:   Property 'y' is missing in type '{ wrongName: number; f: (this: { y: number; }, x: number) => number; }' but required in type '{ y: number; }'.
+!!! error TS2741: Property 'y' is missing in type '{ wrongName: number; f: (this: { y: number; }, x: number) => number; }' but required in type '{ y: number; }'.
 !!! related TS2728 thisTypeInFunctionsNegative.ts:63:56: 'y' is declared here.
     
     let c = new C();

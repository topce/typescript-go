--- old.stringLiteralTypesAsTags01.js
+++ new.stringLiteralTypesAsTags01.js
@@= skipped -46, +46 lines =@@
 function hasKind(entity, kind) {
     return entity.kind === kind;
 }
-var x = {
+let x = {
     kind: "A",
     a: 100,
 };
 if (hasKind(x, "A")) {
-    var a = x;
+    let a = x;
 }
 else {
-    var b = x;
+    let b = x;
 }
 if (!hasKind(x, "B")) {
-    var c = x;
+    let c = x;
 }
 else {
-    var d = x;
+    let d = x;
 }
-
-
-//// [stringLiteralTypesAsTags01.d.ts]
-type Kind = "A" | "B";
-interface Entity {
-    kind: Kind;
-}
-interface A extends Entity {
-    kind: "A";
-    a: number;
-}
-interface B extends Entity {
-    kind: "B";
-    b: string;
-}
-declare function hasKind(entity: Entity, kind: "A"): entity is A;
-declare function hasKind(entity: Entity, kind: "B"): entity is B;
-declare function hasKind(entity: Entity, kind: Kind): entity is Entity;
-declare let x: A;

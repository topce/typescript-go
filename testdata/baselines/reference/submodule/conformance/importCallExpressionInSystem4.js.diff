--- old.importCallExpressionInSystem4.js
+++ new.importCallExpressionInSystem4.js
@@= skipped -40, +40 lines =@@
 }
 
 //// [0.js]
-System.register([], function (exports_1, context_1) {
-    "use strict";
-    var B;
-    var __moduleName = context_1 && context_1.id;
-    function foo() { return "foo"; }
-    exports_1("foo", foo);
-    return {
-        setters: [],
-        execute: function () {
-            B = class B {
-                print() { return "I am B"; }
-            };
-            exports_1("B", B);
-        }
-    };
-});
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.B = void 0;
+exports.foo = foo;
+class B {
+    print() { return "I am B"; }
+}
+exports.B = B;
+function foo() { return "foo"; }
 //// [1.js]
-System.register([], function (exports_1, context_1) {
-    "use strict";
-    var __moduleName = context_1 && context_1.id;
-    function backup() { return "backup"; }
-    exports_1("backup", backup);
-    return {
-        setters: [],
-        execute: function () {
-        }
-    };
-});
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.backup = backup;
+function backup() { return "backup"; }
 //// [2.js]
-System.register([], function (exports_1, context_1) {
-    "use strict";
-    var C, D;
-    var __moduleName = context_1 && context_1.id;
-    return {
-        setters: [],
-        execute: function () {
-            C = class C {
-                constructor() {
-                    this.myModule = context_1.import("./0");
-                }
-                method() {
-                    const loadAsync = context_1.import("./0");
-                    this.myModule.then(Zero => {
-                        console.log(Zero.foo());
-                    }, async (err) => {
-                        console.log(err);
-                        let one = await context_1.import("./1");
-                        console.log(one.backup());
-                    });
-                }
-            };
-            D = class D {
-                constructor() {
-                    this.myModule = context_1.import("./0");
-                }
-                method() {
-                    const loadAsync = context_1.import("./0");
-                    this.myModule.then(Zero => {
-                        console.log(Zero.foo());
-                    }, async (err) => {
-                        console.log(err);
-                        let one = await context_1.import("./1");
-                        console.log(one.backup());
-                    });
-                }
-            };
-            exports_1("D", D);
-        }
-    };
-});
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.D = void 0;
+class C {
+    myModule = Promise.resolve().then(() => require("./0"));
+    method() {
+        const loadAsync = Promise.resolve().then(() => require("./0"));
+        this.myModule.then(Zero => {
+            console.log(Zero.foo());
+        }, async err => {
+            console.log(err);
+            let one = await Promise.resolve().then(() => require("./1"));
+            console.log(one.backup());
+        });
+    }
+}
+class D {
+    myModule = Promise.resolve().then(() => require("./0"));
+    method() {
+        const loadAsync = Promise.resolve().then(() => require("./0"));
+        this.myModule.then(Zero => {
+            console.log(Zero.foo());
+        }, async err => {
+            console.log(err);
+            let one = await Promise.resolve().then(() => require("./1"));
+            console.log(one.backup());
+        });
+    }
+}
+exports.D = D;

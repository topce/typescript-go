--- old.comparisonOperatorWithNoRelationshipObjectsOnConstructorSignature.types
+++ new.comparisonOperatorWithNoRelationshipObjectsOnConstructorSignature.types
@@= skipped -23, +23 lines =@@
 }
 
 var a1: { fn(): Base };
->a1 : { fn(): Base; }
+>a1 : { fn: () => Base; }
 >fn : () => Base
 
 var b1: { new (): Base };
@@= skipped -59, +59 lines =@@
 var r1a1 = a1 < b1;
 >r1a1 : boolean
 >a1 < b1 : boolean
->a1 : { fn(): Base; }
+>a1 : { fn: () => Base; }
 >b1 : new () => Base
 
 var r1a2 = a2 < b2;
@@= skipped -43, +43 lines =@@
 >r1b1 : boolean
 >b1 < a1 : boolean
 >b1 : new () => Base
->a1 : { fn(): Base; }
+>a1 : { fn: () => Base; }
 
 var r1b2 = b2 < a2;
 >r1b2 : boolean
@@= skipped -42, +42 lines =@@
 var r2a1 = a1 > b1;
 >r2a1 : boolean
 >a1 > b1 : boolean
->a1 : { fn(): Base; }
+>a1 : { fn: () => Base; }
 >b1 : new () => Base
 
 var r2a2 = a2 > b2;
@@= skipped -43, +43 lines =@@
 >r2b1 : boolean
 >b1 > a1 : boolean
 >b1 : new () => Base
->a1 : { fn(): Base; }
+>a1 : { fn: () => Base; }
 
 var r2b2 = b2 > a2;
 >r2b2 : boolean
@@= skipped -42, +42 lines =@@
 var r3a1 = a1 <= b1;
 >r3a1 : boolean
 >a1 <= b1 : boolean
->a1 : { fn(): Base; }
+>a1 : { fn: () => Base; }
 >b1 : new () => Base
 
 var r3a2 = a2 <= b2;
@@= skipped -43, +43 lines =@@
 >r3b1 : boolean
 >b1 <= a1 : boolean
 >b1 : new () => Base
->a1 : { fn(): Base; }
+>a1 : { fn: () => Base; }
 
 var r3b2 = b2 <= a2;
 >r3b2 : boolean
@@= skipped -42, +42 lines =@@
 var r4a1 = a1 >= b1;
 >r4a1 : boolean
 >a1 >= b1 : boolean
->a1 : { fn(): Base; }
+>a1 : { fn: () => Base; }
 >b1 : new () => Base
 
 var r4a2 = a2 >= b2;
@@= skipped -43, +43 lines =@@
 >r4b1 : boolean
 >b1 >= a1 : boolean
 >b1 : new () => Base
->a1 : { fn(): Base; }
+>a1 : { fn: () => Base; }
 
 var r4b2 = b2 >= a2;
 >r4b2 : boolean
@@= skipped -42, +42 lines =@@
 var r5a1 = a1 == b1;
 >r5a1 : boolean
 >a1 == b1 : boolean
->a1 : { fn(): Base; }
+>a1 : { fn: () => Base; }
 >b1 : new () => Base
 
 var r5a2 = a2 == b2;
@@= skipped -43, +43 lines =@@
 >r5b1 : boolean
 >b1 == a1 : boolean
 >b1 : new () => Base
->a1 : { fn(): Base; }
+>a1 : { fn: () => Base; }
 
 var r5b2 = b2 == a2;
 >r5b2 : boolean
@@= skipped -42, +42 lines =@@
 var r6a1 = a1 != b1;
 >r6a1 : boolean
 >a1 != b1 : boolean
->a1 : { fn(): Base; }
+>a1 : { fn: () => Base; }
 >b1 : new () => Base
 
 var r6a2 = a2 != b2;
@@= skipped -43, +43 lines =@@
 >r6b1 : boolean
 >b1 != a1 : boolean
 >b1 : new () => Base
->a1 : { fn(): Base; }
+>a1 : { fn: () => Base; }
 
 var r6b2 = b2 != a2;
 >r6b2 : boolean
@@= skipped -42, +42 lines =@@
 var r7a1 = a1 === b1;
 >r7a1 : boolean
 >a1 === b1 : boolean
->a1 : { fn(): Base; }
+>a1 : { fn: () => Base; }
 >b1 : new () => Base
 
 var r7a2 = a2 === b2;
@@= skipped -43, +43 lines =@@
 >r7b1 : boolean
 >b1 === a1 : boolean
 >b1 : new () => Base
->a1 : { fn(): Base; }
+>a1 : { fn: () => Base; }
 
 var r7b2 = b2 === a2;
 >r7b2 : boolean
@@= skipped -42, +42 lines =@@
 var r8a1 = a1 !== b1;
 >r8a1 : boolean
 >a1 !== b1 : boolean
->a1 : { fn(): Base; }
+>a1 : { fn: () => Base; }
 >b1 : new () => Base
 
 var r8a2 = a2 !== b2;
@@= skipped -43, +43 lines =@@
 >r8b1 : boolean
 >b1 !== a1 : boolean
 >b1 : new () => Base
->a1 : { fn(): Base; }
+>a1 : { fn: () => Base; }
 
 var r8b2 = b2 !== a2;
 >r8b2 : boolean

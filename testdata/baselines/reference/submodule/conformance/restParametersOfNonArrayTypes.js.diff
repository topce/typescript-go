--- old.restParametersOfNonArrayTypes.js
+++ new.restParametersOfNonArrayTypes.js
@@= skipped -28, +28 lines =@@
 
 //// [restParametersOfNonArrayTypes.js]
 // Rest parameters must be an array type if they have a type annotation, so all these are errors
-function foo() {
-    var x = [];
-    for (var _i = 0; _i < arguments.length; _i++) {
-        x[_i] = arguments[_i];
-    }
+function foo(...x) { }
+var f = function foo(...x) { };
+var f2 = (...x, ...y) => { };
+class C {
+    foo(...x) { }
 }
-var f = function foo() {
-    var x = [];
-    for (var _i = 0; _i < arguments.length; _i++) {
-        x[_i] = arguments[_i];
-    }
-};
-var f2 = function () {
-    var y = [];
-    for (var _i = 1; _i < arguments.length; _i++) {
-        y[_i - 1] = arguments[_i];
-    }
-};
-var C = /** @class */ (function () {
-    function C() {
-    }
-    C.prototype.foo = function () {
-        var x = [];
-        for (var _i = 0; _i < arguments.length; _i++) {
-            x[_i] = arguments[_i];
-        }
-    };
-    return C;
-}());
 var a;
 var b = {
-    foo: function () {
-        var x = [];
-        for (var _i = 0; _i < arguments.length; _i++) {
-            x[_i] = arguments[_i];
-        }
-    },
-    a: function foo() {
-        var y = [];
-        for (var _i = 1; _i < arguments.length; _i++) {
-            y[_i - 1] = arguments[_i];
-        }
-    },
-    b: function () {
-        var x = [];
-        for (var _i = 0; _i < arguments.length; _i++) {
-            x[_i] = arguments[_i];
-        }
-    }
+    foo(...x) { },
+    a: function foo(...x, ...y) { },
+    b: (...x) => { }
 };

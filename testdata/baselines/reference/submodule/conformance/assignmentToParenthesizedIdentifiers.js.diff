--- old.assignmentToParenthesizedIdentifiers.js
+++ new.assignmentToParenthesizedIdentifiers.js
@@= skipped -74, +74 lines =@@
 
 //// [assignmentToParenthesizedIdentifiers.js]
 var x;
-x = 3; // OK
-(x) = 3; // OK
-x = ''; // Error
-(x) = ''; // Error
+x = 3;
+(x) = 3;
+x = '';
+(x) = '';
 var M;
 (function (M) {
 })(M || (M = {}));
-M.y = 3; // OK
-(M).y = 3; // OK
-(M.y) = 3; // OK
-M.y = ''; // Error
-(M).y = ''; // Error
-(M.y) = ''; // Error
-M = { y: 3 }; // Error
-(M) = { y: 3 }; // Error
+M.y = 3;
+(M).y = 3;
+(M.y) = 3;
+M.y = '';
+(M).y = '';
+(M.y) = '';
+M = { y: 3 };
+(M) = { y: 3 };
 var M2;
 (function (M2) {
-    var M3;
+    let M3;
     (function (M3) {
     })(M3 = M2.M3 || (M2.M3 = {}));
-    M3 = { x: 3 }; // Error
+    M3 = { x: 3 };
 })(M2 || (M2 = {}));
-M2.M3 = { x: 3 }; // OK
-(M2).M3 = { x: 3 }; // OK
-(M2.M3) = { x: 3 }; // OK
-M2.M3 = { x: '' }; // Error
-(M2).M3 = { x: '' }; // Error
-(M2.M3) = { x: '' }; // Error
+M2.M3 = { x: 3 };
+(M2).M3 = { x: 3 };
+(M2.M3) = { x: 3 };
+M2.M3 = { x: '' };
+(M2).M3 = { x: '' };
+(M2.M3) = { x: '' };
 function fn() { }
-fn = function () { return 3; }; // Bug 823548: Should be error (fn is not a reference)
-(fn) = function () { return 3; }; // Should be error
+fn = () => 3;
+(fn) = () => 3;
 function fn2(x, y) {
     x = 3;
-    (x) = 3; // OK
-    x = ''; // Error
-    (x) = ''; // Error
-    (y).t = 3; // OK
-    (y.t) = 3; // OK
-    (y).t = ''; // Error
-    (y.t) = ''; // Error
-    y['t'] = 3; // OK
-    (y)['t'] = 3; // OK
-    (y['t']) = 3; // OK
-    y['t'] = ''; // Error
-    (y)['t'] = ''; // Error
-    (y['t']) = ''; // Error
+    (x) = 3;
+    x = '';
+    (x) = '';
+    (y).t = 3;
+    (y.t) = 3;
+    (y).t = '';
+    (y.t) = '';
+    y['t'] = 3;
+    (y)['t'] = 3;
+    (y['t']) = 3;
+    y['t'] = '';
+    (y)['t'] = '';
+    (y['t']) = '';
 }
 var E;
 (function (E) {
     E[E["A"] = 0] = "A";
 })(E || (E = {}));
-E = undefined; // Error
-(E) = undefined; // Error
-var C = /** @class */ (function () {
-    function C() {
-    }
-    return C;
-}());
-C = undefined; // Error
-(C) = undefined; // Error
+E = undefined;
+(E) = undefined;
+class C {
+}
+C = undefined;
+(C) = undefined;

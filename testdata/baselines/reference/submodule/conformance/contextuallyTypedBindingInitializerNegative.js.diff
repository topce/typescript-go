--- old.contextuallyTypedBindingInitializerNegative.js
+++ new.contextuallyTypedBindingInitializerNegative.js
@@= skipped -29, +29 lines =@@
 
 
 //// [contextuallyTypedBindingInitializerNegative.js]
-function f(_a) {
-    var _b = _a.show, showRename = _b === void 0 ? function (v) { return v; } : _b;
-}
-function f2(_a) {
-    var _b = _a["show"], showRename = _b === void 0 ? function (v) { return v; } : _b;
-}
-function f3(_a) {
-    var _b = _a["show"], showRename = _b === void 0 ? function (v) { return v; } : _b;
-}
-function ff(_a) {
-    var _b = _a.nested, nestedRename = _b === void 0 ? { show: function (v) { return v; } } : _b;
-}
-var _a = { stringIdentity: function (x) { return x; } }.stringIdentity, id = _a === void 0 ? function (arg) { return arg.length; } : _a;
-function g(_a) {
-    var _b = _a.prop, prop = _b === void 0 ? [101, 1234] : _b;
-}
-function h(_a) {
-    var _b = _a.prop, prop = _b === void 0 ? "baz" : _b;
-}
+function f({ show: showRename = v => v }) { }
+function f2({ "show": showRename = v => v }) { }
+function f3({ ["show"]: showRename = v => v }) { }
+function ff({ nested: nestedRename = { show: v => v } }) { }
+let { stringIdentity: id = arg => arg.length } = { stringIdentity: x => x };
+function g({ prop = [101, 1234] }) { }
+function h({ prop = "baz" }) { }

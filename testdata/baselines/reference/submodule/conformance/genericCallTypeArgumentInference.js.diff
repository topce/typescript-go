--- old.genericCallTypeArgumentInference.js
+++ new.genericCallTypeArgumentInference.js
@@= skipped -107, +107 lines =@@
 }
 var r2 = foo2('', 1); // number
 var r3 = foo2b(1); // {}
-var C = /** @class */ (function () {
-    function C(t, u) {
+class C {
+    t;
+    u;
+    constructor(t, u) {
         this.t = t;
         this.u = u;
     }
-    C.prototype.foo = function (t, u) {
+    foo(t, u) {
         return t;
-    };
-    C.prototype.foo2 = function (t, u) {
+    }
+    foo2(t, u) {
         return u;
-    };
-    C.prototype.foo3 = function (t, u) {
+    }
+    foo3(t, u) {
         return t;
-    };
-    C.prototype.foo4 = function (t, u) {
+    }
+    foo4(t, u) {
         return t;
-    };
-    C.prototype.foo5 = function (t, u) {
+    }
+    foo5(t, u) {
         return t;
-    };
-    C.prototype.foo6 = function () {
+    }
+    foo6() {
         var x;
         return x;
-    };
-    C.prototype.foo7 = function (u) {
+    }
+    foo7(u) {
         var x;
         return x;
-    };
-    C.prototype.foo8 = function () {
+    }
+    foo8() {
         var x;
         return x;
-    };
-    return C;
-}());
+    }
+}
 var c = new C('', 1);
 var r4 = c.foo('', 1); // string
 var r5 = c.foo2('', 1); // number

--- old.constraintSatisfactionWithAny.types
+++ new.constraintSatisfactionWithAny.types
@@= skipped -13, +13 lines =@@
 
 //function foo3<T extends T[]>(x: T): T { return null; }
 function foo4<T extends <T>(x: T) => void>(x: T): T { return null; }
->foo4 : <T extends <T_1>(x: T_1) => void>(x: T) => T
+>foo4 : <T extends <T>(x: T) => void>(x: T) => T
 >x : T
 >x : T
 
@@= skipped -20, +20 lines =@@
 //foo3(a);
 foo4(a);
 >foo4(a) : any
->foo4 : <T extends <T_1>(x: T_1) => void>(x: T) => T
+>foo4 : <T extends <T>(x: T) => void>(x: T) => T
 >a : any
 
 var b: number;
@@= skipped -19, +19 lines =@@
 //foo3<any>(b);
 foo4<any>(b);
 >foo4<any>(b) : any
->foo4 : <T extends <T_1>(x: T_1) => void>(x: T) => T
+>foo4 : <T extends <T>(x: T) => void>(x: T) => T
 >b : number
 
 //function foo5<T extends String, U extends T>(x: T, y: U): T { return null; }

--- old.uniqueSymbolsDeclarationsErrors.js
+++ new.uniqueSymbolsDeclarationsErrors.js
@@= skipped -65, +65 lines =@@
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.ClassWithPrivateNamedAccessors = exports.ClassWithPrivateNamedMethods = exports.ClassWithPrivateNamedProperties = exports.classExpression = exports.obj = void 0;
 exports.funcInferredReturnType = funcInferredReturnType;
-// not allowed when emitting declarations
 exports.obj = {
     method1(p) {
         return p;
@@= skipped -22, +21 lines =@@
     return obj;
 }
 class ClassWithPrivateNamedProperties {
+    [s];
+    static [s];
 }
 exports.ClassWithPrivateNamedProperties = ClassWithPrivateNamedProperties;
 class ClassWithPrivateNamedMethods {
@@= skipped -14, +16 lines =@@
     static set [s](v) { }
 }
 exports.ClassWithPrivateNamedAccessors = ClassWithPrivateNamedAccessors;
-
-
-//// [uniqueSymbolsDeclarationsErrors.d.ts]
-declare const s: unique symbol;
-interface I {
-    readonly readonlyType: unique symbol;
-}
-export declare const obj: {
-    method1(p: typeof s): typeof s;
-    method2(p: I["readonlyType"]): I["readonlyType"];
-};
-export declare const classExpression: {
-    new (): {
-        method1(p: typeof s): typeof s;
-        method2(p: I["readonlyType"]): I["readonlyType"];
-    };
-};
-export declare function funcInferredReturnType(obj: {
-    method(p: typeof s): void;
-}): {
-    method(p: typeof s): void;
-};
-export interface InterfaceWithPrivateNamedProperties {
-    [s]: any;
-}
-export interface InterfaceWithPrivateNamedMethods {
-    [s](): any;
-}
-export type TypeLiteralWithPrivateNamedProperties = {
-    [s]: any;
-};
-export type TypeLiteralWithPrivateNamedMethods = {
-    [s](): any;
-};
-export declare class ClassWithPrivateNamedProperties {
-    [s]: any;
-    static [s]: any;
-}
-export declare class ClassWithPrivateNamedMethods {
-    [s](): void;
-    static [s](): void;
-}
-export declare class ClassWithPrivateNamedAccessors {
-    get [s](): any;
-    set [s](v: any);
-    static get [s](): any;
-    static set [s](v: any);
-}
-export {};

//// [tests/cases/conformance/externalModules/typeOnly/namespaceImportTypeQuery.ts] ////

=== /a.ts ===
class A {}
>A : A

export type { A };
>A : A

export class B {};
>B : B

=== /b.ts ===
import * as types from './a';
>types : typeof import("/a")

let A: typeof types.A;
>A : typeof A
>types.A : typeof A
>types : typeof import("/a")
>A : typeof A

let B: typeof types.B;
>B : typeof B
>types.B : typeof B
>types : typeof import("/a")
>B : typeof B

let t: typeof types = {
>t : typeof import("/a")
>types : typeof import("/a")
>{  // error: while you can ask for `typeof types.A`,  // `typeof types` does not include `A`  A: undefined as any,  B: undefined as any,} : { A: any; B: any; }

  // error: while you can ask for `typeof types.A`,
  // `typeof types` does not include `A`
  A: undefined as any,
>A : any
>undefined as any : any
>undefined : undefined

  B: undefined as any,
>B : any
>undefined as any : any
>undefined : undefined
}


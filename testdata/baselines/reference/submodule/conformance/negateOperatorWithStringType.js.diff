--- old.negateOperatorWithStringType.js
+++ new.negateOperatorWithStringType.js
@@= skipped -42, +42 lines =@@
 -objA.a,M.n;
 
 //// [negateOperatorWithStringType.js]
-// - operator on string type
 var STRING;
 var STRING1 = ["", "abc"];
 function foo() { return "abc"; }
-var A = /** @class */ (function () {
-    function A() {
-    }
-    A.foo = function () { return ""; };
-    return A;
-}());
+class A {
+    a;
+    static foo() { return ""; }
+}
 var M;
 (function (M) {
 })(M || (M = {}));
 var objA = new A();
-// string type var
 var ResultIsNumber1 = -STRING;
 var ResultIsNumber2 = -STRING1;
-// string type literal
 var ResultIsNumber3 = -"";
 var ResultIsNumber4 = -{ x: "", y: "" };
-var ResultIsNumber5 = -{ x: "", y: function (s) { return s; } };
-// string type expressions
+var ResultIsNumber5 = -{ x: "", y: (s) => { return s; } };
 var ResultIsNumber6 = -objA.a;
 var ResultIsNumber7 = -M.n;
 var ResultIsNumber8 = -STRING1[0];
@@= skipped -29, +23 lines =@@
 var ResultIsNumber10 = -A.foo();
 var ResultIsNumber11 = -(STRING + STRING);
 var ResultIsNumber12 = -STRING.charAt(0);
-// miss assignment operators
 -"";
 -STRING;
 -STRING1;

--- old.arbitraryModuleNamespaceIdentifiers_module(module=umd).js
+++ new.arbitraryModuleNamespaceIdentifiers_module(module=umd).js
@@= skipped -32, +32 lines =@@
 
 
 //// [arbitraryModuleNamespaceIdentifiers_module.js]
-(function (factory) {
-    if (typeof module === "object" && typeof module.exports === "object") {
-        var v = factory(require, exports);
-        if (v !== undefined) module.exports = v;
-    }
-    else if (typeof define === "function" && define.amd) {
-        define(["require", "exports", "./arbitraryModuleNamespaceIdentifiers_module", "./arbitraryModuleNamespaceIdentifiers_module", "./arbitraryModuleNamespaceIdentifiers_module", "./arbitraryModuleNamespaceIdentifiers_module", "./arbitraryModuleNamespaceIdentifiers_module"], factory);
-    }
-})(function (require, exports) {
-    "use strict";
-    Object.defineProperty(exports, "__esModule", { value: true });
-    exports["<Z>"] = exports["<Y>"] = exports["<X>"] = void 0;
-    const someValue = "someValue";
-    exports["<X>"] = someValue;
-    const arbitraryModuleNamespaceIdentifiers_module_1 = require("./arbitraryModuleNamespaceIdentifiers_module");
-    if (arbitraryModuleNamespaceIdentifiers_module_1["<X>"] !== "someValue")
-        throw "should be someValue";
-    var arbitraryModuleNamespaceIdentifiers_module_2 = require("./arbitraryModuleNamespaceIdentifiers_module");
-    Object.defineProperty(exports, "<Y>", { enumerable: true, get: function () { return arbitraryModuleNamespaceIdentifiers_module_2["<X>"]; } });
-    const arbitraryModuleNamespaceIdentifiers_module_3 = require("./arbitraryModuleNamespaceIdentifiers_module");
-    if (arbitraryModuleNamespaceIdentifiers_module_3["<Y>"] !== "someValue")
-        throw "should be someValue";
-    exports["<Z>"] = require("./arbitraryModuleNamespaceIdentifiers_module");
-    const arbitraryModuleNamespaceIdentifiers_module_4 = require("./arbitraryModuleNamespaceIdentifiers_module");
-    if (arbitraryModuleNamespaceIdentifiers_module_4["<Z>"]["<X>"] !== "someValue")
-        throw "should be someValue";
-    if (arbitraryModuleNamespaceIdentifiers_module_4["<Z>"]["<Y>"] !== "someValue")
-        throw "should be someValue";
-    if (arbitraryModuleNamespaceIdentifiers_module_4["<Z>"]["<Z>"] !== arbitraryModuleNamespaceIdentifiers_module_4["<Z>"])
-        throw "should be export namespace";
-    const importTest = "expect error about someType";
-    const reimportTest = "expect error about someType";
-    const importStarTestA = "expect error about otherType";
-});
-
-
-//// [arbitraryModuleNamespaceIdentifiers_module.d.ts]
-declare const someValue = "someValue";
-type someType = "someType";
-export { someValue as "<X>" };
-export { "<X>" as "<Y>" } from "./arbitraryModuleNamespaceIdentifiers_module";
-export * as "<Z>" from "./arbitraryModuleNamespaceIdentifiers_module";
-export { type someType as "<A>" };
-export { type "<A>" as "<B>" } from "./arbitraryModuleNamespaceIdentifiers_module";
-export type * as "<C>" from "./arbitraryModuleNamespaceIdentifiers_module";
-export type otherType = "otherType";
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports["<Z>"] = exports["<Y>"] = exports["<X>"] = void 0;
+const someValue = "someValue";
+exports["<X>"] = someValue;
+const arbitraryModuleNamespaceIdentifiers_module_1 = require("./arbitraryModuleNamespaceIdentifiers_module");
+if (arbitraryModuleNamespaceIdentifiers_module_1["<X>"] !== "someValue")
+    throw "should be someValue";
+const arbitraryModuleNamespaceIdentifiers_module_2 = require("./arbitraryModuleNamespaceIdentifiers_module");
+Object.defineProperty(exports, "<Y>", { enumerable: true, get: function () { return arbitraryModuleNamespaceIdentifiers_module_2["<X>"]; } });
+const arbitraryModuleNamespaceIdentifiers_module_3 = require("./arbitraryModuleNamespaceIdentifiers_module");
+if (arbitraryModuleNamespaceIdentifiers_module_3["<Y>"] !== "someValue")
+    throw "should be someValue";
+exports["<Z>"] = require("./arbitraryModuleNamespaceIdentifiers_module");
+const arbitraryModuleNamespaceIdentifiers_module_4 = require("./arbitraryModuleNamespaceIdentifiers_module");
+if (arbitraryModuleNamespaceIdentifiers_module_4["<Z>"]["<X>"] !== "someValue")
+    throw "should be someValue";
+if (arbitraryModuleNamespaceIdentifiers_module_4["<Z>"]["<Y>"] !== "someValue")
+    throw "should be someValue";
+if (arbitraryModuleNamespaceIdentifiers_module_4["<Z>"]["<Z>"] !== arbitraryModuleNamespaceIdentifiers_module_4["<Z>"])
+    throw "should be export namespace";
+const importTest = "expect error about someType";
+const reimportTest = "expect error about someType";
+const importStarTestA = "expect error about otherType";

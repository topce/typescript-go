--- old.objectRest.types
+++ new.objectRest.types
@@= skipped -185, +185 lines =@@
 
 var { removed, ...removableRest2 } = i;
 >removed : string
->removableRest2 : { m(): void; remainder: string; }
+>removableRest2 : { m: () => void; remainder: string; }
 >i : I
 
 let computed = 'b';
@@= skipped -33, +33 lines =@@
 >o : { a: number; b: string; }
 
 var noContextualType = ({ aNumber = 12, ...notEmptyObject }) => aNumber + notEmptyObject.anythingGoes;
->noContextualType : ({ aNumber, ...notEmptyObject }: { [x: string]: any; aNumber?: number; }) => any
->({ aNumber = 12, ...notEmptyObject }) => aNumber + notEmptyObject.anythingGoes : ({ aNumber, ...notEmptyObject }: { [x: string]: any; aNumber?: number; }) => any
+>noContextualType : (__0: { [x: string]: any; aNumber?: number; }) => any
+>({ aNumber = 12, ...notEmptyObject }) => aNumber + notEmptyObject.anythingGoes : (__0: { [x: string]: any; aNumber?: number; }) => any
 >aNumber : number
 >12 : 12
 >notEmptyObject : { [x: string]: any; }

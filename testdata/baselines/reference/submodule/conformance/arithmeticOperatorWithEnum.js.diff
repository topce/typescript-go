--- old.arithmeticOperatorWithEnum.js
+++ new.arithmeticOperatorWithEnum.js
@@= skipped -152, +152 lines =@@
 var rj12 = 1 | E.b;
 
 //// [arithmeticOperatorWithEnum.js]
-// operands of an enum type are treated as having the primitive type Number.
 var E;
 (function (E) {
     E[E["a"] = 0] = "a";
@@= skipped -9, +8 lines =@@
 var a;
 var b;
 var c;
-// operator *
 var ra1 = c * a;
 var ra2 = c * b;
 var ra3 = c * c;
@@= skipped -13, +12 lines =@@
 var ra10 = a * E.b;
 var ra11 = b * E.b;
 var ra12 = 1 * E.b;
-// operator /
 var rb1 = c / a;
 var rb2 = c / b;
 var rb3 = c / c;
@@= skipped -13, +12 lines =@@
 var rb10 = a / E.b;
 var rb11 = b / E.b;
 var rb12 = 1 / E.b;
-// operator %
 var rc1 = c % a;
 var rc2 = c % b;
 var rc3 = c % c;
@@= skipped -13, +12 lines =@@
 var rc10 = a % E.b;
 var rc11 = b % E.b;
 var rc12 = 1 % E.b;
-// operator -
 var rd1 = c - a;
 var rd2 = c - b;
 var rd3 = c - c;
@@= skipped -13, +12 lines =@@
 var rd10 = a - E.b;
 var rd11 = b - E.b;
 var rd12 = 1 - E.b;
-// operator <<
 var re1 = c << a;
 var re2 = c << b;
 var re3 = c << c;
@@= skipped -13, +12 lines =@@
 var re10 = a << E.b;
 var re11 = b << E.b;
 var re12 = 1 << E.b;
-// operator >>
 var rf1 = c >> a;
 var rf2 = c >> b;
 var rf3 = c >> c;
@@= skipped -13, +12 lines =@@
 var rf10 = a >> E.b;
 var rf11 = b >> E.b;
 var rf12 = 1 >> E.b;
-// operator >>>
 var rg1 = c >>> a;
 var rg2 = c >>> b;
 var rg3 = c >>> c;
@@= skipped -13, +12 lines =@@
 var rg10 = a >>> E.b;
 var rg11 = b >>> E.b;
 var rg12 = 1 >>> E.b;
-// operator &
 var rh1 = c & a;
 var rh2 = c & b;
 var rh3 = c & c;
@@= skipped -13, +12 lines =@@
 var rh10 = a & E.b;
 var rh11 = b & E.b;
 var rh12 = 1 & E.b;
-// operator ^
 var ri1 = c ^ a;
 var ri2 = c ^ b;
 var ri3 = c ^ c;
@@= skipped -13, +12 lines =@@
 var ri10 = a ^ E.b;
 var ri11 = b ^ E.b;
 var ri12 = 1 ^ E.b;
-// operator |
 var rj1 = c | a;
 var rj2 = c | b;
 var rj3 = c | c;

--- old.exportImportAlias.types
+++ new.exportImportAlias.types
@@= skipped -28, +28 lines =@@
 >C : typeof C
 
     export import a = A;
->a : typeof a
->A : typeof a
+>a : typeof A
+>A : typeof A
 }
 
 var a: string = C.a.x;
@@= skipped -16, +16 lines =@@
 >b : { x: number; y: number; }
 >x : number
 >y : number
->new C.a.Point(0, 0) : A.Point
->C.a.Point : typeof A.Point
+>new C.a.Point(0, 0) : Point
+>C.a.Point : typeof Point
 >C.a : typeof A
 >C : typeof C
 >a : typeof A
->Point : typeof A.Point
+>Point : typeof Point
 >0 : 0
 >0 : 0
 
@@= skipped -47, +47 lines =@@
 
     // 'y' should be a fundule here
     export import y = X.Y;
->y : typeof y
+>y : typeof Y
 >X : typeof X
->Y : typeof y
+>Y : typeof Y
 }
 
 var m: number = Z.y();
 >m : number
 >Z.y() : number
->Z.y : typeof X.Y
+>Z.y : typeof Y
 >Z : typeof Z
->y : typeof X.Y
+>y : typeof Y
 
 var n: { x: number; y: number; } = new Z.y.Point(0, 0);
 >n : { x: number; y: number; }
 >x : number
 >y : number
->new Z.y.Point(0, 0) : X.Y.Point
->Z.y.Point : typeof X.Y.Point
->Z.y : typeof X.Y
+>new Z.y.Point(0, 0) : Point
+>Z.y.Point : typeof Point
+>Z.y : typeof Y
 >Z : typeof Z
->y : typeof X.Y
->Point : typeof X.Y.Point
+>y : typeof Y
+>Point : typeof Point
 >0 : 0
 >0 : 0
 
@@= skipped -56, +56 lines =@@
 >M : typeof M
 
     export import D = K.L;
->D : typeof D
+>D : typeof L
 >K : typeof K
->L : D
+>L : L
 }
 
 var o: { name: string };
@@= skipped -11, +11 lines =@@
 
 var o = new M.D('Hello');
 >o : { name: string; }
->new M.D('Hello') : K.L
->M.D : typeof K.L
+>new M.D('Hello') : L
+>M.D : typeof L
 >M : typeof M
->D : typeof K.L
+>D : typeof L
 >'Hello' : "Hello"
 
 var p: { x: number; y: number; }

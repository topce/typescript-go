--- old.numericIndexerConstrainsPropertyDeclarations.types
+++ new.numericIndexerConstrainsPropertyDeclarations.types
@@= skipped -122, +122 lines =@@
 }
 
 var a: {
->a : { (): string; (x: any): number; [x: number]: string; a: string; b: number; c: () => {}; d: string; e: number; 1: string; 2: number; foo(): string; "3.0": string; "4.0": number; f: MyNumber; }
+>a : { (): string; (x: any): number; [x: number]: string; a: string; b: number; c: () => {}; d: string; e: number; 1.0: string; 2.0: number; foo: () => string; "3.0": string; "4.0": number; f: MyNumber; }
 
     [x: number]: string;
 >x : number
@@= skipped -47, +47 lines =@@
 var b: { [x: number]: string; } = {
 >b : { [x: number]: string; }
 >x : number
->{    a: '',    b: 1,     c: () => { },     "d": '',     "e": 1,     1.0: '',    2.0: 1,     "3.0": '',     "4.0": 1,     f: <Myn>null,     get X() {         return '';    },    set X(v) { },     foo() {         return '';    }} : { a: string; b: number; c: () => void; d: string; e: number; 1: string; 2: number; "3.0": string; "4.0": number; f: Myn; X: string; foo(): string; }
+>{    a: '',    b: 1,     c: () => { },     "d": '',     "e": 1,     1.0: '',    2.0: 1,     "3.0": '',     "4.0": 1,     f: <Myn>null,     get X() {         return '';    },    set X(v) { },     foo() {         return '';    }} : { a: string; b: number; c: () => void; d: string; e: number; 1.0: string; 2.0: number; "3.0": string; "4.0": number; f: Myn; X: string; foo: () => string; }
 
     a: '',
 >a : string

--- old.classStaticBlock22(target=esnext).js
+++ new.classStaticBlock22(target=esnext).js
@@= skipped -76, +76 lines =@@
 let await;
 class C {
     static {
-        let await; // illegal, cannot declare a new binding for await
+        let await;
     }
     static {
-        let { await } = {}; // illegal, cannot declare a new binding for await
+        let { await } = {};
     }
     static {
-        let { await: other } = {}; // legal
+        let { await: other } = {};
     }
     static {
-        let await; // illegal, cannot declare a new binding for await
+        let await;
     }
     static {
         function await() { }
-        ; // illegal
+        ;
     }
     static {
         class await {
         }
-        ; // illegal
+        ;
     }
     static {
         class D {
-            await = 1; // legal
-            x = await; // legal (initializers have an implicit function boundary)
+            await = 1;
+            x = await;
         }
         ;
     }
     static {
-        (function await() { }); // legal, 'await' in function expression name not bound inside of static block
+        (function await() { });
     }
     static {
         (class await {
-        }); // legal, 'await' in class expression name not bound inside of static block
+        });
     }
     static {
-        (function () { return await; }); // legal, 'await' is inside of a new function boundary
+        (function () { return await; });
     }
     static {
-        (() => await); // legal, 'await' is inside of a new function boundary
+        (() => await);
     }
     static {
         class E {

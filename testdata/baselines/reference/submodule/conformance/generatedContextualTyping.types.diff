--- old.generatedContextualTyping.types
+++ new.generatedContextualTyping.types
@@= skipped -0, +0 lines =@@
 //// [tests/cases/conformance/expressions/contextualTyping/generatedContextualTyping.ts] ////
 
-=== Performance Stats ===
-Type Count: 1,000
-
 === generatedContextualTyping.ts ===
 class Base { private p; }
 >Base : Base
@@= skipped -1056, +1053 lines =@@
 >d2 : Derived2
 
 function x124(parm: { (): Base[]; } = () => [d1, d2]) { }
->x124 : (parm?: { (): Base[]; }) => void
+>x124 : (parm?: () => Base[]) => void
 >parm : () => Base[]
 >() => [d1, d2] : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
@@= skipped -8, +8 lines =@@
 >d2 : Derived2
 
 function x125(parm: { (): Base[]; } = function() { return [d1, d2] }) { }
->x125 : (parm?: { (): Base[]; }) => void
+>x125 : (parm?: () => Base[]) => void
 >parm : () => Base[]
 >function() { return [d1, d2] } : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
@@= skipped -8, +8 lines =@@
 >d2 : Derived2
 
 function x126(parm: { (): Base[]; } = function named() { return [d1, d2] }) { }
->x126 : (parm?: { (): Base[]; }) => void
+>x126 : (parm?: () => Base[]) => void
 >parm : () => Base[]
 >function named() { return [d1, d2] } : () => (Derived1 | Derived2)[]
 >named : () => (Derived1 | Derived2)[]
@@= skipped -16, +16 lines =@@
 >d2 : Derived2
 
 function x128(parm: Array<Base> = [d1, d2]) { }
->x128 : (parm?: Array<Base>) => void
+>x128 : (parm?: Base[]) => void
 >parm : Base[]
 >[d1, d2] : (Derived1 | Derived2)[]
 >d1 : Derived1
@@= skipped -66, +66 lines =@@
 >d2 : Derived2
 
 function x136(): { (): Base[]; } { return () => [d1, d2]; }
->x136 : () => { (): Base[]; }
+>x136 : () => () => Base[]
 >() => [d1, d2] : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
 >d1 : Derived1
 >d2 : Derived2
 
 function x137(): { (): Base[]; } { return function() { return [d1, d2] }; }
->x137 : () => { (): Base[]; }
+>x137 : () => () => Base[]
 >function() { return [d1, d2] } : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
 >d1 : Derived1
 >d2 : Derived2
 
 function x138(): { (): Base[]; } { return function named() { return [d1, d2] }; }
->x138 : () => { (): Base[]; }
+>x138 : () => () => Base[]
 >function named() { return [d1, d2] } : () => (Derived1 | Derived2)[]
 >named : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
@@= skipped -28, +28 lines =@@
 >d2 : Derived2
 
 function x140(): Array<Base> { return [d1, d2]; }
->x140 : () => Array<Base>
+>x140 : () => Base[]
 >[d1, d2] : (Derived1 | Derived2)[]
 >d1 : Derived1
 >d2 : Derived2
@@= skipped -74, +74 lines =@@
 >d2 : Derived2
 
 function x148(): { (): Base[]; } { return () => [d1, d2]; return () => [d1, d2]; }
->x148 : () => { (): Base[]; }
+>x148 : () => () => Base[]
 >() => [d1, d2] : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
 >d1 : Derived1
@@= skipped -11, +11 lines =@@
 >d2 : Derived2
 
 function x149(): { (): Base[]; } { return function() { return [d1, d2] }; return function() { return [d1, d2] }; }
->x149 : () => { (): Base[]; }
+>x149 : () => () => Base[]
 >function() { return [d1, d2] } : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
 >d1 : Derived1
@@= skipped -11, +11 lines =@@
 >d2 : Derived2
 
 function x150(): { (): Base[]; } { return function named() { return [d1, d2] }; return function named() { return [d1, d2] }; }
->x150 : () => { (): Base[]; }
+>x150 : () => () => Base[]
 >function named() { return [d1, d2] } : () => (Derived1 | Derived2)[]
 >named : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
@@= skipped -22, +22 lines =@@
 >d2 : Derived2
 
 function x152(): Array<Base> { return [d1, d2]; return [d1, d2]; }
->x152 : () => Array<Base>
+>x152 : () => Base[]
 >[d1, d2] : (Derived1 | Derived2)[]
 >d1 : Derived1
 >d2 : Derived2
@@= skipped -85, +85 lines =@@
 >d2 : Derived2
 
 var x160: () => { (): Base[]; } = () => { return () => [d1, d2]; };
->x160 : () => { (): Base[]; }
+>x160 : () => () => Base[]
 >() => { return () => [d1, d2]; } : () => () => (Derived1 | Derived2)[]
 >() => [d1, d2] : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
@@= skipped -8, +8 lines =@@
 >d2 : Derived2
 
 var x161: () => { (): Base[]; } = () => { return function() { return [d1, d2] }; };
->x161 : () => { (): Base[]; }
+>x161 : () => () => Base[]
 >() => { return function() { return [d1, d2] }; } : () => () => (Derived1 | Derived2)[]
 >function() { return [d1, d2] } : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
@@= skipped -8, +8 lines =@@
 >d2 : Derived2
 
 var x162: () => { (): Base[]; } = () => { return function named() { return [d1, d2] }; };
->x162 : () => { (): Base[]; }
+>x162 : () => () => Base[]
 >() => { return function named() { return [d1, d2] }; } : () => () => (Derived1 | Derived2)[]
 >function named() { return [d1, d2] } : () => (Derived1 | Derived2)[]
 >named : () => (Derived1 | Derived2)[]
@@= skipped -16, +16 lines =@@
 >d2 : Derived2
 
 var x164: () => Array<Base> = () => { return [d1, d2]; };
->x164 : () => Array<Base>
+>x164 : () => Base[]
 >() => { return [d1, d2]; } : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
 >d1 : Derived1
@@= skipped -69, +69 lines =@@
 >d2 : Derived2
 
 var x172: () => { (): Base[]; } = function() { return () => [d1, d2]; };
->x172 : () => { (): Base[]; }
+>x172 : () => () => Base[]
 >function() { return () => [d1, d2]; } : () => () => (Derived1 | Derived2)[]
 >() => [d1, d2] : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
@@= skipped -8, +8 lines =@@
 >d2 : Derived2
 
 var x173: () => { (): Base[]; } = function() { return function() { return [d1, d2] }; };
->x173 : () => { (): Base[]; }
+>x173 : () => () => Base[]
 >function() { return function() { return [d1, d2] }; } : () => () => (Derived1 | Derived2)[]
 >function() { return [d1, d2] } : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
@@= skipped -8, +8 lines =@@
 >d2 : Derived2
 
 var x174: () => { (): Base[]; } = function() { return function named() { return [d1, d2] }; };
->x174 : () => { (): Base[]; }
+>x174 : () => () => Base[]
 >function() { return function named() { return [d1, d2] }; } : () => () => (Derived1 | Derived2)[]
 >function named() { return [d1, d2] } : () => (Derived1 | Derived2)[]
 >named : () => (Derived1 | Derived2)[]
@@= skipped -16, +16 lines =@@
 >d2 : Derived2
 
 var x176: () => Array<Base> = function() { return [d1, d2]; };
->x176 : () => Array<Base>
+>x176 : () => Base[]
 >function() { return [d1, d2]; } : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
 >d1 : Derived1
@@= skipped -557, +557 lines =@@
 >d2 : Derived2
 
 var x240: { n: { (): Base[]; }; } = { n: () => [d1, d2] };
->x240 : { n: { (): Base[]; }; }
+>x240 : { n: () => Base[]; }
 >n : () => Base[]
 >{ n: () => [d1, d2] } : { n: () => (Derived1 | Derived2)[]; }
 >n : () => (Derived1 | Derived2)[]
@@= skipped -10, +10 lines =@@
 >d2 : Derived2
 
 var x241: { n: { (): Base[]; }; } = { n: function() { return [d1, d2] } };
->x241 : { n: { (): Base[]; }; }
+>x241 : { n: () => Base[]; }
 >n : () => Base[]
 >{ n: function() { return [d1, d2] } } : { n: () => (Derived1 | Derived2)[]; }
 >n : () => (Derived1 | Derived2)[]
@@= skipped -10, +10 lines =@@
 >d2 : Derived2
 
 var x242: { n: { (): Base[]; }; } = { n: function named() { return [d1, d2] } };
->x242 : { n: { (): Base[]; }; }
+>x242 : { n: () => Base[]; }
 >n : () => Base[]
 >{ n: function named() { return [d1, d2] } } : { n: () => (Derived1 | Derived2)[]; }
 >n : () => (Derived1 | Derived2)[]
@@= skipped -20, +20 lines =@@
 >d2 : Derived2
 
 var x244: { n: Array<Base>; } = { n: [d1, d2] };
->x244 : { n: Array<Base>; }
+>x244 : { n: Base[]; }
 >n : Base[]
 >{ n: [d1, d2] } : { n: (Derived1 | Derived2)[]; }
 >n : (Derived1 | Derived2)[]
@@= skipped -54, +54 lines =@@
 >d2 : Derived2
 
 var x252: { (): Base[]; }[] = [() => [d1, d2]];
->x252 : (() => Base[])[]
->[() => [d1, d2]] : (() => (Derived1 | Derived2)[])[]
+>x252 : () => Base[][]
+>[() => [d1, d2]] : () => (Derived1 | Derived2)[][]
 >() => [d1, d2] : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
 >d1 : Derived1
 >d2 : Derived2
 
 var x253: { (): Base[]; }[] = [function() { return [d1, d2] }];
->x253 : (() => Base[])[]
->[function() { return [d1, d2] }] : (() => (Derived1 | Derived2)[])[]
+>x253 : () => Base[][]
+>[function() { return [d1, d2] }] : () => (Derived1 | Derived2)[][]
 >function() { return [d1, d2] } : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
 >d1 : Derived1
 >d2 : Derived2
 
 var x254: { (): Base[]; }[] = [function named() { return [d1, d2] }];
->x254 : (() => Base[])[]
->[function named() { return [d1, d2] }] : (() => (Derived1 | Derived2)[])[]
+>x254 : () => Base[][]
+>[function named() { return [d1, d2] }] : () => (Derived1 | Derived2)[][]
 >function named() { return [d1, d2] } : () => (Derived1 | Derived2)[]
 >named : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
@@= skipped -758, +758 lines =@@
 >d2 : Derived2
 
 function x324(n: { (): Base[]; }) { }; x324(() => [d1, d2]);
->x324 : (n: { (): Base[]; }) => void
+>x324 : (n: () => Base[]) => void
 >n : () => Base[]
 >x324(() => [d1, d2]) : void
->x324 : (n: { (): Base[]; }) => void
+>x324 : (n: () => Base[]) => void
 >() => [d1, d2] : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
 >d1 : Derived1
 >d2 : Derived2
 
 function x325(n: { (): Base[]; }) { }; x325(function() { return [d1, d2] });
->x325 : (n: { (): Base[]; }) => void
+>x325 : (n: () => Base[]) => void
 >n : () => Base[]
 >x325(function() { return [d1, d2] }) : void
->x325 : (n: { (): Base[]; }) => void
+>x325 : (n: () => Base[]) => void
 >function() { return [d1, d2] } : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
 >d1 : Derived1
 >d2 : Derived2
 
 function x326(n: { (): Base[]; }) { }; x326(function named() { return [d1, d2] });
->x326 : (n: { (): Base[]; }) => void
+>x326 : (n: () => Base[]) => void
 >n : () => Base[]
 >x326(function named() { return [d1, d2] }) : void
->x326 : (n: { (): Base[]; }) => void
+>x326 : (n: () => Base[]) => void
 >function named() { return [d1, d2] } : () => (Derived1 | Derived2)[]
 >named : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
@@= skipped -40, +40 lines =@@
 >d2 : Derived2
 
 function x328(n: Array<Base>) { }; x328([d1, d2]);
->x328 : (n: Array<Base>) => void
+>x328 : (n: Base[]) => void
 >n : Base[]
 >x328([d1, d2]) : void
->x328 : (n: Array<Base>) => void
+>x328 : (n: Base[]) => void
 >[d1, d2] : (Derived1 | Derived2)[]
 >d1 : Derived1
 >d2 : Derived2
@@= skipped -91, +91 lines =@@
 >d2 : Derived2
 
 var x336 = (n: { (): Base[]; }) => n; x336(() => [d1, d2]);
->x336 : (n: { (): Base[]; }) => () => Base[]
->(n: { (): Base[]; }) => n : (n: { (): Base[]; }) => () => Base[]
+>x336 : (n: () => Base[]) => () => Base[]
+>(n: { (): Base[]; }) => n : (n: () => Base[]) => () => Base[]
 >n : () => Base[]
 >n : () => Base[]
 >x336(() => [d1, d2]) : () => Base[]
->x336 : (n: { (): Base[]; }) => () => Base[]
+>x336 : (n: () => Base[]) => () => Base[]
 >() => [d1, d2] : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
 >d1 : Derived1
 >d2 : Derived2
 
 var x337 = (n: { (): Base[]; }) => n; x337(function() { return [d1, d2] });
->x337 : (n: { (): Base[]; }) => () => Base[]
->(n: { (): Base[]; }) => n : (n: { (): Base[]; }) => () => Base[]
+>x337 : (n: () => Base[]) => () => Base[]
+>(n: { (): Base[]; }) => n : (n: () => Base[]) => () => Base[]
 >n : () => Base[]
 >n : () => Base[]
 >x337(function() { return [d1, d2] }) : () => Base[]
->x337 : (n: { (): Base[]; }) => () => Base[]
+>x337 : (n: () => Base[]) => () => Base[]
 >function() { return [d1, d2] } : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
 >d1 : Derived1
 >d2 : Derived2
 
 var x338 = (n: { (): Base[]; }) => n; x338(function named() { return [d1, d2] });
->x338 : (n: { (): Base[]; }) => () => Base[]
->(n: { (): Base[]; }) => n : (n: { (): Base[]; }) => () => Base[]
+>x338 : (n: () => Base[]) => () => Base[]
+>(n: { (): Base[]; }) => n : (n: () => Base[]) => () => Base[]
 >n : () => Base[]
 >n : () => Base[]
 >x338(function named() { return [d1, d2] }) : () => Base[]
->x338 : (n: { (): Base[]; }) => () => Base[]
+>x338 : (n: () => Base[]) => () => Base[]
 >function named() { return [d1, d2] } : () => (Derived1 | Derived2)[]
 >named : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
@@= skipped -48, +48 lines =@@
 >d2 : Derived2
 
 var x340 = (n: Array<Base>) => n; x340([d1, d2]);
->x340 : (n: Array<Base>) => Base[]
->(n: Array<Base>) => n : (n: Array<Base>) => Base[]
+>x340 : (n: Base[]) => Base[]
+>(n: Array<Base>) => n : (n: Base[]) => Base[]
 >n : Base[]
 >n : Base[]
 >x340([d1, d2]) : Base[]
->x340 : (n: Array<Base>) => Base[]
+>x340 : (n: Base[]) => Base[]
 >[d1, d2] : (Derived1 | Derived2)[]
 >d1 : Derived1
 >d2 : Derived2
@@= skipped -98, +98 lines =@@
 >d2 : Derived2
 
 var x348 = function(n: { (): Base[]; }) { }; x348(() => [d1, d2]);
->x348 : (n: { (): Base[]; }) => void
->function(n: { (): Base[]; }) { } : (n: { (): Base[]; }) => void
+>x348 : (n: () => Base[]) => void
+>function(n: { (): Base[]; }) { } : (n: () => Base[]) => void
 >n : () => Base[]
 >x348(() => [d1, d2]) : void
->x348 : (n: { (): Base[]; }) => void
+>x348 : (n: () => Base[]) => void
 >() => [d1, d2] : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
 >d1 : Derived1
 >d2 : Derived2
 
 var x349 = function(n: { (): Base[]; }) { }; x349(function() { return [d1, d2] });
->x349 : (n: { (): Base[]; }) => void
->function(n: { (): Base[]; }) { } : (n: { (): Base[]; }) => void
+>x349 : (n: () => Base[]) => void
+>function(n: { (): Base[]; }) { } : (n: () => Base[]) => void
 >n : () => Base[]
 >x349(function() { return [d1, d2] }) : void
->x349 : (n: { (): Base[]; }) => void
+>x349 : (n: () => Base[]) => void
 >function() { return [d1, d2] } : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
 >d1 : Derived1
 >d2 : Derived2
 
 var x350 = function(n: { (): Base[]; }) { }; x350(function named() { return [d1, d2] });
->x350 : (n: { (): Base[]; }) => void
->function(n: { (): Base[]; }) { } : (n: { (): Base[]; }) => void
+>x350 : (n: () => Base[]) => void
+>function(n: { (): Base[]; }) { } : (n: () => Base[]) => void
 >n : () => Base[]
 >x350(function named() { return [d1, d2] }) : void
->x350 : (n: { (): Base[]; }) => void
+>x350 : (n: () => Base[]) => void
 >function named() { return [d1, d2] } : () => (Derived1 | Derived2)[]
 >named : () => (Derived1 | Derived2)[]
 >[d1, d2] : (Derived1 | Derived2)[]
@@= skipped -44, +44 lines =@@
 >d2 : Derived2
 
 var x352 = function(n: Array<Base>) { }; x352([d1, d2]);
->x352 : (n: Array<Base>) => void
->function(n: Array<Base>) { } : (n: Array<Base>) => void
+>x352 : (n: Base[]) => void
+>function(n: Array<Base>) { } : (n: Base[]) => void
 >n : Base[]
 >x352([d1, d2]) : void
->x352 : (n: Array<Base>) => void
+>x352 : (n: Base[]) => void
 >[d1, d2] : (Derived1 | Derived2)[]
 >d1 : Derived1
 >d2 : Derived2

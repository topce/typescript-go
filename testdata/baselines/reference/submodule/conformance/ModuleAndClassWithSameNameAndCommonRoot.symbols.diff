--- old.ModuleAndClassWithSameNameAndCommonRoot.symbols
+++ new.ModuleAndClassWithSameNameAndCommonRoot.symbols
@@= skipped -27, +27 lines =@@
 >y : Symbol(y, Decl(classPoint.ts, 3, 30))
 
             this.x = x;
->this.x : Symbol(Point.x, Decl(classPoint.ts, 6, 9))
+>this.x : Symbol(x, Decl(classPoint.ts, 6, 9))
 >this : Symbol(Point, Decl(module.ts, 0, 12), Decl(classPoint.ts, 0, 12))
->x : Symbol(Point.x, Decl(classPoint.ts, 6, 9))
+>x : Symbol(x, Decl(classPoint.ts, 6, 9))
 >x : Symbol(x, Decl(classPoint.ts, 3, 20))
 
             this.y = y;
->this.y : Symbol(Point.y, Decl(classPoint.ts, 7, 18))
+>this.y : Symbol(y, Decl(classPoint.ts, 7, 18))
 >this : Symbol(Point, Decl(module.ts, 0, 12), Decl(classPoint.ts, 0, 12))
->y : Symbol(Point.y, Decl(classPoint.ts, 7, 18))
+>y : Symbol(y, Decl(classPoint.ts, 7, 18))
 >y : Symbol(y, Decl(classPoint.ts, 3, 30))
         }
         x: number;
->x : Symbol(Point.x, Decl(classPoint.ts, 6, 9))
+>x : Symbol(x, Decl(classPoint.ts, 6, 9))
 
         y: number;
->y : Symbol(Point.y, Decl(classPoint.ts, 7, 18))
+>y : Symbol(y, Decl(classPoint.ts, 7, 18))
     }
 }
 
@@= skipped -33, +33 lines =@@
 >A : Symbol(A, Decl(simple.ts, 0, 0), Decl(simple.ts, 2, 1))
 
     id: string;
->id : Symbol(A.id, Decl(simple.ts, 5, 9))
+>id : Symbol(id, Decl(simple.ts, 5, 9))
 }
 

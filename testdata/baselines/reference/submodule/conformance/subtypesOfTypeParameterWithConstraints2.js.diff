--- old.subtypesOfTypeParameterWithConstraints2.js
+++ new.subtypesOfTypeParameterWithConstraints2.js
@@= skipped -186, +186 lines =@@
     var r3 = true ? y : new Date();
     var r3 = true ? new Date() : y;
 }
-var C1 = /** @class */ (function () {
-    function C1() {
-    }
-    return C1;
-}());
-var C2 = /** @class */ (function () {
-    function C2() {
-    }
-    return C2;
-}());
+class C1 {
+    foo;
+}
+class C2 {
+    foo;
+}
 var E;
 (function (E) {
     E[E["A"] = 0] = "A";
@@= skipped -18, +14 lines =@@
 (function (f) {
     f.bar = 1;
 })(f || (f = {}));
-var c = /** @class */ (function () {
-    function c() {
-    }
-    return c;
-}());
+class c {
+    baz;
+}
 (function (c) {
     c.bar = 1;
 })(c || (c = {}));
@@= skipped -40, +38 lines =@@
     var r6 = true ? x : { foo: 1 }; // ok
 }
 function f11(x) {
-    var r7 = true ? function () { } : x; // ok
-    var r7 = true ? x : function () { }; // ok
+    var r7 = true ? () => { } : x; // ok
+    var r7 = true ? x : () => { }; // ok
 }
 function f12(x) {
-    var r8 = true ? function (x) { return x; } : x; // ok
-    var r8b = true ? x : function (x) { return x; }; // ok, type parameters not identical across declarations
+    var r8 = true ? (x) => { return x; } : x; // ok
+    var r8b = true ? x : (x) => { return x; }; // ok, type parameters not identical across declarations
 }
 function f13(x) {
     var i1;

--- old.constructorFunctions.types
+++ new.constructorFunctions.types
@@= skipped -1, +1 lines =@@
 
 === index.js ===
 function C1() {
->C1 : typeof C1
+>C1 : () => any
 
     if (!(this instanceof C1)) return new C1();
 >!(this instanceof C1) : boolean
 >(this instanceof C1) : boolean
 >this instanceof C1 : boolean
->this : this
->C1 : typeof C1
->new C1() : C1
->C1 : typeof C1
+>this : any
+>C1 : () => any
+>new C1() : any
+>C1 : () => any
 
     this.x = 1;
 >this.x = 1 : 1
 >this.x : any
->this : this
+>this : any
 >x : any
 >1 : 1
 }
 
 const c1_v1 = C1();
->c1_v1 : C1
->C1() : C1
->C1 : typeof C1
+>c1_v1 : any
+>C1() : any
+>C1 : () => any
 
 const c1_v2 = new C1();
->c1_v2 : C1
->new C1() : C1
->C1 : typeof C1
+>c1_v2 : any
+>new C1() : any
+>C1 : () => any
 
 var C2 = function () {
->C2 : typeof C2
->function () {    if (!(this instanceof C2)) return new C2();    this.x = 1;} : typeof C2
+>C2 : () => any
+>function () {    if (!(this instanceof C2)) return new C2();    this.x = 1;} : () => any
 
     if (!(this instanceof C2)) return new C2();
 >!(this instanceof C2) : boolean
 >(this instanceof C2) : boolean
 >this instanceof C2 : boolean
->this : this
->C2 : typeof C2
->new C2() : C2
->C2 : typeof C2
+>this : any
+>C2 : () => any
+>new C2() : any
+>C2 : () => any
 
     this.x = 1;
 >this.x = 1 : 1
 >this.x : any
->this : this
+>this : any
 >x : any
 >1 : 1
 
 };
 
 const c2_v1 = C2();
->c2_v1 : C2
->C2() : C2
->C2 : typeof C2
+>c2_v1 : any
+>C2() : any
+>C2 : () => any
 
 const c2_v2 = new C2();
->c2_v2 : C2
->new C2() : C2
->C2 : typeof C2
+>c2_v2 : any
+>new C2() : any
+>C2 : () => any
 
 /** @class */
 function C3() {
->C3 : typeof C3
+>C3 : () => any
 
     if (!(this instanceof C3)) return new C3();
 >!(this instanceof C3) : boolean
 >(this instanceof C3) : boolean
 >this instanceof C3 : boolean
->this : this
->C3 : typeof C3
->new C3() : C3
->C3 : typeof C3
+>this : any
+>C3 : () => any
+>new C3() : any
+>C3 : () => any
 
 };
 
 const c3_v1 = C3(); // error: @class tag requires 'new'
 >c3_v1 : any
 >C3() : any
->C3 : typeof C3
+>C3 : () => any
 
 const c3_v2 = new C3();
->c3_v2 : C3
->new C3() : C3
->C3 : typeof C3
+>c3_v2 : any
+>new C3() : any
+>C3 : () => any
 
 /** @class */
 var C4 = function () {
->C4 : typeof C4
->function () {    if (!(this instanceof C4)) return new C4();} : typeof C4
+>C4 : () => any
+>function () {    if (!(this instanceof C4)) return new C4();} : () => any
 
     if (!(this instanceof C4)) return new C4();
 >!(this instanceof C4) : boolean
 >(this instanceof C4) : boolean
 >this instanceof C4 : boolean
->this : this
->C4 : typeof C4
->new C4() : C4
->C4 : typeof C4
+>this : any
+>C4 : () => any
+>new C4() : any
+>C4 : () => any
 
 };
 
 const c4_v1 = C4(); // error: @class tag requires 'new'
 >c4_v1 : any
 >C4() : any
->C4 : typeof C4
+>C4 : () => any
 
 const c4_v2 = new C4();
->c4_v2 : C4
->new C4() : C4
->C4 : typeof C4
+>c4_v2 : any
+>new C4() : any
+>C4 : () => any
 
 var c5_v1;
 >c5_v1 : any
@@= skipped -123, +123 lines =@@
 
 new c5_v1();
 >new c5_v1() : any
->c5_v1 : () => void
+>c5_v1 : any
 
 var c5_v2;
 >c5_v2 : any
@@= skipped -11, +11 lines =@@
 >class { } : typeof c5_v2
 
 new c5_v2();
->new c5_v2() : c5_v2
->c5_v2 : typeof c5_v2
+>new c5_v2() : any
+>c5_v2 : any
 
 /** @class */
 function C6() {
->C6 : typeof C6
+>C6 : () => void
 
   this.functions = [x => x, x => x + 1, x => x - 1]
->this.functions = [x => x, x => x + 1, x => x - 1] : ((x: any) => any)[]
+>this.functions = [x => x, x => x + 1, x => x - 1] : (x: any) => any[]
 >this.functions : any
->this : this
+>this : any
 >functions : any
->[x => x, x => x + 1, x => x - 1] : ((x: any) => any)[]
+>[x => x, x => x + 1, x => x - 1] : (x: any) => any[]
 >x => x : (x: any) => any
 >x : any
 >x : any
@@= skipped -30, +30 lines =@@
 };
 
 var c6_v1 = new C6();
->c6_v1 : C6
->new C6() : C6
->C6 : typeof C6
+>c6_v1 : any
+>new C6() : any
+>C6 : () => void
 
 
 /**
@@= skipped -10, +10 lines =@@
  * @param {number} num
  */
 function C7(num) {}
->C7 : typeof C7
->num : number
+>C7 : (num: any) => void
+>num : any
 
 var c7_v1 = new C7();
->c7_v1 : C7
->new C7() : C7
->C7 : typeof C7
+>c7_v1 : any
+>new C7() : any
+>C7 : (num: any) => void
 

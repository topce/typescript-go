--- old.checkJsxChildrenProperty15.types
+++ new.checkJsxChildrenProperty15.types
@@= skipped -1, +1 lines =@@
 
 === file.tsx ===
 import React = require('react');
->React : typeof React
+>React : any
 
 const Tag = (x: {}) => <div></div>;
->Tag : (x: {}) => JSX.Element
->(x: {}) => <div></div> : (x: {}) => JSX.Element
+>Tag : (x: {}) => any
+>(x: {}) => <div></div> : (x: {}) => any
 >x : {}
-><div></div> : JSX.Element
+><div></div> : any
 >div : any
 >div : any
 
 // OK
 const k1 = <Tag />;
->k1 : JSX.Element
-><Tag /> : JSX.Element
->Tag : (x: {}) => JSX.Element
+>k1 : any
+><Tag /> : any
+>Tag : (x: {}) => any
 
 const k2 = <Tag></Tag>;
->k2 : JSX.Element
-><Tag></Tag> : JSX.Element
->Tag : (x: {}) => JSX.Element
->Tag : (x: {}) => JSX.Element
+>k2 : any
+><Tag></Tag> : any
+>Tag : (x: {}) => any
+>Tag : (x: {}) => any
 
 // Not OK (excess children)
 const k3 = <Tag children={<div></div>} />;
->k3 : JSX.Element
-><Tag children={<div></div>} /> : JSX.Element
->Tag : (x: {}) => JSX.Element
->children : JSX.Element
-><div></div> : JSX.Element
+>k3 : any
+><Tag children={<div></div>} /> : any
+>Tag : (x: {}) => any
+>children : any
+><div></div> : any
 >div : any
 >div : any
 
 const k4 = <Tag key="1"><div></div></Tag>;
->k4 : JSX.Element
-><Tag key="1"><div></div></Tag> : JSX.Element
->Tag : (x: {}) => JSX.Element
->key : string
-><div></div> : JSX.Element
+>k4 : any
+><Tag key="1"><div></div></Tag> : any
+>Tag : (x: {}) => any
+>key : any
+><div></div> : any
 >div : any
 >div : any
->Tag : (x: {}) => JSX.Element
+>Tag : (x: {}) => any
 
 const k5 = <Tag key="1"><div></div><div></div></Tag>;
->k5 : JSX.Element
-><Tag key="1"><div></div><div></div></Tag> : JSX.Element
->Tag : (x: {}) => JSX.Element
->key : string
-><div></div> : JSX.Element
+>k5 : any
+><Tag key="1"><div></div><div></div></Tag> : any
+>Tag : (x: {}) => any
+>key : any
+><div></div> : any
 >div : any
 >div : any
-><div></div> : JSX.Element
+><div></div> : any
 >div : any
 >div : any
->Tag : (x: {}) => JSX.Element
+>Tag : (x: {}) => any
 

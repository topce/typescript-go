--- old.checkJsxChildrenProperty13.types
+++ new.checkJsxChildrenProperty13.types
@@= skipped -1, +1 lines =@@
 
 === file.tsx ===
 import React = require('react');
->React : typeof React
+>React : any
 
 interface ButtonProp {
     a: number,
@@= skipped -15, +15 lines =@@
 
 class Button extends React.Component<ButtonProp, any> {
 >Button : Button
->React.Component : React.Component<ButtonProp, any>
->React : typeof React
->Component : typeof React.Component
+>React.Component : any
+>React : any
+>Component : any
 
     render() {
->render : () => JSX.Element
+>render : () => any
 
         // Error children are specified twice
         return (<InnerButton {...this.props} children="hi">
->(<InnerButton {...this.props} children="hi">            <div>Hello World</div>            </InnerButton>) : JSX.Element
-><InnerButton {...this.props} children="hi">            <div>Hello World</div>            </InnerButton> : JSX.Element
+>(<InnerButton {...this.props} children="hi">            <div>Hello World</div>            </InnerButton>) : any
+><InnerButton {...this.props} children="hi">            <div>Hello World</div>            </InnerButton> : any
 >InnerButton : typeof InnerButton
->this.props : ButtonProp & { children?: React.ReactNode; }
+>this.props : any
 >this : this
->props : ButtonProp & { children?: React.ReactNode; }
->children : string
+>props : any
+>children : any
 
             <div>Hello World</div>
-><div>Hello World</div> : JSX.Element
+><div>Hello World</div> : any
 >div : any
 >div : any
 
@@= skipped -34, +34 lines =@@
 
 class InnerButton extends React.Component<InnerButtonProp, any> {
 >InnerButton : InnerButton
->React.Component : React.Component<InnerButtonProp, any>
->React : typeof React
->Component : typeof React.Component
+>React.Component : any
+>React : any
+>Component : any
 
 	render() {
->render : () => JSX.Element
+>render : () => any
 
 		return (<button>Hello</button>);
->(<button>Hello</button>) : JSX.Element
-><button>Hello</button> : JSX.Element
+>(<button>Hello</button>) : any
+><button>Hello</button> : any
 >button : any
 >button : any
 	}

--- old.thisPropertyAssignment.types
+++ new.thisPropertyAssignment.types
@@= skipped -9, +9 lines =@@
 
 this.x = {};
 >this.x = {} : {}
->this.x : {} | undefined
+>this.x : any
 >this : typeof globalThis
->x : {} | undefined
+>x : any
 >{} : {}
 
 this.x.y = {};
 >this.x.y = {} : {}
 >this.x.y : any
->this.x : {}
+>this.x : any
 >this : typeof globalThis
->x : {}
+>x : any
 >y : any
 >{} : {}
 
 this["y"] = {};
 >this["y"] = {} : {}
->this["y"] : {} | undefined
+>this["y"] : any
 >this : typeof globalThis
 >"y" : "y"
 >{} : {}
@@= skipped -24, +24 lines =@@
 this["y"]["z"] = {};
 >this["y"]["z"] = {} : {}
 >this["y"]["z"] : any
->this["y"] : {}
+>this["y"] : any
 >this : typeof globalThis
 >"y" : "y"
 >"z" : "z"
@@= skipped -8, +8 lines =@@
 
 /** @constructor */
 function F() {
->F : typeof F
+>F : () => void
 
   this.a = {};
 >this.a = {} : {}
 >this.a : any
->this : this
+>this : any
 >a : any
 >{} : {}
 
   this.a.b = {};
 >this.a.b = {} : {}
 >this.a.b : any
->this.a : {}
->this : this
->a : {}
+>this.a : any
+>this : any
+>a : any
 >b : any
 >{} : {}
 
   this["b"] = {};
 >this["b"] = {} : {}
 >this["b"] : any
->this : this
+>this : any
 >"b" : "b"
 >{} : {}
 
   this["b"]["c"] = {};
 >this["b"]["c"] = {} : {}
 >this["b"]["c"] : any
->this["b"] : {}
->this : this
+>this["b"] : any
+>this : any
 >"b" : "b"
 >"c" : "c"
 >{} : {}
 }
 
 const f = new F();
->f : F
->new F() : F
->F : typeof F
+>f : any
+>new F() : any
+>F : () => void
 
 f.a;
->f.a : {}
->f : F
->a : {}
+>f.a : any
+>f : any
+>a : any
 
 f.b;
->f.b : {}
->f : F
->b : {}
+>f.b : any
+>f : any
+>b : any
 

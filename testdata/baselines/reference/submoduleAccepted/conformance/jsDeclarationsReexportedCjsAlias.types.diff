--- old.jsDeclarationsReexportedCjsAlias.types
+++ new.jsDeclarationsReexportedCjsAlias.types
@@= skipped -1, +1 lines =@@
 
 === main.js ===
 const { SomeClass, SomeClass: Another } = require('./lib');
->SomeClass : typeof SomeClass
 >SomeClass : any
->Another : typeof SomeClass
->require('./lib') : typeof import("lib")
+>SomeClass : any
+>Another : any
+>require('./lib') : any
 >require : any
 >'./lib' : "./lib"
 
 module.exports = {
->module.exports = {    SomeClass,    Another} : typeof module.exports
->module.exports : typeof module.exports
->module : { exports: typeof module.exports; }
->exports : typeof module.exports
->{    SomeClass,    Another} : { SomeClass: typeof SomeClass; Another: typeof SomeClass; }
+>module.exports = {    SomeClass,    Another} : { SomeClass: any; Another: any; }
+>module.exports : any
+>module : any
+>exports : any
+>{    SomeClass,    Another} : { SomeClass: any; Another: any; }
 
     SomeClass,
->SomeClass : typeof SomeClass
+>SomeClass : any
 
     Another
->Another : typeof SomeClass
+>Another : any
 }
-=== lib.js ===
-/**
- * @param {string} a
- */
-function bar(a) {
->bar : (a: string) => string
->a : string
-
-    return a + a;
->a + a : string
->a : string
->a : string
-}
-
-class SomeClass {
->SomeClass : SomeClass
-
-    a() {
->a : () => number
-
-        return 1;
->1 : 1
-    }
-}
-
-module.exports = {
->module.exports = {    bar,    SomeClass} : typeof module.exports
->module.exports : typeof module.exports
->module : { exports: typeof module.exports; }
->exports : typeof module.exports
->{    bar,    SomeClass} : { bar: (a: string) => string; SomeClass: typeof SomeClass; }
-
-    bar,
->bar : (a: string) => string
-
-    SomeClass
->SomeClass : typeof SomeClass
-}

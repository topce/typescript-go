--- old.importAliasModuleExports.types
+++ new.importAliasModuleExports.types
@@= skipped -9, +9 lines =@@
 }
 module.exports = Alias;
 >module.exports = Alias : typeof Alias
->module.exports : typeof Alias
->module : { exports: typeof Alias; }
->exports : typeof Alias
+>module.exports : any
+>module : any
+>exports : any
 >Alias : typeof Alias
 
 === main.js ===
 import A from './mod1'
->A : typeof A
+>A : any
 
 A.prototype.foo = 0
 >A.prototype.foo = 0 : 0
 >A.prototype.foo : any
->A.prototype : A
->A : typeof A
->prototype : A
+>A.prototype : any
+>A : any
+>prototype : any
 >foo : any
 >0 : 0
 
 A.prototype.func = function() { this._func = 0; }
 >A.prototype.func = function() { this._func = 0; } : () => void
 >A.prototype.func : any
->A.prototype : A
->A : typeof A
->prototype : A
+>A.prototype : any
+>A : any
+>prototype : any
 >func : any
 >function() { this._func = 0; } : () => void
 >this._func = 0 : 0
 >this._func : any
->this : A
+>this : any
 >_func : any
 >0 : 0
 
 Object.defineProperty(A.prototype, "def", { value: 0 });
->Object.defineProperty(A.prototype, "def", { value: 0 }) : A
+>Object.defineProperty(A.prototype, "def", { value: 0 }) : any
 >Object.defineProperty : <T>(o: T, p: PropertyKey, attributes: PropertyDescriptor & ThisType<any>) => T
 >Object : ObjectConstructor
 >defineProperty : <T>(o: T, p: PropertyKey, attributes: PropertyDescriptor & ThisType<any>) => T
->A.prototype : A
->A : typeof A
->prototype : A
+>A.prototype : any
+>A : any
+>prototype : any
 >"def" : "def"
 >{ value: 0 } : { value: number; }
 >value : number
 >0 : 0
 
 new A().bar
->new A().bar : () => number
->new A() : A
->A : typeof A
->bar : () => number
+>new A().bar : any
+>new A() : any
+>A : any
+>bar : any
 
 new A().foo
 >new A().foo : any
->new A() : A
->A : typeof A
+>new A() : any
+>A : any
 >foo : any
 
 new A().func()
 >new A().func() : any
 >new A().func : any
->new A() : A
->A : typeof A
+>new A() : any
+>A : any
 >func : any
 
 new A().def
 >new A().def : any
->new A() : A
->A : typeof A
+>new A() : any
+>A : any
 >def : any
 

--- old.tsxStatelessFunctionComponentOverload2.errors.txt
+++ new.tsxStatelessFunctionComponentOverload2.errors.txt
@@= skipped -0, +-1 lines =@@
-<no content>
@@= skipped --1, +1 lines =@@
+error TS2318: Cannot find global type 'Array'.
+error TS2318: Cannot find global type 'Function'.
+error TS2318: Cannot find global type 'IArguments'.
+error TS2318: Cannot find global type 'RegExp'.
+error TS2318: Cannot find global type 'String'.
+error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+file.tsx(1,24): error TS2307: Cannot find module 'react' or its corresponding type declarations.
+file.tsx(2,30): error TS2503: Cannot find namespace 'JSX'.
+file.tsx(3,58): error TS2503: Cannot find namespace 'JSX'.
+
+
+!!! error TS2318: Cannot find global type 'Array'.
+!!! error TS2318: Cannot find global type 'Function'.
+!!! error TS2318: Cannot find global type 'IArguments'.
+!!! error TS2318: Cannot find global type 'RegExp'.
+!!! error TS2318: Cannot find global type 'String'.
+!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+==== file.tsx (3 errors) ====
+    import React = require('react')
+                           ~~~~~~~
+!!! error TS2307: Cannot find module 'react' or its corresponding type declarations.
+    declare function OneThing(): JSX.Element;
+                                 ~~~
+!!! error TS2503: Cannot find namespace 'JSX'.
+    declare function OneThing(l: {yy: number, yy1: string}): JSX.Element;
+                                                             ~~~
+!!! error TS2503: Cannot find namespace 'JSX'.
+    
+    let obj = {
+        yy: 10,
+        yy1: "hello"
+    }
+    
+    let obj1 = {
+        yy: true
+    }
+    
+    let obj2 = {
+        yy: 500,
+        "ignore-prop": "hello"
+    }
+    
+    let defaultObj: any;
+    
+    // OK
+    const c1 = <OneThing />
+    const c2 = <OneThing {...obj}/>
+    const c3 = <OneThing {...{}} />
+    const c4 = <OneThing {...obj1} {...obj} />
+    const c5 = <OneThing {...obj1} yy={42} {...{yy1: "hi"}}/>
+    const c6 = <OneThing {...obj1} {...{yy: 10000, yy1: "true"}} />
+    const c7 = <OneThing {...defaultObj} yy {...obj} />;  // No error. should pick second overload
+    const c8 = <OneThing ignore-prop={100} />
+    const c9 = <OneThing {...{ "ignore-prop":200 }} />;
+    const c10 = <OneThing {...obj2} yy1="boo" />;
+    

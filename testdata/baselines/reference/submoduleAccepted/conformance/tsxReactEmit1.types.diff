--- old.tsxReactEmit1.types
+++ new.tsxReactEmit1.types
@@= skipped -14, +14 lines =@@
 >p : any
 
 var selfClosed1 = <div />;
->selfClosed1 : JSX.Element
-><div /> : JSX.Element
+>selfClosed1 : any
+><div /> : any
 >div : any
 
 var selfClosed2 = <div x="1" />;
->selfClosed2 : JSX.Element
-><div x="1" /> : JSX.Element
+>selfClosed2 : any
+><div x="1" /> : any
 >div : any
->x : string
+>x : any
 
 var selfClosed3 = <div x='1' />;
->selfClosed3 : JSX.Element
-><div x='1' /> : JSX.Element
+>selfClosed3 : any
+><div x='1' /> : any
 >div : any
->x : string
+>x : any
 
 var selfClosed4 = <div x="1" y='0' />;
->selfClosed4 : JSX.Element
-><div x="1" y='0' /> : JSX.Element
+>selfClosed4 : any
+><div x="1" y='0' /> : any
 >div : any
->x : string
->y : string
+>x : any
+>y : any
 
 var selfClosed5 = <div x={0} y='0' />;
->selfClosed5 : JSX.Element
-><div x={0} y='0' /> : JSX.Element
+>selfClosed5 : any
+><div x={0} y='0' /> : any
 >div : any
->x : number
+>x : any
 >0 : 0
->y : string
+>y : any
 
 var selfClosed6 = <div x={"1"} y='0' />;
->selfClosed6 : JSX.Element
-><div x={"1"} y='0' /> : JSX.Element
+>selfClosed6 : any
+><div x={"1"} y='0' /> : any
 >div : any
->x : string
+>x : any
 >"1" : "1"
->y : string
+>y : any
 
 var selfClosed7 = <div x={p} y='p' b />;
->selfClosed7 : JSX.Element
-><div x={p} y='p' b /> : JSX.Element
+>selfClosed7 : any
+><div x={p} y='p' b /> : any
 >div : any
 >x : any
 >p : any
->y : string
->b : true
+>y : any
+>b : any
 
 var openClosed1 = <div></div>;
->openClosed1 : JSX.Element
-><div></div> : JSX.Element
+>openClosed1 : any
+><div></div> : any
 >div : any
 >div : any
 
 var openClosed2 = <div n='m'>foo</div>;
->openClosed2 : JSX.Element
-><div n='m'>foo</div> : JSX.Element
+>openClosed2 : any
+><div n='m'>foo</div> : any
 >div : any
->n : string
+>n : any
 >div : any
 
 var openClosed3 = <div n='m'>{p}</div>;
->openClosed3 : JSX.Element
-><div n='m'>{p}</div> : JSX.Element
+>openClosed3 : any
+><div n='m'>{p}</div> : any
 >div : any
->n : string
+>n : any
 >p : any
 >div : any
 
 var openClosed4 = <div n='m'>{p < p}</div>;
->openClosed4 : JSX.Element
-><div n='m'>{p < p}</div> : JSX.Element
+>openClosed4 : any
+><div n='m'>{p < p}</div> : any
 >div : any
->n : string
+>n : any
 >p < p : boolean
 >p : any
 >p : any
 >div : any
 
 var openClosed5 = <div n='m' b>{p > p}</div>;
->openClosed5 : JSX.Element
-><div n='m' b>{p > p}</div> : JSX.Element
+>openClosed5 : any
+><div n='m' b>{p > p}</div> : any
 >div : any
->n : string
->b : true
+>n : any
+>b : any
 >p > p : boolean
 >p : any
 >p : any
@@= skipped -97, +97 lines =@@
 >f : () => void
 
 		var rewrites1 = <div>{() => this}</div>;
->rewrites1 : JSX.Element
-><div>{() => this}</div> : JSX.Element
+>rewrites1 : any
+><div>{() => this}</div> : any
 >div : any
 >() => this : () => this
 >this : this
 >div : any
 
 		var rewrites2 = <div>{[p, ...p, p]}</div>;
->rewrites2 : JSX.Element
-><div>{[p, ...p, p]}</div> : JSX.Element
+>rewrites2 : any
+><div>{[p, ...p, p]}</div> : any
 >div : any
 >[p, ...p, p] : any[]
 >p : any
@@= skipped -19, +19 lines =@@
 >div : any
 
 		var rewrites3 = <div>{{p}}</div>;
->rewrites3 : JSX.Element
-><div>{{p}}</div> : JSX.Element
+>rewrites3 : any
+><div>{{p}}</div> : any
 >div : any
 >{p} : { p: any; }
 >p : any
 >div : any
 
 		var rewrites4 = <div a={() => this}></div>;
->rewrites4 : JSX.Element
-><div a={() => this}></div> : JSX.Element
+>rewrites4 : any
+><div a={() => this}></div> : any
 >div : any
->a : () => this
+>a : any
 >() => this : () => this
 >this : this
 >div : any
 
 		var rewrites5 = <div a={[p, ...p, p]}></div>;
->rewrites5 : JSX.Element
-><div a={[p, ...p, p]}></div> : JSX.Element
+>rewrites5 : any
+><div a={[p, ...p, p]}></div> : any
 >div : any
->a : any[]
+>a : any
 >[p, ...p, p] : any[]
 >p : any
 >...p : any
@@= skipped -29, +29 lines =@@
 >div : any
 
 		var rewrites6 = <div a={{p}}></div>;
->rewrites6 : JSX.Element
-><div a={{p}}></div> : JSX.Element
+>rewrites6 : any
+><div a={{p}}></div> : any
 >div : any
->a : { p: any; }
+>a : any
 >{p} : { p: any; }
 >p : any
 >div : any
@@= skipped -11, +11 lines =@@
 }
 
 var whitespace1 = <div>      </div>;
->whitespace1 : JSX.Element
-><div>      </div> : JSX.Element
+>whitespace1 : any
+><div>      </div> : any
 >div : any
 >div : any
 
 var whitespace2 = <div>  {p}    </div>;
->whitespace2 : JSX.Element
-><div>  {p}    </div> : JSX.Element
+>whitespace2 : any
+><div>  {p}    </div> : any
 >div : any
 >p : any
 >div : any
 
 var whitespace3 = <div>  
->whitespace3 : JSX.Element
-><div>        {p}          </div> : JSX.Element
+>whitespace3 : any
+><div>        {p}          </div> : any
 >div : any
 
       {p}    

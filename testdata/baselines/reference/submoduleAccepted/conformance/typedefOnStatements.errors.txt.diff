--- old.typedefOnStatements.errors.txt
+++ new.typedefOnStatements.errors.txt
@@= skipped -1, +1 lines =@@
 typedefOnStatements.js(31,1): error TS1104: A 'continue' statement can only be used within an enclosing iteration statement.
 typedefOnStatements.js(33,1): error TS1101: 'with' statements are not allowed in strict mode.
 typedefOnStatements.js(33,1): error TS2410: The 'with' statement is not supported. All symbols in a 'with' block will have type 'any'.
+typedefOnStatements.js(71,17): error TS7006: Parameter 'a' implicitly has an 'any' type.
+typedefOnStatements.js(71,19): error TS7006: Parameter 'b' implicitly has an 'any' type.
+typedefOnStatements.js(71,21): error TS7006: Parameter 'c' implicitly has an 'any' type.
+typedefOnStatements.js(71,23): error TS7006: Parameter 'd' implicitly has an 'any' type.
+typedefOnStatements.js(71,25): error TS7006: Parameter 'e' implicitly has an 'any' type.
+typedefOnStatements.js(71,27): error TS7006: Parameter 'f' implicitly has an 'any' type.
+typedefOnStatements.js(71,29): error TS7006: Parameter 'g' implicitly has an 'any' type.
+typedefOnStatements.js(71,31): error TS7006: Parameter 'h' implicitly has an 'any' type.
+typedefOnStatements.js(71,33): error TS7006: Parameter 'i' implicitly has an 'any' type.
+typedefOnStatements.js(71,35): error TS7006: Parameter 'j' implicitly has an 'any' type.
+typedefOnStatements.js(71,37): error TS7006: Parameter 'k' implicitly has an 'any' type.
+typedefOnStatements.js(71,39): error TS7006: Parameter 'l' implicitly has an 'any' type.
+typedefOnStatements.js(71,41): error TS7006: Parameter 'm' implicitly has an 'any' type.
+typedefOnStatements.js(71,43): error TS7006: Parameter 'n' implicitly has an 'any' type.
+typedefOnStatements.js(71,45): error TS7006: Parameter 'o' implicitly has an 'any' type.
+typedefOnStatements.js(71,47): error TS7006: Parameter 'p' implicitly has an 'any' type.
+typedefOnStatements.js(71,49): error TS7006: Parameter 'q' implicitly has an 'any' type.
 
 
-==== typedefOnStatements.js (4 errors) ====
+==== typedefOnStatements.js (21 errors) ====
     /** @typedef {{a: string}} A */
     ;
     /** @typedef {{ b: string }} B */
@@= skipped -82, +99 lines =@@
      * @param {Q} q
      */
     function proof (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q) {
+                    ~
+!!! error TS7006: Parameter 'a' implicitly has an 'any' type.
+                      ~
+!!! error TS7006: Parameter 'b' implicitly has an 'any' type.
+                        ~
+!!! error TS7006: Parameter 'c' implicitly has an 'any' type.
+                          ~
+!!! error TS7006: Parameter 'd' implicitly has an 'any' type.
+                            ~
+!!! error TS7006: Parameter 'e' implicitly has an 'any' type.
+                              ~
+!!! error TS7006: Parameter 'f' implicitly has an 'any' type.
+                                ~
+!!! error TS7006: Parameter 'g' implicitly has an 'any' type.
+                                  ~
+!!! error TS7006: Parameter 'h' implicitly has an 'any' type.
+                                    ~
+!!! error TS7006: Parameter 'i' implicitly has an 'any' type.
+                                      ~
+!!! error TS7006: Parameter 'j' implicitly has an 'any' type.
+                                        ~
+!!! error TS7006: Parameter 'k' implicitly has an 'any' type.
+                                          ~
+!!! error TS7006: Parameter 'l' implicitly has an 'any' type.
+                                            ~
+!!! error TS7006: Parameter 'm' implicitly has an 'any' type.
+                                              ~
+!!! error TS7006: Parameter 'n' implicitly has an 'any' type.
+                                                ~
+!!! error TS7006: Parameter 'o' implicitly has an 'any' type.
+                                                  ~
+!!! error TS7006: Parameter 'p' implicitly has an 'any' type.
+                                                    ~
+!!! error TS7006: Parameter 'q' implicitly has an 'any' type.
         console.log(a.a, b.b, c.c, d.d, e.e, f.f, g.g, h.h, i.i, j.j, k.k, l.l, m.m, n.n, o.o, p.p, q.q)
         /** @type {Alpha} */
         var alpha = { alpha: "aleph" }

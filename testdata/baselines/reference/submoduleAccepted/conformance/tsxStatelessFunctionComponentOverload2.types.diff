--- old.tsxStatelessFunctionComponentOverload2.types
+++ new.tsxStatelessFunctionComponentOverload2.types
@@= skipped -1, +1 lines =@@
 
 === file.tsx ===
 import React = require('react')
->React : typeof React
+>React : any
 
 declare function OneThing(): JSX.Element;
->OneThing : { (): JSX.Element; (l: { yy: number; yy1: string; }): JSX.Element; }
+>OneThing : { (): Element; (l: { yy: number; yy1: string; }): Element; }
 >JSX : any
 
 declare function OneThing(l: {yy: number, yy1: string}): JSX.Element;
->OneThing : { (): JSX.Element; (l: { yy: number; yy1: string; }): JSX.Element; }
+>OneThing : { (): Element; (l: { yy: number; yy1: string; }): Element; }
 >l : { yy: number; yy1: string; }
 >yy : number
 >yy1 : string
@@= skipped -53, +53 lines =@@
 
 // OK
 const c1 = <OneThing />
->c1 : JSX.Element
-><OneThing /> : JSX.Element
->OneThing : { (): JSX.Element; (l: { yy: number; yy1: string; }): JSX.Element; }
+>c1 : any
+><OneThing /> : any
+>OneThing : { (): Element; (l: { yy: number; yy1: string; }): Element; }
 
 const c2 = <OneThing {...obj}/>
->c2 : JSX.Element
-><OneThing {...obj}/> : JSX.Element
->OneThing : { (): JSX.Element; (l: { yy: number; yy1: string; }): JSX.Element; }
+>c2 : any
+><OneThing {...obj}/> : any
+>OneThing : { (): Element; (l: { yy: number; yy1: string; }): Element; }
 >obj : { yy: number; yy1: string; }
 
 const c3 = <OneThing {...{}} />
->c3 : JSX.Element
-><OneThing {...{}} /> : JSX.Element
->OneThing : { (): JSX.Element; (l: { yy: number; yy1: string; }): JSX.Element; }
+>c3 : any
+><OneThing {...{}} /> : any
+>OneThing : { (): Element; (l: { yy: number; yy1: string; }): Element; }
 >{} : {}
 
 const c4 = <OneThing {...obj1} {...obj} />
->c4 : JSX.Element
-><OneThing {...obj1} {...obj} /> : JSX.Element
->OneThing : { (): JSX.Element; (l: { yy: number; yy1: string; }): JSX.Element; }
+>c4 : any
+><OneThing {...obj1} {...obj} /> : any
+>OneThing : { (): Element; (l: { yy: number; yy1: string; }): Element; }
 >obj1 : { yy: boolean; }
 >obj : { yy: number; yy1: string; }
 
 const c5 = <OneThing {...obj1} yy={42} {...{yy1: "hi"}}/>
->c5 : JSX.Element
-><OneThing {...obj1} yy={42} {...{yy1: "hi"}}/> : JSX.Element
->OneThing : { (): JSX.Element; (l: { yy: number; yy1: string; }): JSX.Element; }
+>c5 : any
+><OneThing {...obj1} yy={42} {...{yy1: "hi"}}/> : any
+>OneThing : { (): Element; (l: { yy: number; yy1: string; }): Element; }
 >obj1 : { yy: boolean; }
->yy : number
+>yy : any
 >42 : 42
 >{yy1: "hi"} : { yy1: string; }
 >yy1 : string
 >"hi" : "hi"
 
 const c6 = <OneThing {...obj1} {...{yy: 10000, yy1: "true"}} />
->c6 : JSX.Element
-><OneThing {...obj1} {...{yy: 10000, yy1: "true"}} /> : JSX.Element
->OneThing : { (): JSX.Element; (l: { yy: number; yy1: string; }): JSX.Element; }
+>c6 : any
+><OneThing {...obj1} {...{yy: 10000, yy1: "true"}} /> : any
+>OneThing : { (): Element; (l: { yy: number; yy1: string; }): Element; }
 >obj1 : { yy: boolean; }
 >{yy: 10000, yy1: "true"} : { yy: number; yy1: string; }
 >yy : number
@@= skipped -46, +46 lines =@@
 >"true" : "true"
 
 const c7 = <OneThing {...defaultObj} yy {...obj} />;  // No error. should pick second overload
->c7 : JSX.Element
-><OneThing {...defaultObj} yy {...obj} /> : JSX.Element
->OneThing : { (): JSX.Element; (l: { yy: number; yy1: string; }): JSX.Element; }
+>c7 : any
+><OneThing {...defaultObj} yy {...obj} /> : any
+>OneThing : { (): Element; (l: { yy: number; yy1: string; }): Element; }
 >defaultObj : any
->yy : true
+>yy : any
 >obj : { yy: number; yy1: string; }
 
 const c8 = <OneThing ignore-prop={100} />
->c8 : JSX.Element
-><OneThing ignore-prop={100} /> : JSX.Element
->OneThing : { (): JSX.Element; (l: { yy: number; yy1: string; }): JSX.Element; }
->ignore-prop : number
+>c8 : any
+><OneThing ignore-prop={100} /> : any
+>OneThing : { (): Element; (l: { yy: number; yy1: string; }): Element; }
+>ignore-prop : any
 >100 : 100
 
 const c9 = <OneThing {...{ "ignore-prop":200 }} />;
->c9 : JSX.Element
-><OneThing {...{ "ignore-prop":200 }} /> : JSX.Element
->OneThing : { (): JSX.Element; (l: { yy: number; yy1: string; }): JSX.Element; }
+>c9 : any
+><OneThing {...{ "ignore-prop":200 }} /> : any
+>OneThing : { (): Element; (l: { yy: number; yy1: string; }): Element; }
 >{ "ignore-prop":200 } : { "ignore-prop": number; }
 >"ignore-prop" : number
 >200 : 200
 
 const c10 = <OneThing {...obj2} yy1="boo" />;
->c10 : JSX.Element
-><OneThing {...obj2} yy1="boo" /> : JSX.Element
->OneThing : { (): JSX.Element; (l: { yy: number; yy1: string; }): JSX.Element; }
+>c10 : any
+><OneThing {...obj2} yy1="boo" /> : any
+>OneThing : { (): Element; (l: { yy: number; yy1: string; }): Element; }
 >obj2 : { yy: number; "ignore-prop": string; }
->yy1 : string
+>yy1 : any
 

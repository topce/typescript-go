--- old.propertyAssignmentUseParentType2.types
+++ new.propertyAssignmentUseParentType2.types
@@= skipped -2, +2 lines =@@
 === propertyAssignmentUseParentType2.js ===
 /** @type {{ (): boolean; nuo: 789 }} */
 export const inlined = () => true
->inlined : { (): boolean; nuo: 789; }
->() => true : { (): boolean; nuo: 789; }
+>inlined : { (): boolean; nuo: number; }
+>() => true : { (): boolean; nuo: number; }
 >true : true
 
 inlined.nuo = 789
 >inlined.nuo = 789 : 789
->inlined.nuo : 789
->inlined : { (): boolean; nuo: 789; }
->nuo : 789
+>inlined.nuo : number
+>inlined : { (): boolean; nuo: number; }
+>nuo : number
 >789 : 789
 
 /** @type {{ (): boolean; nuo: 789 }} */
 export const duplicated = () => true
->duplicated : { (): boolean; nuo: 789; }
->() => true : { (): boolean; nuo: 789; }
+>duplicated : { (): boolean; nuo: number; }
+>() => true : { (): boolean; nuo: number; }
 >true : true
 
 /** @type {789} */
 duplicated.nuo = 789
 >duplicated.nuo = 789 : 789
->duplicated.nuo : 789
->duplicated : { (): boolean; nuo: 789; }
->nuo : 789
+>duplicated.nuo : number
+>duplicated : { (): boolean; nuo: number; }
+>nuo : number
 >789 : 789
 
 /** @type {{ (): boolean; nuo: 789 }} */
 export const conflictingDuplicated = () => true
->conflictingDuplicated : { (): boolean; nuo: 789; }
->() => true : { (): boolean; nuo: 1000; }
+>conflictingDuplicated : { (): boolean; nuo: number; }
+>() => true : { (): boolean; nuo: number; }
 >true : true
 
 /** @type {1000} */
 conflictingDuplicated.nuo = 789
 >conflictingDuplicated.nuo = 789 : 789
->conflictingDuplicated.nuo : 789
->conflictingDuplicated : { (): boolean; nuo: 789; }
->nuo : 789
+>conflictingDuplicated.nuo : number
+>conflictingDuplicated : { (): boolean; nuo: number; }
+>nuo : number
 >789 : 789
 

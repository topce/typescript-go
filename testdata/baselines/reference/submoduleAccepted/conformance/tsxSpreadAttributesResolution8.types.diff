--- old.tsxSpreadAttributesResolution8.types
+++ new.tsxSpreadAttributesResolution8.types
@@= skipped -1, +1 lines =@@
 
 === file.tsx ===
 import React = require('react');
->React : typeof React
+>React : any
 
 const obj = {};
 >obj : {}
@@= skipped -40, +40 lines =@@
 
 class OverWriteAttr extends React.Component<Prop, {}> {
 >OverWriteAttr : OverWriteAttr
->React.Component : React.Component<Prop, {}>
->React : typeof React
->Component : typeof React.Component
+>React.Component : any
+>React : any
+>Component : any
 
     render() {
->render : () => JSX.Element
+>render : () => any
 
         return <div>Hello</div>;
-><div>Hello</div> : JSX.Element
+><div>Hello</div> : any
 >div : any
 >div : any
     }
@@= skipped -16, +16 lines =@@
 
 // OK
 let x = <OverWriteAttr {...obj} y overwrite="hi" {...obj1} />
->x : JSX.Element
-><OverWriteAttr {...obj} y overwrite="hi" {...obj1} /> : JSX.Element
+>x : any
+><OverWriteAttr {...obj} y overwrite="hi" {...obj1} /> : any
 >OverWriteAttr : typeof OverWriteAttr
 >obj : {}
->y : true
->overwrite : string
+>y : any
+>overwrite : any
 >obj1 : { x: number; }
 
 let x1 = <OverWriteAttr {...obj1} {...obj3}  />
->x1 : JSX.Element
-><OverWriteAttr {...obj1} {...obj3}  /> : JSX.Element
+>x1 : any
+><OverWriteAttr {...obj1} {...obj3}  /> : any
 >OverWriteAttr : typeof OverWriteAttr
 >obj1 : { x: number; }
 >obj3 : { y: boolean; overwrite: string; }

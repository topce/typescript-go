--- old.jsxReactTestSuite.types
+++ new.jsxReactTestSuite.types
@@= skipped -37, +37 lines =@@
 >hasOwnProperty : any
 
 <div>text</div>;
-><div>text</div> : error
+><div>text</div> : any
 >div : any
 >div : any
 
 <div>
-><div>  {this.props.children}</div> : error
+><div>  {this.props.children}</div> : any
 >div : any
 
   {this.props.children}
@@= skipped -19, +19 lines =@@
 >div : any
 
 <div>
-><div>  <div><br /></div>  <Component>{foo}<br />{bar}</Component>  <br /></div> : error
+><div>  <div><br /></div>  <Component>{foo}<br />{bar}</Component>  <br /></div> : any
 >div : any
 
   <div><br /></div>
-><div><br /></div> : error
+><div><br /></div> : any
 >div : any
-><br /> : error
+><br /> : any
 >br : any
 >div : any
 
   <Component>{foo}<br />{bar}</Component>
-><Component>{foo}<br />{bar}</Component> : error
+><Component>{foo}<br />{bar}</Component> : any
 >Component : any
 >foo : any
-><br /> : error
+><br /> : any
 >br : any
 >bar : any
 >Component : any
 
   <br />
-><br /> : error
+><br /> : any
 >br : any
 
 </div>;
@@= skipped -28, +28 lines =@@
 
 
 <Composite>
-><Composite>    {this.props.children}</Composite> : error
+><Composite>    {this.props.children}</Composite> : any
 >Composite : any
 
     {this.props.children}
@@= skipped -14, +14 lines =@@
 >Composite : any
 
 <Composite>
-><Composite>    <Composite2 /></Composite> : error
+><Composite>    <Composite2 /></Composite> : any
 >Composite : any
 
     <Composite2 />
-><Composite2 /> : error
+><Composite2 /> : any
 >Composite2 : any
 
 </Composite>;
@@= skipped -14, +14 lines =@@
 >x : any
 
   <div
-><div    attr1={      "foo" + "bar"    }    attr2={      "foo" + "bar" +            "baz" + "bug"    }    attr3={      "foo" + "bar" +      "baz" + "bug"      // Extra line here.    }    attr4="baz">  </div> : error
+><div    attr1={      "foo" + "bar"    }    attr2={      "foo" + "bar" +            "baz" + "bug"    }    attr3={      "foo" + "bar" +      "baz" + "bug"      // Extra line here.    }    attr4="baz">  </div> : any
 >div : any
 
     attr1={
->attr1 : string
+>attr1 : any
 
       "foo" + "bar"
 >"foo" + "bar" : string
@@= skipped -12, +12 lines =@@
 >"bar" : "bar"
     }
     attr2={
->attr2 : string
+>attr2 : any
 
       "foo" + "bar" +
 >"foo" + "bar" +            "baz" + "bug" : string
@@= skipped -14, +14 lines =@@
 >"bug" : "bug"
     }
     attr3={
->attr3 : string
+>attr3 : any
 
       "foo" + "bar" +
 >"foo" + "bar" +      "baz" + "bug" : string
@@= skipped -16, +16 lines =@@
       // Extra line here.
     }
     attr4="baz">
->attr4 : string
+>attr4 : any
 
   </div>;
 >div : any
 
 (
->(  <div>    {/* A comment at the beginning */}    {/* A second comment at the beginning */}    <span>      {/* A nested comment */}    </span>    {/* A sandwiched comment */}    <br />    {/* A comment at the end */}    {/* A second comment at the end */}  </div>) : error
+>(  <div>    {/* A comment at the beginning */}    {/* A second comment at the beginning */}    <span>      {/* A nested comment */}    </span>    {/* A sandwiched comment */}    <br />    {/* A comment at the end */}    {/* A second comment at the end */}  </div>) : any
 
   <div>
-><div>    {/* A comment at the beginning */}    {/* A second comment at the beginning */}    <span>      {/* A nested comment */}    </span>    {/* A sandwiched comment */}    <br />    {/* A comment at the end */}    {/* A second comment at the end */}  </div> : error
+><div>    {/* A comment at the beginning */}    {/* A second comment at the beginning */}    <span>      {/* A nested comment */}    </span>    {/* A sandwiched comment */}    <br />    {/* A comment at the end */}    {/* A second comment at the end */}  </div> : any
 >div : any
 
     {/* A comment at the beginning */}
     {/* A second comment at the beginning */}
     <span>
-><span>      {/* A nested comment */}    </span> : error
+><span>      {/* A nested comment */}    </span> : any
 >span : any
 
       {/* A nested comment */}
@@= skipped -24, +24 lines =@@
 
     {/* A sandwiched comment */}
     <br />
-><br /> : error
+><br /> : any
 >br : any
 
     {/* A comment at the end */}
@@= skipped -11, +11 lines =@@
 );
 
 (
->(  <div    /* a multi-line       comment */    attr1="foo">    <span // a double-slash comment      attr2="bar"    />  </div>) : error
+>(  <div    /* a multi-line       comment */    attr1="foo">    <span // a double-slash comment      attr2="bar"    />  </div>) : any
 
   <div
-><div    /* a multi-line       comment */    attr1="foo">    <span // a double-slash comment      attr2="bar"    />  </div> : error
+><div    /* a multi-line       comment */    attr1="foo">    <span // a double-slash comment      attr2="bar"    />  </div> : any
 >div : any
 
     /* a multi-line
        comment */
     attr1="foo">
->attr1 : string
+>attr1 : any
 
     <span // a double-slash comment
-><span // a double-slash comment      attr2="bar"    /> : error
+><span // a double-slash comment      attr2="bar"    /> : any
 >span : any
 
       attr2="bar"
->attr2 : string
+>attr2 : any
 
     />
   </div>
@@= skipped -25, +25 lines =@@
 );
 
 <div>&nbsp;</div>;
-><div>&nbsp;</div> : error
+><div>&nbsp;</div> : any
 >div : any
 >div : any
 
 <div>&nbsp; </div>;
-><div>&nbsp; </div> : error
+><div>&nbsp; </div> : any
 >div : any
 >div : any
 
 <hasOwnProperty>testing</hasOwnProperty>;
-><hasOwnProperty>testing</hasOwnProperty> : error
+><hasOwnProperty>testing</hasOwnProperty> : any
 >hasOwnProperty : any
 >hasOwnProperty : any
 
 <Component constructor="foo" />;
-><Component constructor="foo" /> : error
+><Component constructor="foo" /> : any
 >Component : any
->constructor : string
+>constructor : any
 
 <Namespace.Component />;
-><Namespace.Component /> : error
+><Namespace.Component /> : any
 >Namespace.Component : any
 >Namespace : any
 >Component : any
 
 <Namespace.DeepNamespace.Component />;
-><Namespace.DeepNamespace.Component /> : error
+><Namespace.DeepNamespace.Component /> : any
 >Namespace.DeepNamespace.Component : any
 >Namespace.DeepNamespace : any
 >Namespace : any
@@= skipped -34, +34 lines =@@
 >Component : any
 
 <Component { ... x } y
-><Component { ... x } y={2 } z /> : error
+><Component { ... x } y={2 } z /> : any
 >Component : any
 >x : any
->y : number
+>y : any
 
 ={2 } z />;
 >2 : 2
->z : true
+>z : any
 
 <Component
-><Component    {...this.props} sound="moo" /> : error
+><Component    {...this.props} sound="moo" /> : any
 >Component : any
 
     {...this.props} sound="moo" />;
 >this.props : any
 >this : typeof globalThis
 >props : any
->sound : string
+>sound : any
 
 <font-face />;
-><font-face /> : error
+><font-face /> : any
 >font-face : any
 
 <Component x={y} />;
-><Component x={y} /> : error
+><Component x={y} /> : any
 >Component : any
 >x : any
 >y : any
 
 <x-component />;
-><x-component /> : error
+><x-component /> : any
 >x-component : any
 
 <Component {...x} />;
-><Component {...x} /> : error
+><Component {...x} /> : any
 >Component : any
 >x : any
 
 <Component { ...x } y={2} />;
-><Component { ...x } y={2} /> : error
+><Component { ...x } y={2} /> : any
 >Component : any
 >x : any
->y : number
+>y : any
 >2 : 2
 
 <Component { ... x } y={2} z />;
-><Component { ... x } y={2} z /> : error
+><Component { ... x } y={2} z /> : any
 >Component : any
 >x : any
->y : number
+>y : any
 >2 : 2
->z : true
+>z : any
 
 <Component x={1} {...y} />;
-><Component x={1} {...y} /> : error
+><Component x={1} {...y} /> : any
 >Component : any
->x : number
+>x : any
 >1 : 1
 >y : any
 
 
 <Component x={1} y="2" {...z} {...z}><Child /></Component>;
-><Component x={1} y="2" {...z} {...z}><Child /></Component> : error
+><Component x={1} y="2" {...z} {...z}><Child /></Component> : any
 >Component : any
->x : number
+>x : any
 >1 : 1
->y : string
+>y : any
 >z : any
 >z : any
-><Child /> : error
+><Child /> : any
 >Child : any
 >Component : any
 
 <Component x="1" {...(z = { y: 2 }, z)} z={3}>Text</Component>;
-><Component x="1" {...(z = { y: 2 }, z)} z={3}>Text</Component> : error
+><Component x="1" {...(z = { y: 2 }, z)} z={3}>Text</Component> : any
 >Component : any
->x : string
+>x : any
 >(z = { y: 2 }, z) : any
 >z = { y: 2 }, z : any
 >z = { y: 2 } : { y: number; }
@@= skipped -85, +85 lines =@@
 >y : number
 >2 : 2
 >z : any
->z : number
+>z : any
 >3 : 3
 >Component : any
 

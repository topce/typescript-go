--- old.tsxTypeErrors.types
+++ new.tsxTypeErrors.types
@@= skipped -2, +2 lines =@@
 === tsxTypeErrors.tsx ===
 // A built-in element (OK)
 var a1 = <div id="foo" />;
->a1 : error
-><div id="foo" /> : error
+>a1 : any
+><div id="foo" /> : any
 >div : any
->id : string
+>id : any
 
 // A built-in element with a mistyped property (error)
 var a2 = <img srce="foo.jpg" />
->a2 : error
-><img srce="foo.jpg" /> : error
+>a2 : any
+><img srce="foo.jpg" /> : any
 >img : any
->srce : string
+>srce : any
 
 // A built-in element with a badly-typed attribute value (error)
 var thing = { oops: 100 };
@@= skipped -20, +20 lines =@@
 >100 : 100
 
 var a3 = <div id={thing} />
->a3 : error
-><div id={thing} /> : error
+>a3 : any
+><div id={thing} /> : any
 >div : any
->id : { oops: number; }
+>id : any
 >thing : { oops: number; }
 
 // Mistyped html name (error)
 var e1 = <imag src="bar.jpg" />
->e1 : error
-><imag src="bar.jpg" /> : error
+>e1 : any
+><imag src="bar.jpg" /> : any
 >imag : any
->src : string
+>src : any
 
 // A custom type
 class MyClass {
@@= skipped -36, +36 lines =@@
 // Let's use it
 // TODO: Error on missing 'reqd'
 var b1 = <MyClass reqd={true} />; 
->b1 : error
-><MyClass reqd={true} /> : error
+>b1 : any
+><MyClass reqd={true} /> : any
 >MyClass : typeof MyClass
->reqd : boolean
+>reqd : any
 >true : true
 
 // Mistyped attribute member
@@= skipped -11, +11 lines =@@
 //  Types of property 'y' are incompatible.
 //    Type 'string' is not assignable to type 'number'.
 var b2 = <MyClass pt={{x: 4, y: 'oops'}} />;
->b2 : error
-><MyClass pt={{x: 4, y: 'oops'}} /> : error
+>b2 : any
+><MyClass pt={{x: 4, y: 'oops'}} /> : any
 >MyClass : typeof MyClass
->pt : { x: number; y: string; }
+>pt : any
 >{x: 4, y: 'oops'} : { x: number; y: string; }
 >x : number
 >4 : 4

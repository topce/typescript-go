--- old.typeFromPrototypeAssignment3.types
+++ new.typeFromPrototypeAssignment3.types
@@= skipped -1, +1 lines =@@
 
 === bug26885.js ===
 function Multimap3() {
->Multimap3 : typeof Multimap3
+>Multimap3 : { (): void; prototype: { get: (key: any) => any; }; }
 
     this._map = {};
 >this._map = {} : {}
 >this._map : any
->this : this
+>this : any
 >_map : any
 >{} : {}
 
 };
 
 Multimap3.prototype = {
->Multimap3.prototype = {    /**     * @param {string} key     * @returns {number} the value ok     */    get(key) {        return this._map[key + ''];    }} : { get(key: string): number; }
->Multimap3.prototype : { get(key: string): number; }
->Multimap3 : typeof Multimap3
->prototype : { get(key: string): number; }
->{    /**     * @param {string} key     * @returns {number} the value ok     */    get(key) {        return this._map[key + ''];    }} : { get(key: string): number; }
+>Multimap3.prototype = {    /**     * @param {string} key     * @returns {number} the value ok     */    get(key) {        return this._map[key + ''];    }} : { get: (key: any) => any; }
+>Multimap3.prototype : { get: (key: any) => any; }
+>Multimap3 : { (): void; prototype: { get: (key: any) => any; }; }
+>prototype : { get: (key: any) => any; }
+>{    /**     * @param {string} key     * @returns {number} the value ok     */    get(key) {        return this._map[key + ''];    }} : { get: (key: any) => any; }
 
     /**
      * @param {string} key
      * @returns {number} the value ok
      */
     get(key) {
->get : (key: string) => number
->key : string
+>get : (key: any) => any
+>key : any
 
         return this._map[key + ''];
 >this._map[key + ''] : any
->this._map : {}
->this : this
->_map : {}
+>this._map : any
+>this : { get: (key: any) => any; }
+>_map : any
 >key + '' : string
->key : string
+>key : any
 >'' : ""
     }
 }
 
 /** @type {Multimap3} */
 const map = new Multimap3();
->map : Multimap3
->new Multimap3() : Multimap3
->Multimap3 : typeof Multimap3
+>map : any
+>new Multimap3() : any
+>Multimap3 : { (): void; prototype: { get: (key: any) => any; }; }
 
 const n = map.get('hi')
->n : number
->map.get('hi') : number
->map.get : (key: string) => number
->map : Multimap3
->get : (key: string) => number
+>n : any
+>map.get('hi') : any
+>map.get : any
+>map : any
+>get : any
 >'hi' : "hi"
 

--- old.tsxUnionElementType5.types
+++ new.tsxUnionElementType5.types
@@= skipped -1, +1 lines =@@
 
 === file.tsx ===
 import React = require('react');
->React : typeof React
+>React : any
 
 function EmptySFC1() {
->EmptySFC1 : () => JSX.Element
+>EmptySFC1 : () => any
 
     return <div>hello</div>;
-><div>hello</div> : JSX.Element
+><div>hello</div> : any
 >div : any
 >div : any
 }
 
 function EmptySFC2() {
->EmptySFC2 : () => JSX.Element
+>EmptySFC2 : () => any
 
     return <div>Hello</div>;
-><div>Hello</div> : JSX.Element
+><div>Hello</div> : any
 >div : any
 >div : any
 }
 
 function SFC2(prop: { x: boolean }) {
->SFC2 : (prop: { x: boolean; }) => JSX.Element
+>SFC2 : (prop: { x: boolean; }) => any
 >prop : { x: boolean; }
 >x : boolean
 
     return <h1>World</h1>;
-><h1>World</h1> : JSX.Element
+><h1>World</h1> : any
 >h1 : any
 >h1 : any
 }
 
 var EmptySFCComp = EmptySFC1 || EmptySFC2;
->EmptySFCComp : () => JSX.Element
->EmptySFC1 || EmptySFC2 : () => JSX.Element
->EmptySFC1 : () => JSX.Element
->EmptySFC2 : () => JSX.Element
+>EmptySFCComp : () => any
+>EmptySFC1 || EmptySFC2 : () => any
+>EmptySFC1 : () => any
+>EmptySFC2 : () => any
 
 var SFC2AndEmptyComp = SFC2 || EmptySFC1;
->SFC2AndEmptyComp : (prop: { x: boolean; }) => JSX.Element
->SFC2 || EmptySFC1 : (prop: { x: boolean; }) => JSX.Element
->SFC2 : (prop: { x: boolean; }) => JSX.Element
->EmptySFC1 : () => JSX.Element
+>SFC2AndEmptyComp : (prop: { x: boolean; }) => any
+>SFC2 || EmptySFC1 : (prop: { x: boolean; }) => any
+>SFC2 : (prop: { x: boolean; }) => any
+>EmptySFC1 : () => any
 
 let a = <EmptySFCComp />
->a : JSX.Element
-><EmptySFCComp /> : JSX.Element
->EmptySFCComp : () => JSX.Element
+>a : any
+><EmptySFCComp /> : any
+>EmptySFCComp : () => any
 
 let a1 = <EmptySFCComp data-prop />
->a1 : JSX.Element
-><EmptySFCComp data-prop /> : JSX.Element
->EmptySFCComp : () => JSX.Element
->data-prop : true
+>a1 : any
+><EmptySFCComp data-prop /> : any
+>EmptySFCComp : () => any
+>data-prop : any
 
 let b = <SFC2AndEmptyComp x />
->b : JSX.Element
-><SFC2AndEmptyComp x /> : JSX.Element
->SFC2AndEmptyComp : (prop: { x: boolean; }) => JSX.Element
->x : true
+>b : any
+><SFC2AndEmptyComp x /> : any
+>SFC2AndEmptyComp : (prop: { x: boolean; }) => any
+>x : any
 

--- old.tsxSpreadChildrenInvalidType(jsx=react-jsx,target=es2015).types
+++ new.tsxSpreadChildrenInvalidType(jsx=react-jsx,target=es2015).types
@@= skipped -43, +43 lines =@@
 >div : any
 }
 function TodoList({ todos }: TodoListProps) {
->TodoList : ({ todos }: TodoListProps) => any
+>TodoList : (__0: TodoListProps) => any
 >todos : TodoProp[]
 
     return <div>
@@= skipped -10, +10 lines =@@
         {...<Todo key={todos[0].id} todo={todos[0].todo} />}
 ><Todo key={todos[0].id} todo={todos[0].todo} /> : any
 >Todo : (prop: { key: number; todo: string; }) => any
->key : number
+>key : any
 >todos[0].id : number
 >todos[0] : TodoProp
 >todos : TodoProp[]
 >0 : 0
 >id : number
->todo : string
+>todo : any
 >todos[0].todo : string
 >todos[0] : TodoProp
 >todos : TodoProp[]
@@= skipped -17, +17 lines =@@
 >div : any
 }
 function TodoListNoError({ todos }: TodoListProps) {
->TodoListNoError : ({ todos }: TodoListProps) => any
+>TodoListNoError : (__0: TodoListProps) => any
 >todos : TodoProp[]
 
     // any is not checked
@@= skipped -13, +13 lines =@@
 ><Todo key={todos[0].id} todo={todos[0].todo} /> as any : any
 ><Todo key={todos[0].id} todo={todos[0].todo} /> : any
 >Todo : (prop: { key: number; todo: string; }) => any
->key : number
+>key : any
 >todos[0].id : number
 >todos[0] : TodoProp
 >todos : TodoProp[]
 >0 : 0
 >id : number
->todo : string
+>todo : any
 >todos[0].todo : string
 >todos[0] : TodoProp
 >todos : TodoProp[]
@@= skipped -21, +21 lines =@@
 
     <TodoList {...x}/>
 ><TodoList {...x}/> : any
->TodoList : ({ todos }: TodoListProps) => any
+>TodoList : (__0: TodoListProps) => any
 >x : TodoListProps
 

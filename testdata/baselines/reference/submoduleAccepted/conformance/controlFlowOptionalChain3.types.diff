--- old.controlFlowOptionalChain3.types
+++ new.controlFlowOptionalChain3.types
@@= skipped -5, +5 lines =@@
 // https://github.com/microsoft/TypeScript/issues/56482
 
 import React from "react";
->React : typeof React
+>React : any
 
 interface Foo {
   bar: boolean;
@@= skipped -46, +46 lines =@@
 }
 
 function Test3({ foo }: { foo: Foo | undefined }) {
->Test3 : ({ foo }: { foo: Foo | undefined; }) => JSX.Element
+>Test3 : (__0: { foo: Foo | undefined; }) => any
 >foo : Foo | undefined
 >foo : Foo | undefined
 
   return (
->(    <div>      {foo?.bar === false && "foo"}      {foo.bar ? "true" : "false"}    </div>  ) : JSX.Element
+>(    <div>      {foo?.bar === false && "foo"}      {foo.bar ? "true" : "false"}    </div>  ) : any
 
     <div>
-><div>      {foo?.bar === false && "foo"}      {foo.bar ? "true" : "false"}    </div> : JSX.Element
+><div>      {foo?.bar === false && "foo"}      {foo.bar ? "true" : "false"}    </div> : any
 >div : any
 
       {foo?.bar === false && "foo"}
->foo?.bar === false && "foo" : false | "foo"
+>foo?.bar === false && "foo" : "foo" | false
 >foo?.bar === false : boolean
 >foo?.bar : boolean | undefined
 >foo : Foo | undefined
@@= skipped -35, +35 lines =@@
 }
 
 function test4(options?: { a?: boolean; b?: boolean }) {
->test4 : (options?: { a?: boolean; b?: boolean; }) => void
->options : { a?: boolean; b?: boolean; } | undefined
+>test4 : (options?: { a?: boolean | undefined; b?: boolean | undefined; } | undefined) => void
+>options : { a?: boolean | undefined; b?: boolean | undefined; } | undefined
 >a : boolean | undefined
 >b : boolean | undefined
 
@@= skipped -9, +9 lines =@@
 >options?.a === false || options.b : boolean | undefined
 >options?.a === false : boolean
 >options?.a : boolean | undefined
->options : { a?: boolean; b?: boolean; } | undefined
+>options : { a?: boolean | undefined; b?: boolean | undefined; } | undefined
 >a : boolean | undefined
 >false : false
 >options.b : boolean | undefined
->options : { a?: boolean; b?: boolean; } | undefined
+>options : { a?: boolean | undefined; b?: boolean | undefined; } | undefined
 >b : boolean | undefined
 
     options;
->options : { a?: boolean; b?: boolean; } | undefined
+>options : { a?: boolean | undefined; b?: boolean | undefined; } | undefined
   }
 }
 

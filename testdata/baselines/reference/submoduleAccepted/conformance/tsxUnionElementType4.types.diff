--- old.tsxUnionElementType4.types
+++ new.tsxUnionElementType4.types
@@= skipped -1, +1 lines =@@
 
 === file.tsx ===
 import React = require('react');
->React : typeof React
+>React : any
 
 class RC1 extends React.Component<{x : number}, {}> {
 >RC1 : RC1
->React.Component : React.Component<{ x: number; }, {}>
->React : typeof React
->Component : typeof React.Component
+>React.Component : any
+>React : any
+>Component : any
 >x : number
 
     render() {
@@= skipped -18, +18 lines =@@
 
 class RC2 extends React.Component<{ x: string }, {}> {
 >RC2 : RC2
->React.Component : React.Component<{ x: string; }, {}>
->React : typeof React
->Component : typeof React.Component
+>React.Component : any
+>React : any
+>Component : any
 >x : string
 
     render() {
@@= skipped -16, +16 lines =@@
 
 class RC3 extends React.Component<{}, {}> {
 >RC3 : RC3
->React.Component : React.Component<{}, {}>
->React : typeof React
->Component : typeof React.Component
+>React.Component : any
+>React : any
+>Component : any
 
     render() {
 >render : () => any
@@= skipped -13, +13 lines =@@
 
 class RC4 extends React.Component<{}, {}> {
 >RC4 : RC4
->React.Component : React.Component<{}, {}>
->React : typeof React
->Component : typeof React.Component
+>React.Component : any
+>React : any
+>Component : any
 
     render() {
 >render : () => any
@@= skipped -12, +12 lines =@@
 }
 
 var RCComp = RC1 || RC2;
->RCComp : typeof RC1 | typeof RC2
->RC1 || RC2 : typeof RC1 | typeof RC2
+>RCComp : typeof RC1
+>RC1 || RC2 : typeof RC1
 >RC1 : typeof RC1
 >RC2 : typeof RC2
 
@@= skipped -12, +12 lines =@@
 >RC4 : typeof RC4
 
 var PartRCComp = RC1 || RC4;
->PartRCComp : typeof RC4
->RC1 || RC4 : typeof RC4
+>PartRCComp : typeof RC1
+>RC1 || RC4 : typeof RC1
 >RC1 : typeof RC1
 >RC4 : typeof RC4
 
 // Error
 let a = <RCComp x />;
->a : JSX.Element
-><RCComp x /> : JSX.Element
->RCComp : typeof RC1 | typeof RC2
->x : true
+>a : any
+><RCComp x /> : any
+>RCComp : typeof RC1
+>x : any
 
 let b = <PartRCComp x={10} />
->b : JSX.Element
-><PartRCComp x={10} /> : JSX.Element
->PartRCComp : typeof RC4
->x : number
+>b : any
+><PartRCComp x={10} /> : any
+>PartRCComp : typeof RC1
+>x : any
 >10 : 10
 
 let c = <EmptyRCComp prop />;
->c : JSX.Element
-><EmptyRCComp prop /> : JSX.Element
+>c : any
+><EmptyRCComp prop /> : any
 >EmptyRCComp : typeof RC3
->prop : true
+>prop : any
 

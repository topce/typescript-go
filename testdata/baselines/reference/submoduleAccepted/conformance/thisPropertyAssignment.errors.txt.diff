--- old.thisPropertyAssignment.errors.txt
+++ new.thisPropertyAssignment.errors.txt
@@= skipped -0, +0 lines =@@
-a.js(9,8): error TS2339: Property 'y' does not exist on type '{}'.
-a.js(11,1): error TS7053: Element implicitly has an 'any' type because expression of type '"z"' can't be used to index type '{}'.
-  Property 'z' does not exist on type '{}'.
-a.js(16,10): error TS2339: Property 'b' does not exist on type '{}'.
-a.js(18,3): error TS7053: Element implicitly has an 'any' type because expression of type '"c"' can't be used to index type '{}'.
-  Property 'c' does not exist on type '{}'.
+a.js(8,6): error TS7017: Element implicitly has an 'any' type because type 'typeof globalThis' has no index signature.
+a.js(9,6): error TS7017: Element implicitly has an 'any' type because type 'typeof globalThis' has no index signature.
+a.js(10,1): error TS7053: Element implicitly has an 'any' type because expression of type '"y"' can't be used to index type 'typeof globalThis'.
+  Property 'y' does not exist on type 'typeof globalThis'.
+a.js(11,1): error TS7053: Element implicitly has an 'any' type because expression of type '"y"' can't be used to index type 'typeof globalThis'.
+  Property 'y' does not exist on type 'typeof globalThis'.
+a.js(15,3): error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.
+a.js(16,3): error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.
+a.js(17,3): error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.
+a.js(18,3): error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.
+a.js(21,11): error TS7009: 'new' expression, whose target lacks a construct signature, implicitly has an 'any' type.
 
 
-==== a.js (4 errors) ====
+==== a.js (9 errors) ====
     // This test is asserting that a single property/element access
     // on `this` is a special assignment declaration, but chaining
     // off that does not create additional declarations. Iâ€™m not sure
@@= skipped -14, +19 lines =@@
     // element access assignments to create declarations.
     
     this.x = {};
+         ~
+!!! error TS7017: Element implicitly has an 'any' type because type 'typeof globalThis' has no index signature.
     this.x.y = {};
-           ~
-!!! error TS2339: Property 'y' does not exist on type '{}'.
+         ~
+!!! error TS7017: Element implicitly has an 'any' type because type 'typeof globalThis' has no index signature.
     this["y"] = {};
+    ~~~~~~~~~
+!!! error TS7053: Element implicitly has an 'any' type because expression of type '"y"' can't be used to index type 'typeof globalThis'.
+!!! error TS7053:   Property 'y' does not exist on type 'typeof globalThis'.
     this["y"]["z"] = {};
-    ~~~~~~~~~~~~~~
-!!! error TS7053: Element implicitly has an 'any' type because expression of type '"z"' can't be used to index type '{}'.
-!!! error TS7053:   Property 'z' does not exist on type '{}'.
+    ~~~~~~~~~
+!!! error TS7053: Element implicitly has an 'any' type because expression of type '"y"' can't be used to index type 'typeof globalThis'.
+!!! error TS7053:   Property 'y' does not exist on type 'typeof globalThis'.
     
     /** @constructor */
     function F() {
       this.a = {};
+      ~~~~
+!!! error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.
       this.a.b = {};
-             ~
-!!! error TS2339: Property 'b' does not exist on type '{}'.
+      ~~~~
+!!! error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.
       this["b"] = {};
+      ~~~~
+!!! error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.
       this["b"]["c"] = {};
-      ~~~~~~~~~~~~~~
-!!! error TS7053: Element implicitly has an 'any' type because expression of type '"c"' can't be used to index type '{}'.
-!!! error TS7053:   Property 'c' does not exist on type '{}'.
+      ~~~~
+!!! error TS2683: 'this' implicitly has type 'any' because it does not have a type annotation.
     }
     
     const f = new F();
+              ~~~~~~~
+!!! error TS7009: 'new' expression, whose target lacks a construct signature, implicitly has an 'any' type.
     f.a;
     f.b;
     

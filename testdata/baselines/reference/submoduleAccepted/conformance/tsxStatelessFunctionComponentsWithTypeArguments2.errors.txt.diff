--- old.tsxStatelessFunctionComponentsWithTypeArguments2.errors.txt
+++ new.tsxStatelessFunctionComponentsWithTypeArguments2.errors.txt
@@= skipped -0, +0 lines =@@
-file.tsx(8,15): error TS2322: Type 'T & { "ignore-prop": number; }' is not assignable to type 'IntrinsicAttributes & { prop: number; "ignore-prop": string; }'.
-  Type 'T & { "ignore-prop": number; }' is not assignable to type '{ prop: number; "ignore-prop": string; }'.
-    Types of property '"ignore-prop"' are incompatible.
-      Type 'number' is not assignable to type 'string'.
-file.tsx(13,15): error TS2322: Type 'T' is not assignable to type 'IntrinsicAttributes & { prop: unknown; "ignore-prop": string; }'.
-  Type 'T' is not assignable to type '{ prop: unknown; "ignore-prop": string; }'.
-file.tsx(20,19): error TS2322: Type '(a: number, b: string) => void' is not assignable to type '(arg: number) => void'.
-  Target signature provides too few arguments. Expected 2 or more, but got 1.
-file.tsx(31,52): error TS2322: Type '(val: string) => void' is not assignable to type '(selectedVal: number) => void'.
-  Types of parameters 'val' and 'selectedVal' are incompatible.
-    Type 'number' is not assignable to type 'string'.
+error TS2318: Cannot find global type 'Array'.
+error TS2318: Cannot find global type 'Function'.
+error TS2318: Cannot find global type 'IArguments'.
+error TS2318: Cannot find global type 'RegExp'.
+error TS2318: Cannot find global type 'String'.
+error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+file.tsx(1,24): error TS2307: Cannot find module 'react' or its corresponding type declarations.
+file.tsx(3,78): error TS2503: Cannot find namespace 'JSX'.
+file.tsx(4,55): error TS2503: Cannot find namespace 'JSX'.
+file.tsx(16,54): error TS2503: Cannot find namespace 'JSX'.
+file.tsx(24,13): error TS2304: Cannot find name 'Array'.
+file.tsx(28,67): error TS2503: Cannot find namespace 'JSX'.
 
 
-==== file.tsx (4 errors) ====
+!!! error TS2318: Cannot find global type 'Array'.
+!!! error TS2318: Cannot find global type 'Function'.
+!!! error TS2318: Cannot find global type 'IArguments'.
+!!! error TS2318: Cannot find global type 'RegExp'.
+!!! error TS2318: Cannot find global type 'String'.
+!!! error TS2552: Cannot find name 'Boolean'. Did you mean 'boolean'?
+!!! error TS2552: Cannot find name 'Number'. Did you mean 'number'?
+!!! error TS2552: Cannot find name 'Object'. Did you mean 'object'?
+==== file.tsx (6 errors) ====
     import React = require('react')
+                           ~~~~~~~
+!!! error TS2307: Cannot find module 'react' or its corresponding type declarations.
     
     declare function ComponentSpecific1<U>(l: {prop: U, "ignore-prop": string}): JSX.Element;
+                                                                                 ~~~
+!!! error TS2503: Cannot find namespace 'JSX'.
     declare function ComponentSpecific2<U>(l: {prop: U}): JSX.Element;
+                                                          ~~~
+!!! error TS2503: Cannot find namespace 'JSX'.
     
     // Error
     function Bar<T extends {prop: number}>(arg: T) {
         let a1 = <ComponentSpecific1 {...arg} ignore-prop={10} />;
-                  ~~~~~~~~~~~~~~~~~~
-!!! error TS2322: Type 'T & { "ignore-prop": number; }' is not assignable to type 'IntrinsicAttributes & { prop: number; "ignore-prop": string; }'.
-!!! error TS2322:   Type 'T & { "ignore-prop": number; }' is not assignable to type '{ prop: number; "ignore-prop": string; }'.
-!!! error TS2322:     Types of property '"ignore-prop"' are incompatible.
-!!! error TS2322:       Type 'number' is not assignable to type 'string'.
      }
     
     // Error
     function Baz<T>(arg: T) {
         let a0 = <ComponentSpecific1 {...arg} />
-                  ~~~~~~~~~~~~~~~~~~
-!!! error TS2322: Type 'T' is not assignable to type 'IntrinsicAttributes & { prop: unknown; "ignore-prop": string; }'.
-!!! error TS2322:   Type 'T' is not assignable to type '{ prop: unknown; "ignore-prop": string; }'.
-!!! related TS2208 file.tsx:12:14: This type parameter might need an `extends { prop: unknown; "ignore-prop": string; }` constraint.
-!!! related TS2208 file.tsx:12:14: This type parameter might need an `extends JSX.IntrinsicAttributes & { prop: unknown; "ignore-prop": string; }` constraint.
     }
     
     declare function Link<U>(l: {func: (arg: U)=>void}): JSX.Element;
+                                                         ~~~
+!!! error TS2503: Cannot find namespace 'JSX'.
     
     // Error
     function createLink(func: (a: number, b: string)=>void) {
         let o = <Link func={func} />
-                      ~~~~
-!!! error TS2322: Type '(a: number, b: string) => void' is not assignable to type '(arg: number) => void'.
-!!! error TS2322:   Target signature provides too few arguments. Expected 2 or more, but got 1.
-!!! related TS6500 file.tsx:16:30: The expected type comes from property 'func' which is declared here on type 'IntrinsicAttributes & { func: (arg: number) => void; }'
     }
     
     interface InferParamProp<T> {
         values: Array<T>;
+                ~~~~~
+!!! error TS2304: Cannot find name 'Array'.
         selectHandler: (selectedVal: T) => void;
     }
     
     declare function InferParamComponent<T>(attr: InferParamProp<T>): JSX.Element;
+                                                                      ~~~
+!!! error TS2503: Cannot find namespace 'JSX'.
     
     // Error
     let i = <InferParamComponent values={[1, 2, 3, 4]} selectHandler={(val: string) => { }} />;
-                                                       ~~~~~~~~~~~~~
-!!! error TS2322: Type '(val: string) => void' is not assignable to type '(selectedVal: number) => void'.
-!!! error TS2322:   Types of parameters 'val' and 'selectedVal' are incompatible.
-!!! error TS2322:     Type 'number' is not assignable to type 'string'.
-!!! related TS6500 file.tsx:25:5: The expected type comes from property 'selectHandler' which is declared here on type 'IntrinsicAttributes & InferParamProp<number>'
     

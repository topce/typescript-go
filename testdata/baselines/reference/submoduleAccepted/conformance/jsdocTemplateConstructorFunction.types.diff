--- old.jsdocTemplateConstructorFunction.types
+++ new.jsdocTemplateConstructorFunction.types
@@= skipped -9, +9 lines =@@
  * @template T
  */
 function Zet(t) {
->Zet : typeof Zet
->t : T
+>Zet : (t: any) => void
+>t : any
 
     /** @type {T} */
     this.u
->this.u : T
->this : this
->u : T
+>this.u : any
+>this : any
+>u : any
 
     this.t = t
->this.t = t : T
+>this.t = t : any
 >this.t : any
->this : this
+>this : any
 >t : any
->t : T
+>t : any
 }
 /**
  * @param {T} v
  * @param {Id<T>} id
  */
 Zet.prototype.add = function(v, id) {
->Zet.prototype.add = function(v, id) {    this.u = v || this.t    return id(this.u)} : (v: T, id: Id<T>) => T
+>Zet.prototype.add = function(v, id) {    this.u = v || this.t    return id(this.u)} : (v: any, id: any) => any
 >Zet.prototype.add : any
 >Zet.prototype : any
->Zet : typeof Zet
+>Zet : (t: any) => void
 >prototype : any
 >add : any
->function(v, id) {    this.u = v || this.t    return id(this.u)} : (v: T, id: Id<T>) => T
->v : T
->id : Id<T>
+>function(v, id) {    this.u = v || this.t    return id(this.u)} : (v: any, id: any) => any
+>v : any
+>id : any
 
     this.u = v || this.t
->this.u = v || this.t : T
->this.u : T
->this : this
->u : T
->v || this.t : T
->v : T
->this.t : T
->this : this
->t : T
+>this.u = v || this.t : any
+>this.u : any
+>this : any
+>u : any
+>v || this.t : any
+>v : any
+>this.t : any
+>this : any
+>t : any
 
     return id(this.u)
->id(this.u) : T
->id : Id<T>
->this.u : T
->this : this
->u : T
+>id(this.u) : any
+>id : any
+>this.u : any
+>this : any
+>u : any
 }
 var z = new Zet(1)
->z : Zet<number>
->new Zet(1) : Zet<number>
->Zet : typeof Zet
+>z : any
+>new Zet(1) : any
+>Zet : (t: any) => void
 >1 : 1
 
 z.t = 2
 >z.t = 2 : 2
->z.t : number
->z : Zet<number>
->t : number
+>z.t : any
+>z : any
+>t : any
 >2 : 2
 
 z.u = false
 >z.u = false : false
->z.u : number
->z : Zet<number>
->u : number
+>z.u : any
+>z : any
+>u : any
 >false : false
 

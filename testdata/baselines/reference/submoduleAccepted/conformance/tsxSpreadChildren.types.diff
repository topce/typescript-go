--- old.tsxSpreadChildren.types
+++ new.tsxSpreadChildren.types
@@= skipped -22, +22 lines =@@
 >todos : TodoProp[]
 }
 function Todo(prop: { key: number, todo: string }) {
->Todo : (prop: { key: number; todo: string; }) => JSX.Element
+>Todo : (prop: { key: number; todo: string; }) => any
 >prop : { key: number; todo: string; }
 >key : number
 >todo : string
 
     return <div>{prop.key.toString() + prop.todo}</div>;
-><div>{prop.key.toString() + prop.todo}</div> : JSX.Element
+><div>{prop.key.toString() + prop.todo}</div> : any
 >div : any
 >prop.key.toString() + prop.todo : string
 >prop.key.toString() : string
@@= skipped -21, +21 lines =@@
 >div : any
 }
 function TodoList({ todos }: TodoListProps) {
->TodoList : ({ todos }: TodoListProps) => JSX.Element
+>TodoList : (__0: TodoListProps) => any
 >todos : TodoProp[]
 
     return <div>
-><div>        {...todos.map(todo => <Todo key={todo.id} todo={todo.todo}/>)}    </div> : JSX.Element
+><div>        {...todos.map(todo => <Todo key={todo.id} todo={todo.todo}/>)}    </div> : any
 >div : any
 
         {...todos.map(todo => <Todo key={todo.id} todo={todo.todo}/>)}
->todos.map(todo => <Todo key={todo.id} todo={todo.todo}/>) : JSX.Element[]
+>todos.map(todo => <Todo key={todo.id} todo={todo.todo}/>) : any[]
 >todos.map : <U>(callbackfn: (value: TodoProp, index: number, array: TodoProp[]) => U, thisArg?: any) => U[]
 >todos : TodoProp[]
 >map : <U>(callbackfn: (value: TodoProp, index: number, array: TodoProp[]) => U, thisArg?: any) => U[]
->todo => <Todo key={todo.id} todo={todo.todo}/> : (todo: TodoProp) => JSX.Element
+>todo => <Todo key={todo.id} todo={todo.todo}/> : (todo: TodoProp) => any
 >todo : TodoProp
-><Todo key={todo.id} todo={todo.todo}/> : JSX.Element
->Todo : (prop: { key: number; todo: string; }) => JSX.Element
->key : number
+><Todo key={todo.id} todo={todo.todo}/> : any
+>Todo : (prop: { key: number; todo: string; }) => any
+>key : any
 >todo.id : number
 >todo : TodoProp
 >id : number
->todo : string
+>todo : any
 >todo.todo : string
 >todo : TodoProp
 >todo : string
@@= skipped -32, +32 lines =@@
 >x : TodoListProps
 
     <TodoList {...x}/>
-><TodoList {...x}/> : JSX.Element
->TodoList : ({ todos }: TodoListProps) => JSX.Element
+><TodoList {...x}/> : any
+>TodoList : (__0: TodoListProps) => any
 >x : TodoListProps
 

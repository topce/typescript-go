--- old.prototypePropertyAssignmentMergeAcrossFiles2.types
+++ new.prototypePropertyAssignmentMergeAcrossFiles2.types
@@= skipped -1, +1 lines =@@
 
 === prototypePropertyAssignmentMergeAcrossFiles2.js ===
 var Ns = {}
->Ns : typeof Ns
+>Ns : {}
 >{} : {}
 
 Ns.One = function() {};
->Ns.One = function() {} : typeof One
->Ns.One : typeof One
->Ns : typeof Ns
->One : typeof One
->function() {} : typeof One
+>Ns.One = function() {} : () => void
+>Ns.One : any
+>Ns : {}
+>One : any
+>function() {} : () => void
 
 Ns.Two = function() {};
->Ns.Two = function() {} : typeof Two
->Ns.Two : typeof Two
->Ns : typeof Ns
->Two : typeof Two
->function() {} : typeof Two
+>Ns.Two = function() {} : () => void
+>Ns.Two : any
+>Ns : {}
+>Two : any
+>function() {} : () => void
 
 Ns.One.prototype = {
->Ns.One.prototype = {  ok() {},} : { ok(): void; }
->Ns.One.prototype : { ok(): void; }
->Ns.One : typeof One
->Ns : typeof Ns
->One : typeof One
->prototype : { ok(): void; }
->{  ok() {},} : { ok(): void; }
+>Ns.One.prototype = {  ok() {},} : { ok: () => void; }
+>Ns.One.prototype : any
+>Ns.One : any
+>Ns : {}
+>One : any
+>prototype : any
+>{  ok() {},} : { ok: () => void; }
 
   ok() {},
 >ok : () => void
@@= skipped -32, +32 lines =@@
 };
 Ns.Two.prototype = {
 >Ns.Two.prototype = {} : {}
->Ns.Two.prototype : {}
->Ns.Two : typeof Two
->Ns : typeof Ns
->Two : typeof Two
->prototype : {}
+>Ns.Two.prototype : any
+>Ns.Two : any
+>Ns : {}
+>Two : any
+>prototype : any
 >{} : {}
 }
 
@@= skipped -13, +13 lines =@@
  * @type {Ns.One}
  */
 var one;
->one : One
+>one : any
 
 one.wat;
 >one.wat : any
->one : One
+>one : any
 >wat : any
 
 /**
  * @type {Ns.Two}
  */
 var two;
->two : Two
+>two : any
 
 two.wat;
 >two.wat : any
->two : Two
+>two : any
 >wat : any
 

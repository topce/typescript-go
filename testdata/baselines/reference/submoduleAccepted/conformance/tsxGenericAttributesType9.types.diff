--- old.tsxGenericAttributesType9.types
+++ new.tsxGenericAttributesType9.types
@@= skipped -1, +1 lines =@@
 
 === file.tsx ===
 import React = require('react');
->React : typeof React
+>React : any
 
 export function makeP<P>(Ctor: React.ComponentClass<P>) {
->makeP : <P>(Ctor: React.ComponentClass<P>) => typeof (Anonymous class)
->Ctor : React.ComponentClass<P>
+>makeP : <P>(Ctor: ComponentClass<P>) => typeof (Anonymous class)
+>Ctor : ComponentClass<P>
 >React : any
 
 	return class extends React.PureComponent<P, void> {
 >class extends React.PureComponent<P, void> {		public render(): JSX.Element {			return (				<Ctor {...this.props } />			);		}	} : typeof (Anonymous class)
->React.PureComponent : React.PureComponent<P, void>
->React : typeof React
->PureComponent : typeof React.PureComponent
+>React.PureComponent : any
+>React : any
+>PureComponent : any
 
 		public render(): JSX.Element {
->render : () => JSX.Element
+>render : () => Element
 >JSX : any
 
 			return (
->(				<Ctor {...this.props } />			) : JSX.Element
+>(				<Ctor {...this.props } />			) : any
 
 				<Ctor {...this.props } />
-><Ctor {...this.props } /> : JSX.Element
->Ctor : React.ComponentClass<P>
->this.props : P & { children?: React.ReactNode; }
+><Ctor {...this.props } /> : any
+>Ctor : ComponentClass<P>
+>this.props : any
 >this : this
->props : P & { children?: React.ReactNode; }
+>props : any
 
 			);
 		}

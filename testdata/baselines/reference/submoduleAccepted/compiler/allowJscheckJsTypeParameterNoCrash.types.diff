--- old.allowJscheckJsTypeParameterNoCrash.types
+++ new.allowJscheckJsTypeParameterNoCrash.types
@@= skipped -25, +25 lines =@@
 >a : void
 >vextend({  watch: {    data1(val) {      this.data2 = 1;    },    data2(val) { },  }}) : void
 >vextend : (options: ComponentOptions<{}>) => void
->{  watch: {    data1(val) {      this.data2 = 1;    },    data2(val) { },  }} : { watch: { data1(val: any): void; }; }
+>{  watch: {    data1(val) {      this.data2 = 1;    },    data2(val) { },  }} : { watch: { data1: (val: any) => void; data2: (val: any) => void; }; }
 
   watch: {
->watch : { data1(val: any): void; }
->{    data1(val) {      this.data2 = 1;    },    data2(val) { },  } : { data1(val: any): void; }
+>watch : { data1: (val: any) => void; data2: (val: any) => void; }
+>{    data1(val) {      this.data2 = 1;    },    data2(val) { },  } : { data1: (val: any) => void; data2: (val: any) => void; }
 
     data1(val) {
 >data1 : (val: any) => void
@@= skipped -12, +12 lines =@@
 
       this.data2 = 1;
 >this.data2 = 1 : 1
->this.data2 : (val: any) => void
->this : Record<string, (val: any) => void>
->data2 : (val: any) => void
+>this.data2 : any
+>this : any
+>data2 : any
 >1 : 1
 
     },
     data2(val) { },
->data2 : any
+>data2 : (val: any) => void
 >val : any
   }
 });

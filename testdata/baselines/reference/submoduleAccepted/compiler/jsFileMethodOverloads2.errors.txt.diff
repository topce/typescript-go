--- old.jsFileMethodOverloads2.errors.txt
+++ new.jsFileMethodOverloads2.errors.txt
@@= skipped -0, +-1 lines =@@
-<no content>
@@= skipped --1, +1 lines =@@
+jsFileMethodOverloads2.js(10,10): error TS2339: Property 'value' does not exist on type 'Example'.
+jsFileMethodOverloads2.js(25,24): error TS2339: Property 'value' does not exist on type 'Example'.
+jsFileMethodOverloads2.js(41,25): error TS2339: Property 'value' does not exist on type 'Example'.
+jsFileMethodOverloads2.js(41,39): error TS2339: Property 'value' does not exist on type 'Example'.
+
+
+==== jsFileMethodOverloads2.js (4 errors) ====
+    // Also works if all @overload tags are combined in one comment.
+    /**
+     * @template T
+     */
+     class Example {
+      /**
+       * @param {T} value 
+       */
+      constructor(value) {
+        this.value = value;
+             ~~~~~
+!!! error TS2339: Property 'value' does not exist on type 'Example'.
+      }
+    
+      /**
+       * @overload
+       * @param {Example<number>} this
+       * @returns {'number'}
+       *
+       * @overload
+       * @param {Example<string>} this
+       * @returns {'string'}
+       *
+       * @returns {string}
+       */
+      getTypeName() {
+        return typeof this.value;
+                           ~~~~~
+!!! error TS2339: Property 'value' does not exist on type 'Example'.
+      }
+    
+      /**
+       * @template U
+       * @overload
+       * @param {(y: T) => U} fn
+       * @returns {U}
+       *
+       * @overload
+       * @returns {T}
+       *
+       * @param {(y: T) => unknown} [fn]
+       * @returns {unknown}
+       */
+      transform(fn) {
+        return fn ? fn(this.value) : this.value;
+                            ~~~~~
+!!! error TS2339: Property 'value' does not exist on type 'Example'.
+                                          ~~~~~
+!!! error TS2339: Property 'value' does not exist on type 'Example'.
+      }
+    }
+    

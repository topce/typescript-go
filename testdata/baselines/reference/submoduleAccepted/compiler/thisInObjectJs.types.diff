--- old.thisInObjectJs.types
+++ new.thisInObjectJs.types
@@= skipped -2, +2 lines =@@
 === index.js ===
 export { }
 let obj = {
->obj : { x: number; y: number[]; fun: typeof fun; f2: () => void; f3: typeof (Anonymous function); }
->{  x: 10,  y: [1],  fun: function() {    this.x = 1    this/*1*/  },  f2: function() {    this.x    this/*2*/  },  f3: (function() {    this.x = 1    this/*3*/  }),} : { x: number; y: number[]; fun: typeof fun; f2: () => void; f3: typeof (Anonymous function); }
+>obj : { x: number; y: number[]; fun: () => void; f2: () => void; f3: () => void; }
+>{  x: 10,  y: [1],  fun: function() {    this.x = 1    this/*1*/  },  f2: function() {    this.x    this/*2*/  },  f3: (function() {    this.x = 1    this/*3*/  }),} : { x: number; y: number[]; fun: () => void; f2: () => void; f3: () => void; }
 
   x: 10,
 >x : number
@@= skipped -13, +13 lines =@@
 >1 : 1
 
   fun: function() {
->fun : typeof fun
->function() {    this.x = 1    this/*1*/  } : typeof fun
+>fun : () => void
+>function() {    this.x = 1    this/*1*/  } : () => void
 
     this.x = 1
 >this.x = 1 : 1
->this.x : number
->this : { x: number; y: number[]; fun: typeof fun; f2: () => void; f3: typeof (Anonymous function); }
->x : number
+>this.x : any
+>this : any
+>x : any
 >1 : 1
 
     this/*1*/
->this : { x: number; y: number[]; fun: typeof fun; f2: () => void; f3: typeof (Anonymous function); }
+>this : any
 
   },
   f2: function() {
@@= skipped -19, +19 lines =@@
 >function() {    this.x    this/*2*/  } : () => void
 
     this.x
->this.x : number
->this : { x: number; y: number[]; fun: typeof fun; f2: () => void; f3: typeof (Anonymous function); }
->x : number
+>this.x : any
+>this : any
+>x : any
 
     this/*2*/
->this : { x: number; y: number[]; fun: typeof fun; f2: () => void; f3: typeof (Anonymous function); }
+>this : any
 
   },
   f3: (function() {
->f3 : typeof (Anonymous function)
->(function() {    this.x = 1    this/*3*/  }) : typeof (Anonymous function)
->function() {    this.x = 1    this/*3*/  } : typeof (Anonymous function)
+>f3 : () => void
+>(function() {    this.x = 1    this/*3*/  }) : () => void
+>function() {    this.x = 1    this/*3*/  } : () => void
 
     this.x = 1
 >this.x = 1 : 1

--- old.noParameterReassignmentJSIIFE.types
+++ new.noParameterReassignmentJSIIFE.types
@@= skipped -1, +1 lines =@@
 
 === index.js ===
 self.importScripts = (function (importScripts) {
->self.importScripts = (function (importScripts) {    return function () {        return importScripts.apply(this, arguments);    };})(importScripts) : (...args: string[]) => any
+>self.importScripts = (function (importScripts) {    return function () {        return importScripts.apply(this, arguments);    };})(importScripts) : () => any
 >self.importScripts : (...urls: string[]) => void
 >self : Window & typeof globalThis
 >importScripts : (...urls: string[]) => void
->(function (importScripts) {    return function () {        return importScripts.apply(this, arguments);    };})(importScripts) : (...args: string[]) => any
->(function (importScripts) {    return function () {        return importScripts.apply(this, arguments);    };}) : (importScripts: (...urls: string[]) => void) => (...args: string[]) => any
->function (importScripts) {    return function () {        return importScripts.apply(this, arguments);    };} : (importScripts: (...urls: string[]) => void) => (...args: string[]) => any
+>(function (importScripts) {    return function () {        return importScripts.apply(this, arguments);    };})(importScripts) : () => any
+>(function (importScripts) {    return function () {        return importScripts.apply(this, arguments);    };}) : (importScripts: (...urls: string[]) => void) => () => any
+>function (importScripts) {    return function () {        return importScripts.apply(this, arguments);    };} : (importScripts: (...urls: string[]) => void) => () => any
 >importScripts : (...urls: string[]) => void
 
     return function () {
->function () {        return importScripts.apply(this, arguments);    } : (...args: string[]) => any
+>function () {        return importScripts.apply(this, arguments);    } : () => any
 
         return importScripts.apply(this, arguments);
 >importScripts.apply(this, arguments) : any

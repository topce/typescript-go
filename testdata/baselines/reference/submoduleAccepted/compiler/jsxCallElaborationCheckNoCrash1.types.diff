--- old.jsxCallElaborationCheckNoCrash1.types
+++ new.jsxCallElaborationCheckNoCrash1.types
@@= skipped -0, +0 lines =@@
 //// [tests/cases/compiler/jsxCallElaborationCheckNoCrash1.tsx] ////
 
-=== Performance Stats ===
-Assignability cache: 2,500
-Type Count: 10,000
-Instantiation count: 100,000
-Symbol count: 50,000
-
 === jsxCallElaborationCheckNoCrash1.tsx ===
 /// <reference path="react16.d.ts" />
 
 import * as React from "react";
->React : typeof React
+>React : any
 
 type Tags = "span" | "div";
 >Tags : Tags
 
 export const Hoc = <Tag extends Tags>(
->Hoc : <Tag extends Tags>(TagElement: Tag) => React.SFC
-><Tag extends Tags>(   TagElement: Tag,): React.SFC => {   const Component = () => <TagElement />;   return Component;} : <Tag extends Tags>(TagElement: Tag) => React.SFC
+>Hoc : <Tag extends Tags>(TagElement: Tag) => SFC
+><Tag extends Tags>(   TagElement: Tag,): React.SFC => {   const Component = () => <TagElement />;   return Component;} : <Tag extends Tags>(TagElement: Tag) => SFC
 
    TagElement: Tag,
 >TagElement : Tag
@@= skipped -25, +19 lines =@@
 >React : any
 
    const Component = () => <TagElement />;
->Component : () => JSX.Element
->() => <TagElement /> : () => JSX.Element
-><TagElement /> : JSX.Element
+>Component : () => any
+>() => <TagElement /> : () => any
+><TagElement /> : any
 >TagElement : Tag
 
    return Component;
->Component : () => JSX.Element
+>Component : () => any
 
 };
 

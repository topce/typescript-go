--- old.jsDeclarationsGlobalFileConstFunctionNamed.types
+++ new.jsDeclarationsGlobalFileConstFunctionNamed.types
@@= skipped -1, +1 lines =@@
 
 === file.js ===
 const SomeConstructor = function Named() {
->SomeConstructor : typeof Named
->function Named() {	this.x = 1;} : typeof Named
->Named : typeof Named
+>SomeConstructor : () => void
+>function Named() {	this.x = 1;} : () => void
+>Named : () => void
 
 	this.x = 1;
 >this.x = 1 : 1
 >this.x : any
->this : this
+>this : any
 >x : any
 >1 : 1
 
@@= skipped -27, +27 lines =@@
 >"str" : "str"
 
 const SomeConstructor3 = function Named() {
->SomeConstructor3 : typeof Named
->function Named() {	this.x = 1;} : typeof Named
->Named : typeof Named
+>SomeConstructor3 : { (): void; staticMember: string; }
+>function Named() {	this.x = 1;} : { (): void; staticMember: string; }
+>Named : { (): void; staticMember: string; }
 
 	this.x = 1;
 >this.x = 1 : 1
 >this.x : any
->this : this
+>this : any
 >x : any
 >1 : 1
 
@@= skipped -15, +15 lines =@@
 SomeConstructor3.staticMember = "str";
 >SomeConstructor3.staticMember = "str" : "str"
 >SomeConstructor3.staticMember : string
->SomeConstructor3 : typeof Named
+>SomeConstructor3 : { (): void; staticMember: string; }
 >staticMember : string
 >"str" : "str"
 
 const SelfReference = function Named() {
->SelfReference : typeof Named
->function Named() {    if (!(this instanceof Named)) return new Named();    this.x = 1;} : typeof Named
->Named : typeof Named
+>SelfReference : { (): any; staticMember: string; }
+>function Named() {    if (!(this instanceof Named)) return new Named();    this.x = 1;} : { (): any; staticMember: string; }
+>Named : { (): any; staticMember: string; }
 
     if (!(this instanceof Named)) return new Named();
 >!(this instanceof Named) : boolean
 >(this instanceof Named) : boolean
 >this instanceof Named : boolean
->this : this
->Named : typeof Named
->new Named() : Named
->Named : typeof Named
+>this : any
+>Named : { (): any; staticMember: string; }
+>new Named() : any
+>Named : { (): any; staticMember: string; }
 
     this.x = 1;
 >this.x = 1 : 1
 >this.x : any
->this : this
+>this : any
 >x : any
 >1 : 1
 }
 SelfReference.staticMember = "str";
 >SelfReference.staticMember = "str" : "str"
 >SelfReference.staticMember : string
->SelfReference : typeof Named
+>SelfReference : { (): any; staticMember: string; }
 >staticMember : string
 >"str" : "str"
 

--- old.jsxChildrenSingleChildConfusableWithMultipleChildrenNoError.types
+++ new.jsxChildrenSingleChildConfusableWithMultipleChildrenNoError.types
@@= skipped -3, +3 lines =@@
 /// <reference path="react16.d.ts" />
 
 import * as React from 'react'
->React : typeof React
+>React : any
 
 type Tab = [string, React.ReactNode]  // [tabName, tabContent]
 >Tab : Tab
@@= skipped -12, +12 lines =@@
 }
 
 function TabLayout(props: Props) {
->TabLayout : (props: Props) => JSX.Element
+>TabLayout : (props: Props) => any
 >props : Props
 
     return <div/>
-><div/> : JSX.Element
+><div/> : any
 >div : any
 }
 
 export class App extends React.Component<{}> {
 >App : App
->React.Component : React.Component<{}, {}, any>
->React : typeof React
->Component : typeof React.Component
+>React.Component : any
+>React : any
+>Component : any
 
     render() {
->render : () => JSX.Element
+>render : () => any
 
         return <TabLayout>
-><TabLayout>            {[                ['Users', <div/>],                ['Products', <div/>]            ]}        </TabLayout> : JSX.Element
->TabLayout : (props: Props) => JSX.Element
+><TabLayout>            {[                ['Users', <div/>],                ['Products', <div/>]            ]}        </TabLayout> : any
+>TabLayout : (props: Props) => any
 
             {[
->[                ['Users', <div/>],                ['Products', <div/>]            ] : [string, JSX.Element][]
+>[                ['Users', <div/>],                ['Products', <div/>]            ] : any[][]
 
                 ['Users', <div/>],
->['Users', <div/>] : [string, JSX.Element]
+>['Users', <div/>] : any[]
 >'Users' : "Users"
-><div/> : JSX.Element
+><div/> : any
 >div : any
 
                 ['Products', <div/>]
->['Products', <div/>] : [string, JSX.Element]
+>['Products', <div/>] : any[]
 >'Products' : "Products"
-><div/> : JSX.Element
+><div/> : any
 >div : any
 
             ]}
         </TabLayout>
->TabLayout : (props: Props) => JSX.Element
+>TabLayout : (props: Props) => any
     }
 }

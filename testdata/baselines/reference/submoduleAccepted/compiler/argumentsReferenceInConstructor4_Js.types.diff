--- old.argumentsReferenceInConstructor4_Js.types
+++ new.argumentsReferenceInConstructor4_Js.types
@@= skipped -9, +9 lines =@@
 	 * @param {object} [foo={}]
 	 */
 	constructor(foo = {}) {
->foo : any
+>foo : {}
 >{} : {}
 
 		const key = "bar";
@@= skipped -11, +11 lines =@@
 		 * @type object
 		 */
 		this.foo = foo;
->this.foo = foo : any
+>this.foo = foo : {}
 >this.foo : any
 >this : this
 >foo : any
->foo : any
+>foo : {}
 
 		/**
 		 * @type object
 		 */
 		const arguments = this.arguments;
->arguments : any
+>arguments : { bar: {}; }
 >this.arguments : { bar: {}; }
 >this : this
 >arguments : { bar: {}; }
@@= skipped -19, +19 lines =@@
 		 * @type object
 		 */
 		this.bar = arguments.bar;
->this.bar = arguments.bar : any
+>this.bar = arguments.bar : {}
 >this.bar : any
 >this : this
 >bar : any
->arguments.bar : any
->arguments : any
->bar : any
+>arguments.bar : {}
+>arguments : { bar: {}; }
+>bar : {}
 
 		/**
 		 * @type object
 		 */
 		this.baz = arguments[key];
->this.baz = arguments[key] : any
+>this.baz = arguments[key] : {}
 >this.baz : any
 >this : this
 >baz : any
->arguments[key] : any
->arguments : any
+>arguments[key] : {}
+>arguments : { bar: {}; }
 >key : "bar"
 
 		/**
 		 * @type object
 		 */
 		this.options = arguments;
->this.options = arguments : any
+>this.options = arguments : { bar: {}; }
 >this.options : any
 >this : this
 >options : any
->arguments : any
+>arguments : { bar: {}; }
 	}
 
 	get arguments() {
